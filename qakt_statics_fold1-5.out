本次执行可见 1 块GPU
使用:  cuda
	 max_iter 	 300
	 train_set 	 -1
	 qm_bin_thr 	 0.99
	 seed 	 224
	 optim 	 adam
	 batch_size 	 24
	 lr 	 1e-05
	 maxgradnorm 	 -1
	 final_fc_dim 	 512
	 d_model 	 256
	 d_ff 	 1024
	 dropout 	 0.05
	 n_block 	 1
	 n_head 	 8
	 kq_same 	 1
	 l2 	 1e-05
	 q_embed_dim 	 50
	 qa_embed_dim 	 256
	 memory_size 	 50
	 init_std 	 0.1
	 hidden_dim 	 512
	 lamda_r 	 0.1
	 lamda_w1 	 0.1
	 lamda_w2 	 0.1
	 model 	 qakt_pid
	 dataset 	 statics_pid
	 seqlen 	 200
	 data_dir 	 data/statics_pid
	 data_name 	 statics_pid
	 n_question 	 84
	 n_pid 	 633
	 save 	 statics_pid
	 load 	 statics_pid
=====第 1 次实验=====


train_data length:  435
valid_data length:  145




===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.7122981346990067 	train_auc	 0.7284702110270775
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5696690082550049 	train_loss	 0.5362029075622559
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.717341584421568 	train_auc	 0.7328601917304407
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5340250134468079 	train_loss	 0.510431170463562
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.7111645208116117 	train_auc	 0.7286010302320645
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5401429533958435 	train_loss	 0.5134807825088501
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.7077666860334799 	train_auc	 0.7250959038430808
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5355993509292603 	train_loss	 0.510893702507019
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.7149830527674921 	train_auc	 0.7293677024754084
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5364612936973572 	train_loss	 0.5112811923027039
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.7123552220976939 	train_auc	 0.7279448342700178
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5363900065422058 	train_loss	 0.5112274289131165
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.7134696477249958 	train_auc	 0.7285986559068751
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5350474715232849 	train_loss	 0.5105945467948914
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.713920308347342 	train_auc	 0.7291652381120288
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.535407304763794 	train_loss	 0.510729193687439
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.7111299695439224 	train_auc	 0.7266462763676176
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5345951914787292 	train_loss	 0.5103996396064758
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.7082442846170875 	train_auc	 0.7243130843823502
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5341735482215881 	train_loss	 0.5102578997612
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.7094069071858962 	train_auc	 0.7260072313970649
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.533612847328186 	train_loss	 0.5101382732391357
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.7075209957073971 	train_auc	 0.7245243236069915
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5342551469802856 	train_loss	 0.510265052318573
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.7099520769639315 	train_auc	 0.7267605614332956
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5343651175498962 	train_loss	 0.5102916359901428
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.7133874326952403 	train_auc	 0.7300668655264739
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5352434515953064 	train_loss	 0.5106056332588196
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.7126258106636905 	train_auc	 0.7286219448554709
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5340597033500671 	train_loss	 0.5101791024208069
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.7076458774919057 	train_auc	 0.7249557311305819
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5338903665542603 	train_loss	 0.510141909122467
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.7133847667980384 	train_auc	 0.7299169155679126
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5342850089073181 	train_loss	 0.510229229927063
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.7160506268014103 	train_auc	 0.7327410934116212
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5324357748031616 	train_loss	 0.5107517838478088
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.7152290840804262 	train_auc	 0.7320673553682381
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5362017750740051 	train_loss	 0.5110182762145996
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.7147338099783938 	train_auc	 0.7304225704213876
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5334354043006897 	train_loss	 0.5100408792495728
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.7113874890138686 	train_auc	 0.7269266210979619
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5341187119483948 	train_loss	 0.5101754665374756
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.7005636611849992 	train_auc	 0.7172705531466367
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5333473086357117 	train_loss	 0.5100440382957458
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.706285445350713 	train_auc	 0.7228208828249539
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5345024466514587 	train_loss	 0.5102860927581787
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.724618299628519 	train_auc	 0.7402505268737349
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5330226421356201 	train_loss	 0.5100609660148621
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.7245477153502771 	train_auc	 0.7405338183236386
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5345181822776794 	train_loss	 0.5102830529212952
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.7235974965910925 	train_auc	 0.7385296093077771
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5330471992492676 	train_loss	 0.5100070238113403
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.7212263980216017 	train_auc	 0.7352366870169537
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5336525440216064 	train_loss	 0.5100323557853699
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.7238438502915951 	train_auc	 0.7367993840814292
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5326895117759705 	train_loss	 0.5101338028907776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.728225115948239 	train_auc	 0.7419460006763701
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5337717533111572 	train_loss	 0.5100370645523071
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.7313858780679874 	train_auc	 0.7456007970786103
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.534220278263092 	train_loss	 0.5101491808891296
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.7249039908121526 	train_auc	 0.7391158974394882
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5327047109603882 	train_loss	 0.5100891590118408
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.7252571787930829 	train_auc	 0.7412677668364316
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5338928699493408 	train_loss	 0.5100451111793518
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.7299915642332866 	train_auc	 0.7459085451894101
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5332357883453369 	train_loss	 0.5099219083786011
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.722590264830352 	train_auc	 0.7385917828675863
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5333811640739441 	train_loss	 0.5099498629570007
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.7236579318606843 	train_auc	 0.7400948967346375
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5330855250358582 	train_loss	 0.5098836421966553
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.7191543759196029 	train_auc	 0.7355009039802054
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5337514877319336 	train_loss	 0.5099402666091919
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.7209737391642282 	train_auc	 0.737025367323667
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5344334244728088 	train_loss	 0.5101324915885925
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.7283060476274812 	train_auc	 0.7429893380712027
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.532390832901001 	train_loss	 0.510154664516449
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.7230210118205758 	train_auc	 0.7381973850857868
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5339672565460205 	train_loss	 0.5100163817405701
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.7290849917910824 	train_auc	 0.7434871475096136
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5326559543609619 	train_loss	 0.5098947286605835
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.7305435785473937 	train_auc	 0.7448100384246117
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5339817404747009 	train_loss	 0.5099592804908752
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.7288135538578377 	train_auc	 0.7423689980317136
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5328385829925537 	train_loss	 0.5098430514335632
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.7301069975821305 	train_auc	 0.7437931145291947
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5342970490455627 	train_loss	 0.5100445747375488
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.7312052914314802 	train_auc	 0.7445529624979157
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5335178971290588 	train_loss	 0.5098371505737305
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.7264429760682656 	train_auc	 0.7399594664206371
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5344612002372742 	train_loss	 0.5101194977760315
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.7310750530535242 	train_auc	 0.7454384565880411
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5335844159126282 	train_loss	 0.5098340511322021
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.7298742709561621 	train_auc	 0.744458907822083
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5333500504493713 	train_loss	 0.5097755789756775
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.7288967918481476 	train_auc	 0.7446715266283
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5331357717514038 	train_loss	 0.5096688866615295
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.7310281332627702 	train_auc	 0.7463529663490739
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5327191352844238 	train_loss	 0.5096778869628906
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.7301757033328093 	train_auc	 0.7449742496166833
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5334975719451904 	train_loss	 0.5096724033355713
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.7267230688677753 	train_auc	 0.7424033375259831
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.533149003982544 	train_loss	 0.509598433971405
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.7295890137557939 	train_auc	 0.7442495205433035
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.532999575138092 	train_loss	 0.5095978379249573
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.7327556346496257 	train_auc	 0.7470085107262675
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.532298743724823 	train_loss	 0.5096884369850159
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.7335350499950581 	train_auc	 0.748707411948588
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5341136455535889 	train_loss	 0.5097823143005371
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.7335711574027421 	train_auc	 0.7484381094280772
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5321800708770752 	train_loss	 0.5096694231033325
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.7331215507397548 	train_auc	 0.7483654855030983
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5343696475028992 	train_loss	 0.5098710656166077
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.7323843123679613 	train_auc	 0.7480427467727585
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5324483513832092 	train_loss	 0.509446918964386
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.7331355126013799 	train_auc	 0.7477580674054389
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5320959687232971 	train_loss	 0.5095694661140442
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.7344842333941666 	train_auc	 0.7490786715215711
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5352872610092163 	train_loss	 0.5102313756942749
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.7332092525579377 	train_auc	 0.747375471089597
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5319646000862122 	train_loss	 0.5097469091415405
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.7335573753341842 	train_auc	 0.7476552177233969
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5333505272865295 	train_loss	 0.5095058679580688
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.7327369113716028 	train_auc	 0.7466566173943481
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5329830050468445 	train_loss	 0.5094627737998962
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.7343504177541513 	train_auc	 0.7482126138324989
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5325697660446167 	train_loss	 0.509358823299408
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.7345702922757016 	train_auc	 0.7488685374904279
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5325993895530701 	train_loss	 0.5093653798103333
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.7352718200245111 	train_auc	 0.7497405421069274
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5319317579269409 	train_loss	 0.5093311071395874
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.7336873223233762 	train_auc	 0.7484183604330114
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5318200588226318 	train_loss	 0.5093199014663696
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.7352870528371278 	train_auc	 0.7498345398211845
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5331623554229736 	train_loss	 0.5091782212257385
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.73545679609176 	train_auc	 0.7496536034601295
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5333548784255981 	train_loss	 0.5091943144798279
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.7353446424164506 	train_auc	 0.7496068255027699
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5323123931884766 	train_loss	 0.5090300440788269
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.7358761107228201 	train_auc	 0.7500314907208343
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5314322710037231 	train_loss	 0.5097560882568359
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.7327223419334061 	train_auc	 0.7478876681884299
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5315588712692261 	train_loss	 0.5093314051628113
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.7335680637220356 	train_auc	 0.7483447480162992
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5321984887123108 	train_loss	 0.5087905526161194
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.7330615618529503 	train_auc	 0.7478021285735018
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5313721299171448 	train_loss	 0.5100179314613342
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.7338604630470008 	train_auc	 0.7479463323594571
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5354868769645691 	train_loss	 0.5100211501121521
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.7323822478475701 	train_auc	 0.7462095294604297
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5318355560302734 	train_loss	 0.508893609046936
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.7322205890811968 	train_auc	 0.7459641758092079
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5314546823501587 	train_loss	 0.5088757276535034
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.734533118509137 	train_auc	 0.7482933367210188
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5322306752204895 	train_loss	 0.5086061954498291
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.7341946983587534 	train_auc	 0.7477374653760451
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5309638381004333 	train_loss	 0.508844256401062
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.7339298693706651 	train_auc	 0.7481953371087466
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5311734080314636 	train_loss	 0.5082789659500122
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.7348913282964243 	train_auc	 0.748248818471044
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5308176875114441 	train_loss	 0.5099565386772156
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.7368283630035912 	train_auc	 0.7500862363522496
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5314199328422546 	train_loss	 0.5080536603927612
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.7377335776981505 	train_auc	 0.7515404473173085
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5310101509094238 	train_loss	 0.507860004901886
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.7368101481059649 	train_auc	 0.7506400251264456
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5305215716362 	train_loss	 0.5078701972961426
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.7382055530985903 	train_auc	 0.7520814572482675
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5308507680892944 	train_loss	 0.5074809789657593
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.7391190692730412 	train_auc	 0.7527369418852721
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5313156247138977 	train_loss	 0.5073962807655334
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.7396329054593123 	train_auc	 0.7534711904883171
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5299873948097229 	train_loss	 0.5074060559272766
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.7393303881245018 	train_auc	 0.7528882498911548
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5295387506484985 	train_loss	 0.5082041621208191
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.7409577509727394 	train_auc	 0.7537789962553461
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5292869210243225 	train_loss	 0.5072479248046875
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.7399286154566166 	train_auc	 0.7531719018661529
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5297712683677673 	train_loss	 0.5096182823181152
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.739985764852913 	train_auc	 0.752705743613503
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5299882292747498 	train_loss	 0.5096554160118103
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.7398769590485084 	train_auc	 0.7528105202639693
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5293503403663635 	train_loss	 0.5078393816947937
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.740827258404585 	train_auc	 0.7535301672533571
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5373269319534302 	train_loss	 0.5103137493133545
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.7401820988821943 	train_auc	 0.7533061985058673
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.530566394329071 	train_loss	 0.5111485123634338
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.7404579510452244 	train_auc	 0.7531070837609967
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5292928814888 	train_loss	 0.5070041418075562
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.7409143030481087 	train_auc	 0.7536085825034101
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5290001034736633 	train_loss	 0.5068778395652771
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.7411022240018016 	train_auc	 0.7534958437361148
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.530611515045166 	train_loss	 0.5060334801673889
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.7413219125305239 	train_auc	 0.7535592176569326
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5289931297302246 	train_loss	 0.5051159858703613
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.7410934017419915 	train_auc	 0.7534828412144952
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5291274189949036 	train_loss	 0.5099201798439026
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.7409793075415095 	train_auc	 0.7534498333707196
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5294246077537537 	train_loss	 0.5105735659599304
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.7413324955224396 	train_auc	 0.753602459134029
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5315915942192078 	train_loss	 0.5137752294540405
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.7411276306221121 	train_auc	 0.7532420576877386
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5260926485061646 	train_loss	 0.5050431489944458
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.7407879457204978 	train_auc	 0.7528996095575744
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5264069437980652 	train_loss	 0.5063379406929016
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.7405936886111297 	train_auc	 0.7524639438088783
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5249819159507751 	train_loss	 0.5019354820251465
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.7407668727330806 	train_auc	 0.7524350969387377
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5269472002983093 	train_loss	 0.5017771124839783
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.7404427864299782 	train_auc	 0.752161968267512
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5294570922851562 	train_loss	 0.5029272437095642
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.7405573146137256 	train_auc	 0.7521872842146164
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5218721628189087 	train_loss	 0.5001124143600464
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.7410309143515303 	train_auc	 0.7523456783794393
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5253654718399048 	train_loss	 0.4995233118534088
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.739960302434754 	train_auc	 0.7513710970796689
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5208896994590759 	train_loss	 0.5017735362052917
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.739154042124474 	train_auc	 0.7505403986360009
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5316479206085205 	train_loss	 0.5165776610374451
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.7384282423116053 	train_auc	 0.7496722222541763
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5173546671867371 	train_loss	 0.49801287055015564
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.7390913935402286 	train_auc	 0.7502417629879965
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5160806179046631 	train_loss	 0.492442786693573
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.7400579300701934 	train_auc	 0.7508584109448695
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5343461632728577 	train_loss	 0.5040808916091919
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.7392509133890794 	train_auc	 0.7505846279101773
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5326873064041138 	train_loss	 0.5181426405906677
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.7378391596268691 	train_auc	 0.7492528482107661
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5145620107650757 	train_loss	 0.4941789507865906
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.7377641673186026 	train_auc	 0.7490368943737608
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5154535174369812 	train_loss	 0.4967420697212219
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.7374674901585925 	train_auc	 0.748666487140452
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5120989680290222 	train_loss	 0.49310481548309326
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.7384676107935408 	train_auc	 0.7492443567680758
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5124364495277405 	train_loss	 0.48660334944725037
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.7378641260641533 	train_auc	 0.7487667103381341
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5100494027137756 	train_loss	 0.49243494868278503
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.7386724136962589 	train_auc	 0.7495414252780968
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5041107535362244 	train_loss	 0.4815842807292938
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.7397032727459216 	train_auc	 0.7502618294396484
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5402476191520691 	train_loss	 0.5077613592147827
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.7391802361144233 	train_auc	 0.7502994782625318
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5207587480545044 	train_loss	 0.5048977732658386
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.7386942120557054 	train_auc	 0.749471132609799
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5046038031578064 	train_loss	 0.481029212474823
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.7374585687026074 	train_auc	 0.7481719995344156
valid_accuracy	 0.7792286245353159 	train_accuracy	 0.7957937994802683
valid_loss	 0.520724892616272 	train_loss	 0.506674587726593
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.739533672085791 	train_auc	 0.7505055902507124
valid_accuracy	 0.7786710037174721 	train_accuracy	 0.7950685924941077
valid_loss	 0.5596373081207275 	train_loss	 0.549731969833374
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.7390013606119342 	train_auc	 0.7500590670699769
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5078411102294922 	train_loss	 0.48645085096359253
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.7388916310431504 	train_auc	 0.7496459150367251
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.5072428584098816 	train_loss	 0.4827429950237274
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.737919824716391 	train_auc	 0.7487033433638499
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.792772103704599
valid_loss	 0.5068224668502808 	train_loss	 0.4896349310874939
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.7389008562874213 	train_auc	 0.7492952053941334
valid_accuracy	 0.7754182156133829 	train_accuracy	 0.7927418867468423
valid_loss	 0.502507209777832 	train_loss	 0.4755576252937317
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.7396669297473222 	train_auc	 0.7500184506879333
valid_accuracy	 0.7757434944237919 	train_accuracy	 0.7928778630567475
valid_loss	 0.48938119411468506 	train_loss	 0.46542370319366455
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.7394214378135893 	train_auc	 0.7499955806153145
valid_accuracy	 0.7797397769516728 	train_accuracy	 0.7964283555931588
valid_loss	 0.49145036935806274 	train_loss	 0.4730910360813141
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.7402933845909728 	train_auc	 0.7508806030358075
valid_accuracy	 0.7815520446096654 	train_accuracy	 0.7974104067202514
valid_loss	 0.4917515516281128 	train_loss	 0.47392913699150085
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.7429198265143218 	train_auc	 0.7533227777976449
valid_accuracy	 0.7763940520446097 	train_accuracy	 0.7933009004653412
valid_loss	 0.48539456725120544 	train_loss	 0.4609459638595581
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.7434263035843633 	train_auc	 0.7538738865991724
valid_accuracy	 0.7784386617100372 	train_accuracy	 0.7946757720432707
valid_loss	 0.4803615212440491 	train_loss	 0.4574401378631592
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.7440228693805475 	train_auc	 0.7543435452101108
valid_accuracy	 0.7788568773234201 	train_accuracy	 0.7955369553393364
valid_loss	 0.4799109399318695 	train_loss	 0.4545365571975708
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.7442643500689556 	train_auc	 0.7548520696766219
valid_accuracy	 0.7801579925650558 	train_accuracy	 0.7963830301565238
valid_loss	 0.4937133193016052 	train_loss	 0.47657597064971924
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.7468779460876477 	train_auc	 0.7574698389151648
valid_accuracy	 0.7828066914498141 	train_accuracy	 0.7992385326645314
valid_loss	 0.4728253185749054 	train_loss	 0.45206165313720703
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.7474502274202506 	train_auc	 0.7581955495337445
valid_accuracy	 0.7811802973977695 	train_accuracy	 0.7991327733123829
valid_loss	 0.47683051228523254 	train_loss	 0.4569609463214874
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====/mnt/zstack/lzu_files/user_files/jzf/exp/qakt_full/avg_skill_encoding/qakt_full_statics_84skill/qakt.py:63: SyntaxWarning: assertion is always true, perhaps remove parentheses?
  assert(self.p_embed[0].weight.sum() == 0, "ERROR: 未传入qf参数，且Q-matrix未初始化为0")
/mnt/zstack/lzu_files/user_files/jzf/exp/qakt_full/avg_skill_encoding/qakt_full_statics_84skill/qakt.py:66: SyntaxWarning: assertion is always true, perhaps remove parentheses?
  assert(self.p_embed[0].weight.sum() != 0, "ERROR: 已传入qf参数，但Q-matrix又被初始化为0，会导致传入的Q-matrix被覆盖")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.7474098669765654 	train_auc	 0.7582667251064645
valid_accuracy	 0.7746282527881041 	train_accuracy	 0.7933462259019762
valid_loss	 0.4962626099586487 	train_loss	 0.4785507023334503
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.7479031137567722 	train_auc	 0.7586852363904
valid_accuracy	 0.783503717472119 	train_accuracy	 0.8000846074817187
valid_loss	 0.4746346175670624 	train_loss	 0.45434558391571045
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.7473128283184148 	train_auc	 0.7580888348003996
valid_accuracy	 0.7803903345724907 	train_accuracy	 0.7965341149453073
valid_loss	 0.48110541701316833 	train_loss	 0.46153560280799866
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.7469183995277469 	train_auc	 0.7578717827164297
valid_accuracy	 0.7217936802973978 	train_accuracy	 0.7389708104188071
valid_loss	 0.5650469660758972 	train_loss	 0.550040602684021
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.7481559028091254 	train_auc	 0.7587010800442677
valid_accuracy	 0.7757899628252788 	train_accuracy	 0.7928929715356258
valid_loss	 0.5224047303199768 	train_loss	 0.49023252725601196
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.7467448434201398 	train_auc	 0.7576186524208267
valid_accuracy	 0.7830390334572491 	train_accuracy	 0.7998277633407869
valid_loss	 0.5130903124809265 	train_loss	 0.4982943832874298
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.7455481469652337 	train_auc	 0.7560282928701919
valid_accuracy	 0.78317843866171 	train_accuracy	 0.7981960476219254
valid_loss	 0.47124117612838745 	train_loss	 0.44955742359161377
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.7460484862719499 	train_auc	 0.7565695903876425
valid_accuracy	 0.7788568773234201 	train_accuracy	 0.795431195987188
valid_loss	 0.47361594438552856 	train_loss	 0.452200323343277
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.7480667936452102 	train_auc	 0.7589941383204333
valid_accuracy	 0.7588754646840149 	train_accuracy	 0.7761225599806612
valid_loss	 0.5082852840423584 	train_loss	 0.4894630014896393
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.7499193938082069 	train_auc	 0.7608716321433671
valid_accuracy	 0.7802044609665427 	train_accuracy	 0.7962772708043754
valid_loss	 0.47299477458000183 	train_loss	 0.4511004388332367
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.7499965870316054 	train_auc	 0.7609317154912116
valid_accuracy	 0.7810873605947956 	train_accuracy	 0.7979543119598719
valid_loss	 0.46738100051879883 	train_loss	 0.4438822865486145
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.7500100157137901 	train_auc	 0.761035373055113
valid_accuracy	 0.7814591078066915 	train_accuracy	 0.7979240950021151
valid_loss	 0.4670379161834717 	train_loss	 0.443437784910202
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.7499231012652461 	train_auc	 0.7609762177641592
valid_accuracy	 0.7763940520446097 	train_accuracy	 0.7939203480993534
valid_loss	 0.47167178988456726 	train_loss	 0.4480096101760864
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.750111852986904 	train_auc	 0.761098953287979
valid_accuracy	 0.7842936802973978 	train_accuracy	 0.799570919199855
valid_loss	 0.4659091532230377 	train_loss	 0.4400300979614258
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 152
valid_auc	 0.749893838393634 	train_auc	 0.7607921339287235
valid_accuracy	 0.7839684014869889 	train_accuracy	 0.7999335226929353
valid_loss	 0.470741331577301 	train_loss	 0.44383224844932556
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.7499583903044865 	train_auc	 0.7612270862684174
valid_accuracy	 0.7559014869888476 	train_accuracy	 0.7739469390221793
valid_loss	 0.5113290548324585 	train_loss	 0.492065966129303
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.7501264286248617 	train_auc	 0.7610218273145648
valid_accuracy	 0.783085501858736 	train_accuracy	 0.799223424185653
valid_loss	 0.4647994041442871 	train_loss	 0.4394349455833435
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.7508744607804425 	train_auc	 0.7621120357503075
valid_accuracy	 0.7732342007434945 	train_accuracy	 0.7913821236477911
valid_loss	 0.47702333331108093 	train_loss	 0.45499134063720703
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.7512634585805317 	train_auc	 0.7624204625374414
valid_accuracy	 0.7801115241635688 	train_accuracy	 0.7967909590862392
valid_loss	 0.46642377972602844 	train_loss	 0.44202184677124023
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.7514404927540231 	train_auc	 0.7628084945158369
valid_accuracy	 0.7557156133828996 	train_accuracy	 0.7739922644588143
valid_loss	 0.504065215587616 	train_loss	 0.48321104049682617
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.7512242574921414 	train_auc	 0.7622517527702012
valid_accuracy	 0.7842007434944238 	train_accuracy	 0.8004774279325557
valid_loss	 0.46655717492103577 	train_loss	 0.44004496932029724
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.7512596271282742 	train_auc	 0.762601799713486
valid_accuracy	 0.7640799256505576 	train_accuracy	 0.7810328156161238
valid_loss	 0.48726633191108704 	train_loss	 0.46447983384132385
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.751777555156762 	train_auc	 0.7631581135526508
valid_accuracy	 0.7669609665427509 	train_accuracy	 0.783616365504321
valid_loss	 0.4814303517341614 	train_loss	 0.45702654123306274
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.7525673737010432 	train_auc	 0.7641719281796223
valid_accuracy	 0.770864312267658 	train_accuracy	 0.7877107632803529
valid_loss	 0.47827836871147156 	train_loss	 0.45408493280410767
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.7527917740480758 	train_auc	 0.764188642234152
valid_accuracy	 0.7844795539033457 	train_accuracy	 0.8008702483833927
valid_loss	 0.4660540521144867 	train_loss	 0.43912172317504883
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.7528197349698916 	train_auc	 0.7643028328269728
valid_accuracy	 0.7812732342007435 	train_accuracy	 0.7988608206925727
valid_loss	 0.4645070433616638 	train_loss	 0.4389733672142029
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.7530067755575318 	train_auc	 0.7646642408259839
valid_accuracy	 0.7634758364312267 	train_accuracy	 0.7814558530247174
valid_loss	 0.48505252599716187 	train_loss	 0.4613795280456543
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.7534115083508734 	train_auc	 0.7651023128539242
valid_accuracy	 0.7721189591078067 	train_accuracy	 0.7890403094216474
valid_loss	 0.475786417722702 	train_loss	 0.45178595185279846
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.7537056870072266 	train_auc	 0.765440209615264
valid_accuracy	 0.7657063197026023 	train_accuracy	 0.7834501722366592
valid_loss	 0.4815879464149475 	train_loss	 0.45749181509017944
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.754008415133909 	train_auc	 0.7656461430775305
valid_accuracy	 0.7775092936802974 	train_accuracy	 0.7950837009729861
valid_loss	 0.4667782783508301 	train_loss	 0.4414755702018738
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.7543781130782085 	train_auc	 0.7661245682138903
valid_accuracy	 0.7697955390334572 	train_accuracy	 0.786532301927842
valid_loss	 0.47713953256607056 	train_loss	 0.45274537801742554
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.7535303019701439 	train_auc	 0.7649456733834923
valid_accuracy	 0.7858736059479554 	train_accuracy	 0.8015501299329184
valid_loss	 0.47120219469070435 	train_loss	 0.4429358243942261
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 170
valid_auc	 0.7544745379600264 	train_auc	 0.7662918789492608
valid_accuracy	 0.7661245353159851 	train_accuracy	 0.783616365504321
valid_loss	 0.4809166491031647 	train_loss	 0.4567994475364685
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.755094452055891 	train_auc	 0.7669777046557864
valid_accuracy	 0.7648698884758365 	train_accuracy	 0.782392578715175
valid_loss	 0.4826399087905884 	train_loss	 0.45855385065078735
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.7546452793761691 	train_auc	 0.7662548976882575
valid_accuracy	 0.7856877323420074 	train_accuracy	 0.8018220825527286
valid_loss	 0.4671151638031006 	train_loss	 0.4392954707145691
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.7556449102300036 	train_auc	 0.7675558021297126
valid_accuracy	 0.7768587360594795 	train_accuracy	 0.794993050099716
valid_loss	 0.46757766604423523 	train_loss	 0.4430646002292633
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.7559772112163445 	train_auc	 0.7680104631745777
valid_accuracy	 0.770910780669145 	train_accuracy	 0.7870459902097057
valid_loss	 0.47555261850357056 	train_loss	 0.45059141516685486
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.7554804491716877 	train_auc	 0.7673409652953126
valid_accuracy	 0.7829925650557621 	train_accuracy	 0.8012479603553514
valid_loss	 0.46420255303382874 	train_loss	 0.43686115741729736
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.7568006696634575 	train_auc	 0.7689138425047999
valid_accuracy	 0.7622211895910781 	train_accuracy	 0.7791442557563305
valid_loss	 0.4878844916820526 	train_loss	 0.4651319980621338
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.7558849153753091 	train_auc	 0.7677319481611873
valid_accuracy	 0.7856877323420074 	train_accuracy	 0.802622831933281
valid_loss	 0.46469882130622864 	train_loss	 0.436954140663147
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.7566223211406479 	train_auc	 0.7686068883827922
valid_accuracy	 0.7786710037174721 	train_accuracy	 0.7966398742974558
valid_loss	 0.46483829617500305 	train_loss	 0.4387154281139374
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.7565401247101751 	train_auc	 0.768524352448999
valid_accuracy	 0.7837825278810409 	train_accuracy	 0.8015048044962834
valid_loss	 0.4643930494785309 	train_loss	 0.436806857585907
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.7577832015766339 	train_auc	 0.7699343688725495
valid_accuracy	 0.7724442379182156 	train_accuracy	 0.788979875506134
valid_loss	 0.4765503406524658 	train_loss	 0.4528402090072632
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.7568970387474271 	train_auc	 0.7689381129985955
valid_accuracy	 0.7870817843866171 	train_accuracy	 0.8037106424125219
valid_loss	 0.46788233518600464 	train_loss	 0.4391990005970001
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 182
valid_auc	 0.7580205284252157 	train_auc	 0.7701998382958118
valid_accuracy	 0.7801115241635688 	train_accuracy	 0.7981356137064121
valid_loss	 0.4635624289512634 	train_loss	 0.4373062252998352
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.7582474892735147 	train_auc	 0.7705845053733245
valid_accuracy	 0.7738847583643123 	train_accuracy	 0.7907022420982656
valid_loss	 0.46866580843925476 	train_loss	 0.44290101528167725
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.758005779193952 	train_auc	 0.7702644028524912
valid_accuracy	 0.7829460966542751 	train_accuracy	 0.800009065087327
valid_loss	 0.4613211452960968 	train_loss	 0.4349357783794403
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.7581553360269806 	train_auc	 0.7704194842154333
valid_accuracy	 0.7807156133828996 	train_accuracy	 0.799314075058923
valid_loss	 0.4639958441257477 	train_loss	 0.4366884231567383
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.758855909012606 	train_auc	 0.7713072380129435
valid_accuracy	 0.7744423791821561 	train_accuracy	 0.7909893031969542
valid_loss	 0.4679233729839325 	train_loss	 0.4421643316745758
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.7587534269643548 	train_auc	 0.7712146789257981
valid_accuracy	 0.779042750929368 	train_accuracy	 0.7964434640720373
valid_loss	 0.4643842875957489 	train_loss	 0.4379940330982208
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.7592899046775597 	train_auc	 0.7718711402454288
valid_accuracy	 0.771050185873606 	train_accuracy	 0.7881338006889467
valid_loss	 0.47349339723587036 	train_loss	 0.4486250877380371
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.7590793917950207 	train_auc	 0.771556999934397
valid_accuracy	 0.7817379182156133 	train_accuracy	 0.8000694990028404
valid_loss	 0.46304047107696533 	train_loss	 0.43568721413612366
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.7596045673440415 	train_auc	 0.772100616204768
valid_accuracy	 0.7798791821561338 	train_accuracy	 0.7975312745512781
valid_loss	 0.4631510078907013 	train_loss	 0.43707922101020813
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.7602374389402595 	train_auc	 0.772834439679956
valid_accuracy	 0.7657992565055762 	train_accuracy	 0.7813198767148124
valid_loss	 0.48232758045196533 	train_loss	 0.4584343731403351
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.7592003491308573 	train_auc	 0.7715648710516354
valid_accuracy	 0.7862918215613383 	train_accuracy	 0.8035142321871034
valid_loss	 0.46367958188056946 	train_loss	 0.43537771701812744
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.760526186606034 	train_auc	 0.7730087622463566
valid_accuracy	 0.7774628252788104 	train_accuracy	 0.7931498156765577
valid_loss	 0.46725746989250183 	train_loss	 0.44237443804740906
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.7604150744905617 	train_auc	 0.7728227722820973
valid_accuracy	 0.7840613382899628 	train_accuracy	 0.8020033842992688
valid_loss	 0.46008387207984924 	train_loss	 0.4330647587776184
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

epoch 195
valid_auc	 0.7606965002386722 	train_auc	 0.7731301147153339
valid_accuracy	 0.783457249070632 	train_accuracy	 0.8017616486372152
valid_loss	 0.45982226729393005 	train_loss	 0.43306583166122437
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.7619371839974101 	train_auc	 0.7747431310800056
valid_accuracy	 0.7539498141263941 	train_accuracy	 0.7691726596966217
valid_loss	 0.5046004056930542 	train_loss	 0.4826158583164215
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.7613623793621069 	train_auc	 0.7738715779881911
valid_accuracy	 0.7837825278810409 	train_accuracy	 0.8021544690880522
valid_loss	 0.45838338136672974 	train_loss	 0.4320853650569916
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.7612012971735005 	train_auc	 0.7738920237205784
valid_accuracy	 0.7808085501858736 	train_accuracy	 0.7986493019882758
valid_loss	 0.4619852304458618 	train_loss	 0.4351547360420227
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 199
valid_auc	 0.762053466713502 	train_auc	 0.774880719682
valid_accuracy	 0.7657527881040892 	train_accuracy	 0.7813803106303258
valid_loss	 0.48311781883239746 	train_loss	 0.45967087149620056
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 200
valid_auc	 0.7613867692216241 	train_auc	 0.7740661510893846
valid_accuracy	 0.7866635687732342 	train_accuracy	 0.8036502084970085
valid_loss	 0.4582828879356384 	train_loss	 0.4307873547077179
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 201
valid_auc	 0.7612112849883663 	train_auc	 0.7738106693921531
valid_accuracy	 0.7870817843866171 	train_accuracy	 0.8039977035112105
valid_loss	 0.46056070923805237 	train_loss	 0.4324824810028076
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 202
valid_auc	 0.7619036370909923 	train_auc	 0.7746514889352973
valid_accuracy	 0.7798327137546468 	train_accuracy	 0.7969722608327794
valid_loss	 0.4628060460090637 	train_loss	 0.43636152148246765
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 203
valid_auc	 0.7624739221005742 	train_auc	 0.7752494291824934
valid_accuracy	 0.7795539033457249 	train_accuracy	 0.7964434640720373
valid_loss	 0.46268540620803833 	train_loss	 0.43713679909706116
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 204
valid_auc	 0.7622156772585986 	train_auc	 0.7749372269543399
valid_accuracy	 0.783085501858736 	train_accuracy	 0.8014896960174049
valid_loss	 0.4591187536716461 	train_loss	 0.43248429894447327
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 205
valid_auc	 0.761071672571877 	train_auc	 0.7736450675040518
valid_accuracy	 0.7874535315985131 	train_accuracy	 0.8067021212304345
valid_loss	 0.4763471186161041 	train_loss	 0.44544172286987305
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 206
valid_auc	 0.7623940009823645 	train_auc	 0.7751228820956793
valid_accuracy	 0.7857806691449815 	train_accuracy	 0.8036653169758868
valid_loss	 0.458098828792572 	train_loss	 0.4306310713291168
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 207
valid_auc	 0.7624538410749067 	train_auc	 0.7752327047081632
valid_accuracy	 0.7863847583643123 	train_accuracy	 0.8037408593702786
valid_loss	 0.4613887369632721 	train_loss	 0.4329942762851715
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 208
valid_auc	 0.7632568217116521 	train_auc	 0.7761678567884847
valid_accuracy	 0.7810873605947956 	train_accuracy	 0.7982413730585605
valid_loss	 0.46135860681533813 	train_loss	 0.43570348620414734
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 209
valid_auc	 0.7635898418702616 	train_auc	 0.7764976205482688
valid_accuracy	 0.7805762081784386 	train_accuracy	 0.7961261860155919
valid_loss	 0.4629720449447632 	train_loss	 0.437240868806839
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 210
valid_auc	 0.7626629156129089 	train_auc	 0.7755905866467118
valid_accuracy	 0.7875 	train_accuracy	 0.8052365987792349
valid_loss	 0.46412259340286255 	train_loss	 0.4347149133682251
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 211
valid_auc	 0.7630099720302745 	train_auc	 0.7759283493399529
valid_accuracy	 0.7868959107806691 	train_accuracy	 0.8047984528917629
valid_loss	 0.45957693457603455 	train_loss	 0.4312037229537964
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 212
valid_auc	 0.7638193322210218 	train_auc	 0.7768321795002069
valid_accuracy	 0.7805297397769517 	train_accuracy	 0.7969420438750227
valid_loss	 0.4618853032588959 	train_loss	 0.43558791279792786
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 213
valid_auc	 0.7639478842640037 	train_auc	 0.7769918504379081
valid_accuracy	 0.7822955390334573 	train_accuracy	 0.7994651598477065
valid_loss	 0.4600856304168701 	train_loss	 0.4332883059978485
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 214
valid_auc	 0.7645049451835118 	train_auc	 0.7775637071460353
valid_accuracy	 0.7801579925650558 	train_accuracy	 0.7951894603251345
valid_loss	 0.4652559757232666 	train_loss	 0.44002565741539
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 215
valid_auc	 0.7634274391325762 	train_auc	 0.7764442058726939
valid_accuracy	 0.7875 	train_accuracy	 0.8057805040188554
valid_loss	 0.4650363326072693 	train_loss	 0.4353230893611908
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 216
valid_auc	 0.7640924130909144 	train_auc	 0.7770417112668858
valid_accuracy	 0.7869888475836431 	train_accuracy	 0.8050401885538164
valid_loss	 0.4575953185558319 	train_loss	 0.42946749925613403
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 217
valid_auc	 0.7642647230465733 	train_auc	 0.7773466481155318
valid_accuracy	 0.7851301115241636 	train_accuracy	 0.8030760862996313
valid_loss	 0.4596618115901947 	train_loss	 0.43154072761535645
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 218
valid_auc	 0.7646596602176382 	train_auc	 0.7776878250300444
valid_accuracy	 0.7827602230483272 	train_accuracy	 0.7993896174533148
valid_loss	 0.4596300721168518 	train_loss	 0.4335825443267822
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 219
valid_auc	 0.7647783856395384 	train_auc	 0.7778539666638076
valid_accuracy	 0.7856412639405205 	train_accuracy	 0.8034689067504683
valid_loss	 0.45631420612335205 	train_loss	 0.4288777709007263
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 220
valid_auc	 0.7647533200060793 	train_auc	 0.7778891223757767
valid_accuracy	 0.787778810408922 	train_accuracy	 0.8052063818214782
valid_loss	 0.4646466076374054 	train_loss	 0.434793084859848
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 221
valid_auc	 0.7654345559373492 	train_auc	 0.7785175759665275
valid_accuracy	 0.7844795539033457 	train_accuracy	 0.8002810177071372
valid_loss	 0.45910653471946716 	train_loss	 0.43352529406547546
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 222
valid_auc	 0.7653265437023442 	train_auc	 0.7784685598360374
valid_accuracy	 0.7836895910780669 	train_accuracy	 0.8001299329183538
valid_loss	 0.45865002274513245 	train_loss	 0.4320732355117798
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 223
valid_auc	 0.7652543908845857 	train_auc	 0.7784597884480424
valid_accuracy	 0.7852695167286246 	train_accuracy	 0.8028343506375778
valid_loss	 0.45766592025756836 	train_loss	 0.4300316870212555
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 224
valid_auc	 0.7652070371105661 	train_auc	 0.7783997578938533
valid_accuracy	 0.7858271375464684 	train_accuracy	 0.8041185713422373
valid_loss	 0.4598289728164673 	train_loss	 0.43122661113739014
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 225
valid_auc	 0.765158988963322 	train_auc	 0.7783002578303202
valid_accuracy	 0.787407063197026 	train_accuracy	 0.8055085513990451
valid_loss	 0.45991846919059753 	train_loss	 0.43097376823425293
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 226
valid_auc	 0.7653439216322442 	train_auc	 0.7785120166556758
valid_accuracy	 0.7859665427509294 	train_accuracy	 0.8044056324409259
valid_loss	 0.4602962136268616 	train_loss	 0.4315051734447479
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 227
valid_auc	 0.7654647425733405 	train_auc	 0.778639117381219
valid_accuracy	 0.7862918215613383 	train_accuracy	 0.8041336798211156
valid_loss	 0.4590780436992645 	train_loss	 0.43054503202438354
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 228
valid_auc	 0.7653850260472416 	train_auc	 0.7786187251371406
valid_accuracy	 0.7866171003717473 	train_accuracy	 0.8046926935396145
valid_loss	 0.4617201089859009 	train_loss	 0.43245962262153625
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 229
valid_auc	 0.7659136734623858 	train_auc	 0.779168055626063
valid_accuracy	 0.7852230483271375 	train_accuracy	 0.8016256723273101
valid_loss	 0.4574168026447296 	train_loss	 0.4301724135875702
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 230
valid_auc	 0.7654901801924556 	train_auc	 0.7788820696157702
valid_accuracy	 0.787546468401487 	train_accuracy	 0.8056445277089502
valid_loss	 0.4669468104839325 	train_loss	 0.4366251528263092
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 231
valid_auc	 0.7653365005184054 	train_auc	 0.778668904812011
valid_accuracy	 0.7881040892193308 	train_accuracy	 0.806505711005016
valid_loss	 0.4700278043746948 	train_loss	 0.4391225576400757
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 232
valid_auc	 0.7660867087900745 	train_auc	 0.7793935213515465
valid_accuracy	 0.7861059479553903 	train_accuracy	 0.804194113736629
valid_loss	 0.4579674303531647 	train_loss	 0.4295021593570709
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 233
valid_auc	 0.7655945593675529 	train_auc	 0.7789408622976695
valid_accuracy	 0.7881970260223048 	train_accuracy	 0.806551036441651
valid_loss	 0.4775865375995636 	train_loss	 0.4456830620765686
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 234
valid_auc	 0.7663519965604717 	train_auc	 0.7796682637025307
valid_accuracy	 0.787546468401487 	train_accuracy	 0.8054934429201668
valid_loss	 0.46127575635910034 	train_loss	 0.4317476749420166
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 235
valid_auc	 0.7664793272505495 	train_auc	 0.779881413223916
valid_accuracy	 0.7874535315985131 	train_accuracy	 0.8057653955399771
valid_loss	 0.4641978144645691 	train_loss	 0.4340716600418091
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 236
valid_auc	 0.7668785298571372 	train_auc	 0.7802447461073918
valid_accuracy	 0.7858271375464684 	train_accuracy	 0.8029703269474829
valid_loss	 0.4565385580062866 	train_loss	 0.42859071493148804
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 237
valid_auc	 0.7669260324254192 	train_auc	 0.7803209822298501
valid_accuracy	 0.7861988847583643 	train_accuracy	 0.8038617272013053
valid_loss	 0.4579853415489197 	train_loss	 0.4295109510421753
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 238
valid_auc	 0.7664981373252255 	train_auc	 0.7798377424510421
valid_accuracy	 0.7874535315985131 	train_accuracy	 0.8063093007795975
valid_loss	 0.46804362535476685 	train_loss	 0.43743133544921875
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 239
valid_auc	 0.7669448486998562 	train_auc	 0.7801795959579287
valid_accuracy	 0.7867565055762081 	train_accuracy	 0.8049646461594246
valid_loss	 0.4574914872646332 	train_loss	 0.4289020001888275
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 240
valid_auc	 0.7671334950255784 	train_auc	 0.7805079176173344
valid_accuracy	 0.7870353159851301 	train_accuracy	 0.804632259624101
valid_loss	 0.4595203101634979 	train_loss	 0.43055838346481323
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 241
valid_auc	 0.7677587843141733 	train_auc	 0.7810422554027567
valid_accuracy	 0.7855018587360595 	train_accuracy	 0.8020336012570255
valid_loss	 0.45483988523483276 	train_loss	 0.4278666079044342
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 242
valid_auc	 0.7673156254025582 	train_auc	 0.7807481613984295
valid_accuracy	 0.7872211895910781 	train_accuracy	 0.804889103765033
valid_loss	 0.4602150619029999 	train_loss	 0.430938184261322
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 243
valid_auc	 0.7675648681916566 	train_auc	 0.7809714528588918
valid_accuracy	 0.7867100371747212 	train_accuracy	 0.8042847646098991
valid_loss	 0.4578993618488312 	train_loss	 0.42925819754600525
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 244
valid_auc	 0.7676646657434231 	train_auc	 0.7810337347846253
valid_accuracy	 0.7868959107806691 	train_accuracy	 0.805070405511573
valid_loss	 0.45807552337646484 	train_loss	 0.42912787199020386
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 245
valid_auc	 0.7680406130467448 	train_auc	 0.7814465728345578
valid_accuracy	 0.7866635687732342 	train_accuracy	 0.803015652384118
valid_loss	 0.4564867913722992 	train_loss	 0.4283629059791565
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 246
valid_auc	 0.7683204702553388 	train_auc	 0.7817869508977048
valid_accuracy	 0.7856412639405205 	train_accuracy	 0.8025472895388892
valid_loss	 0.45522624254226685 	train_loss	 0.42779675126075745
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 247
valid_auc	 0.7678656185946007 	train_auc	 0.7814207768819805
valid_accuracy	 0.7877323420074349 	train_accuracy	 0.8067927721037046
valid_loss	 0.4638010561466217 	train_loss	 0.43360185623168945
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 248
valid_auc	 0.7680595161178347 	train_auc	 0.7815683594618859
valid_accuracy	 0.787267657992565 	train_accuracy	 0.8063848431739893
valid_loss	 0.4572744071483612 	train_loss	 0.42825013399124146
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 249
valid_auc	 0.7686763613320364 	train_auc	 0.7822494712507009
valid_accuracy	 0.7848977695167286 	train_accuracy	 0.801791865594972
valid_loss	 0.45548829436302185 	train_loss	 0.42824840545654297
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 250
valid_auc	 0.7688458627959922 	train_auc	 0.7823834823878837
valid_accuracy	 0.7850371747211896 	train_accuracy	 0.802275336919079
valid_loss	 0.45544078946113586 	train_loss	 0.4283190965652466
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 251
valid_auc	 0.7684905854956271 	train_auc	 0.7821595428158351
valid_accuracy	 0.787407063197026 	train_accuracy	 0.805327249652505
valid_loss	 0.45857423543930054 	train_loss	 0.4293079674243927
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 252
valid_auc	 0.7687971140757623 	train_auc	 0.7825142314328811
valid_accuracy	 0.7878252788104089 	train_accuracy	 0.8051006224693298
valid_loss	 0.45709821581840515 	train_loss	 0.4280814230442047
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 253
valid_auc	 0.7687215141909242 	train_auc	 0.7824463756085754
valid_accuracy	 0.7872211895910781 	train_accuracy	 0.8062488668640841
valid_loss	 0.46294817328453064 	train_loss	 0.43270885944366455
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 254
valid_auc	 0.7690495869403078 	train_auc	 0.7828138597405392
valid_accuracy	 0.7878717472118959 	train_accuracy	 0.8053121411736266
valid_loss	 0.4566793739795685 	train_loss	 0.4276721775531769
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 255
valid_auc	 0.7696189729845541 	train_auc	 0.7833661432009009
valid_accuracy	 0.7827137546468401 	train_accuracy	 0.7982111561008037
valid_loss	 0.4592331349849701 	train_loss	 0.43313920497894287
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 256
valid_auc	 0.7695006071487882 	train_auc	 0.7832876383405643
valid_accuracy	 0.7846654275092937 	train_accuracy	 0.8018674079893636
valid_loss	 0.4545401930809021 	train_loss	 0.4274405539035797
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 257
valid_auc	 0.7688841401200033 	train_auc	 0.7827209880593811
valid_accuracy	 0.7888940520446097 	train_accuracy	 0.807336677343325
valid_loss	 0.4773128926753998 	train_loss	 0.444864422082901
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 258
valid_auc	 0.769291997592856 	train_auc	 0.7831010266615462
valid_accuracy	 0.7878252788104089 	train_accuracy	 0.806551036441651
valid_loss	 0.4589725732803345 	train_loss	 0.42922282218933105
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 259
valid_auc	 0.7699349190015493 	train_auc	 0.7837517063812498
valid_accuracy	 0.7850371747211896 	train_accuracy	 0.8018220825527286
valid_loss	 0.4548514187335968 	train_loss	 0.4275505840778351
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 260
valid_auc	 0.7697865463228591 	train_auc	 0.783725131027601
valid_accuracy	 0.7871747211895911 	train_accuracy	 0.8048739952861546
valid_loss	 0.456031858921051 	train_loss	 0.42700374126434326
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 261
valid_auc	 0.7695969700329968 	train_auc	 0.7835408506052639
valid_accuracy	 0.7884293680297397 	train_accuracy	 0.8080014504139723
valid_loss	 0.4767117500305176 	train_loss	 0.44410964846611023
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 262
valid_auc	 0.7695136390462729 	train_auc	 0.7834001652385845
valid_accuracy	 0.7892193308550186 	train_accuracy	 0.8083187284704176
valid_loss	 0.4762818217277527 	train_loss	 0.44377973675727844
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 263
valid_auc	 0.7700936142821959 	train_auc	 0.784116185442772
valid_accuracy	 0.7877323420074349 	train_accuracy	 0.8061431075119357
valid_loss	 0.45952194929122925 	train_loss	 0.42953789234161377
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

epoch 264
valid_auc	 0.7702491476847657 	train_auc	 0.7842455222574856
valid_accuracy	 0.7881505576208179 	train_accuracy	 0.806943856892488
valid_loss	 0.4619896113872528 	train_loss	 0.4313834011554718
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 265
valid_auc	 0.7705087812731906 	train_auc	 0.7845686263754935
valid_accuracy	 0.787128252788104 	train_accuracy	 0.8047380189762495
valid_loss	 0.4567044675350189 	train_loss	 0.4273788332939148
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 266
valid_auc	 0.770156207068593 	train_auc	 0.7841850380946513
valid_accuracy	 0.7884293680297397 	train_accuracy	 0.8077597147519188
valid_loss	 0.46840575337409973 	train_loss	 0.4367724657058716
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 267
valid_auc	 0.7705315281960603 	train_auc	 0.7846093407036611
valid_accuracy	 0.7882899628252789 	train_accuracy	 0.8069589653713665
valid_loss	 0.46177783608436584 	train_loss	 0.4311162233352661
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 268
valid_auc	 0.7705825832273577 	train_auc	 0.784651356812228
valid_accuracy	 0.7881505576208179 	train_accuracy	 0.806943856892488
valid_loss	 0.4596383273601532 	train_loss	 0.42938050627708435
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 269
valid_auc	 0.7708068843782155 	train_auc	 0.7849596898211582
valid_accuracy	 0.787639405204461 	train_accuracy	 0.8064754940472593
valid_loss	 0.45754340291023254 	train_loss	 0.42774200439453125
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 270
valid_auc	 0.7711054958636373 	train_auc	 0.7852913701295665
valid_accuracy	 0.7857806691449815 	train_accuracy	 0.8033027134828066
valid_loss	 0.4541519284248352 	train_loss	 0.4258713126182556
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 271
valid_auc	 0.7712675762137542 	train_auc	 0.7854295700265188
valid_accuracy	 0.7854553903345725 	train_accuracy	 0.8032422795672932
valid_loss	 0.45239561796188354 	train_loss	 0.42487064003944397
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 272
valid_auc	 0.7714957832140008 	train_auc	 0.785645060529732
valid_accuracy	 0.7849907063197026 	train_accuracy	 0.8025170725811326
valid_loss	 0.45346900820732117 	train_loss	 0.42683354020118713
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 273
valid_auc	 0.7715154054573594 	train_auc	 0.7856815742890229
valid_accuracy	 0.7849442379182157 	train_accuracy	 0.8010817670876896
valid_loss	 0.45469507575035095 	train_loss	 0.42804622650146484
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 274
valid_auc	 0.7711322292327878 	train_auc	 0.785255122422513
valid_accuracy	 0.7878717472118959 	train_accuracy	 0.8062186499063274
valid_loss	 0.4568108320236206 	train_loss	 0.42712506651878357
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 275
valid_auc	 0.7714837370785047 	train_auc	 0.7856784594633504
valid_accuracy	 0.7868959107806691 	train_accuracy	 0.8048588868072762
valid_loss	 0.4531462490558624 	train_loss	 0.4244142770767212
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 276
valid_auc	 0.771649214897614 	train_auc	 0.7859074123487083
valid_accuracy	 0.7874535315985131 	train_accuracy	 0.8049193207227896
valid_loss	 0.45497292280197144 	train_loss	 0.42576760053634644
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 277
valid_auc	 0.771695651107015 	train_auc	 0.7858851091132326
valid_accuracy	 0.7883828996282528 	train_accuracy	 0.8070949416812715
valid_loss	 0.46067866683006287 	train_loss	 0.43000757694244385
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 278
valid_auc	 0.771810042896022 	train_auc	 0.7860207019761193
valid_accuracy	 0.7883364312267658 	train_accuracy	 0.807729497794162
valid_loss	 0.46603667736053467 	train_loss	 0.434449166059494
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 279
valid_auc	 0.7722676844491805 	train_auc	 0.7865324544968011
valid_accuracy	 0.787685873605948 	train_accuracy	 0.8068683144980964
valid_loss	 0.45701438188552856 	train_loss	 0.426901638507843
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 280
valid_auc	 0.7725606479523907 	train_auc	 0.7868969939931657
valid_accuracy	 0.7877323420074349 	train_accuracy	 0.8067625551459479
valid_loss	 0.4556802213191986 	train_loss	 0.4256773591041565
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 281
valid_auc	 0.7724874907733608 	train_auc	 0.7868019945887614
valid_accuracy	 0.7878717472118959 	train_accuracy	 0.8057049616244637
valid_loss	 0.4536980390548706 	train_loss	 0.424358069896698
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 282
valid_auc	 0.772565186177395 	train_auc	 0.7868606240271206
valid_accuracy	 0.7884758364312268 	train_accuracy	 0.8073064603855684
valid_loss	 0.4594826400279999 	train_loss	 0.42882055044174194
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 283
valid_auc	 0.7726877368517918 	train_auc	 0.7869507282092867
valid_accuracy	 0.7883828996282528 	train_accuracy	 0.805720070103342
valid_loss	 0.4535001516342163 	train_loss	 0.4241997301578522
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 284
valid_auc	 0.7731415097541273 	train_auc	 0.7875569966556332
valid_accuracy	 0.7842936802973978 	train_accuracy	 0.8007644890312443
valid_loss	 0.45455557107925415 	train_loss	 0.42791393399238586
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 285
valid_auc	 0.7729230921763963 	train_auc	 0.78728327336113
valid_accuracy	 0.787407063197026 	train_accuracy	 0.8045567172297093
valid_loss	 0.452362984418869 	train_loss	 0.42348480224609375
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 286
valid_auc	 0.7730950053473559 	train_auc	 0.7875225626885063
valid_accuracy	 0.7885223048327138 	train_accuracy	 0.8051157309482081
valid_loss	 0.45218053460121155 	train_loss	 0.42312130331993103
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 287
valid_auc	 0.7730359092261259 	train_auc	 0.787474808743174
valid_accuracy	 0.7887546468401487 	train_accuracy	 0.8071402671179065
valid_loss	 0.46064281463623047 	train_loss	 0.42965519428253174
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 288
valid_auc	 0.7731693404809633 	train_auc	 0.7875863047756058
valid_accuracy	 0.7880576208178439 	train_accuracy	 0.8076690638786487
valid_loss	 0.4572508931159973 	train_loss	 0.42665061354637146
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 289
valid_auc	 0.7735059627006758 	train_auc	 0.7879542751649224
valid_accuracy	 0.7878717472118959 	train_accuracy	 0.8070042908080014
valid_loss	 0.45729389786720276 	train_loss	 0.4268328845500946
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 290
valid_auc	 0.7738661688109841 	train_auc	 0.7884494872944148
valid_accuracy	 0.7870817843866171 	train_accuracy	 0.804496283314196
valid_loss	 0.45000916719436646 	train_loss	 0.42179444432258606
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 291
valid_auc	 0.773623460569911 	train_auc	 0.7881193018800405
valid_accuracy	 0.7880111524163569 	train_accuracy	 0.8054330090046534
valid_loss	 0.4516666531562805 	train_loss	 0.42269641160964966
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 292
valid_auc	 0.7736880868778948 	train_auc	 0.7882009028104091
valid_accuracy	 0.7882899628252789 	train_accuracy	 0.8062186499063274
valid_loss	 0.4533814787864685 	train_loss	 0.42377156019210815
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 293
valid_auc	 0.7739052707031996 	train_auc	 0.7884567241931343
valid_accuracy	 0.7868959107806691 	train_accuracy	 0.8052970326947483
valid_loss	 0.45073211193084717 	train_loss	 0.4222409725189209
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 294
valid_auc	 0.7737283357258831 	train_auc	 0.7882804732690023
valid_accuracy	 0.7895446096654275 	train_accuracy	 0.808333836949296
valid_loss	 0.4640653133392334 	train_loss	 0.4323403239250183
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 295
valid_auc	 0.7734652426708565 	train_auc	 0.7879782941942011
valid_accuracy	 0.7908457249070632 	train_accuracy	 0.808771982836768
valid_loss	 0.4925631880760193 	train_loss	 0.457389235496521
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 296
valid_auc	 0.773928891792361 	train_auc	 0.7885265639474406
valid_accuracy	 0.7888475836431227 	train_accuracy	 0.8078956910618239
valid_loss	 0.45613422989845276 	train_loss	 0.4254964292049408
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 297
valid_auc	 0.7739998728553027 	train_auc	 0.788633892754357
valid_accuracy	 0.7893122676579926 	train_accuracy	 0.8080618843294857
valid_loss	 0.45779475569725037 	train_loss	 0.42692461609840393
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 298
valid_auc	 0.7741097574181102 	train_auc	 0.7887895722138433
valid_accuracy	 0.7888940520446097 	train_accuracy	 0.8079107995407022
valid_loss	 0.45652535557746887 	train_loss	 0.42590707540512085
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 299
valid_auc	 0.7743567248949453 	train_auc	 0.789085273646049
valid_accuracy	 0.7887546468401487 	train_accuracy	 0.8079259080195806
valid_loss	 0.4571020305156708 	train_loss	 0.42627158761024475
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 300
valid_auc	 0.7745655204437055 	train_auc	 0.7893764459383381
valid_accuracy	 0.7882434944237918 	train_accuracy	 0.8073215688644467
valid_loss	 0.4553467631340027 	train_loss	 0.4248468279838562


Start testing ......................
 Best epoch: 300
===== 设备: cuda =====
训练总段数: 156
实际用段数: 156
实际元素数: 23590
最后一次所用q.shpe: torch.Size([12, 200])
===== 数据来自Test=====

test_auc	 0.761582932465614
test_accuracy	 0.7774480712166172
test_loss	 0.47545886039733887
@ 使用预设Q-matrix:  qm_fold1_trained_0.99.json


===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.7294757565230382 	train_auc	 0.741880690756634
valid_accuracy	 0.7842472118959107 	train_accuracy	 0.8013990451441348
valid_loss	 0.4947877824306488 	train_loss	 0.46117836236953735
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.7465855405629216 	train_auc	 0.7585145058765312
valid_accuracy	 0.7847118959107807 	train_accuracy	 0.802668157369916
valid_loss	 0.47768154740333557 	train_loss	 0.4473254382610321
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.7561641216090051 	train_auc	 0.7678735608901044
valid_accuracy	 0.7875 	train_accuracy	 0.803846618722427
valid_loss	 0.4617407023906708 	train_loss	 0.4351191818714142
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.7608502915084192 	train_auc	 0.7730894517915152
valid_accuracy	 0.7899628252788105 	train_accuracy	 0.8062337583852057
valid_loss	 0.46102917194366455 	train_loss	 0.4331604540348053
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.7645131908655549 	train_auc	 0.7771547480404732
valid_accuracy	 0.7926115241635687 	train_accuracy	 0.809905118752644
valid_loss	 0.4637625813484192 	train_loss	 0.4342283606529236
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.7681944167160137 	train_auc	 0.7814673443593716
valid_accuracy	 0.7934014869888476 	train_accuracy	 0.8109022783586148
valid_loss	 0.45776063203811646 	train_loss	 0.4285927712917328
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.7711699051799883 	train_auc	 0.7849829329226321
valid_accuracy	 0.7940520446096654 	train_accuracy	 0.8120051973167342
valid_loss	 0.4553012549877167 	train_loss	 0.42575162649154663
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.7738644948755318 	train_auc	 0.7881671891988182
valid_accuracy	 0.7955855018587361 	train_accuracy	 0.8133800688946636
valid_loss	 0.4535762369632721 	train_loss	 0.4235038161277771
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.7758290131229224 	train_auc	 0.7904327914120172
valid_accuracy	 0.7967007434944238 	train_accuracy	 0.8144225539372696
valid_loss	 0.4535108208656311 	train_loss	 0.422821581363678
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.7777904624886502 	train_auc	 0.7929089347232292
valid_accuracy	 0.7974442379182156 	train_accuracy	 0.8154952559376322
valid_loss	 0.44970953464508057 	train_loss	 0.41904452443122864
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.7792199847656994 	train_auc	 0.7944277547027825
valid_accuracy	 0.7981412639405204 	train_accuracy	 0.8159334018251042
valid_loss	 0.45125070214271545 	train_loss	 0.41992679238319397
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.7807658331571672 	train_auc	 0.7963188553957603
valid_accuracy	 0.7993494423791822 	train_accuracy	 0.8166888257690216
valid_loss	 0.44969815015792847 	train_loss	 0.41803959012031555
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.782048036714885 	train_auc	 0.7977831249414928
valid_accuracy	 0.7994423791821561 	train_accuracy	 0.8167492596845349
valid_loss	 0.4523817300796509 	train_loss	 0.4198649227619171
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.7836661557195689 	train_auc	 0.7997814995637716
valid_accuracy	 0.800092936802974 	train_accuracy	 0.8177313108116275
valid_loss	 0.4441552758216858 	train_loss	 0.4125840663909912
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.7847787524173954 	train_auc	 0.8010512008708841
valid_accuracy	 0.7993494423791822 	train_accuracy	 0.8182449990934912
valid_loss	 0.44372880458831787 	train_loss	 0.4118666648864746
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.7857090017466091 	train_auc	 0.8023560182947245
valid_accuracy	 0.7996282527881041 	train_accuracy	 0.8187889043331117
valid_loss	 0.4439674913883209 	train_loss	 0.4115024209022522
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.7870054337556722 	train_auc	 0.8040681721138743
valid_accuracy	 0.7995353159851301 	train_accuracy	 0.8191817247839488
valid_loss	 0.4387720823287964 	train_loss	 0.40697401762008667
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.7875343663598193 	train_auc	 0.8046949168573558
valid_accuracy	 0.800185873605948 	train_accuracy	 0.8194083519671239
valid_loss	 0.4443941116333008 	train_loss	 0.4110976755619049
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.788367353839489 	train_auc	 0.805982338771719
valid_accuracy	 0.8005111524163568 	train_accuracy	 0.8196954130658125
valid_loss	 0.43810412287712097 	train_loss	 0.4055834412574768
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.7890730478276465 	train_auc	 0.8067802863933551
valid_accuracy	 0.8006505576208178 	train_accuracy	 0.8202393183054331
valid_loss	 0.438844233751297 	train_loss	 0.40589579939842224
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.7898848321249194 	train_auc	 0.8077595649391555
valid_accuracy	 0.8012546468401487 	train_accuracy	 0.8204206200519731
valid_loss	 0.4403851330280304 	train_loss	 0.406757652759552
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.7904179309684147 	train_auc	 0.8089317681737227
valid_accuracy	 0.7995353159851301 	train_accuracy	 0.8206170302773916
valid_loss	 0.43584108352661133 	train_loss	 0.40275636315345764
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.7911524476451577 	train_auc	 0.8100714873331487
valid_accuracy	 0.8004646840148699 	train_accuracy	 0.8206623557140267
valid_loss	 0.4349250793457031 	train_loss	 0.4015713930130005
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.7916742443244691 	train_auc	 0.8105455305961046
valid_accuracy	 0.8010223048327137 	train_accuracy	 0.820586813319635
valid_loss	 0.43718764185905457 	train_loss	 0.4029645323753357
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.792178898664796 	train_auc	 0.8114276549227737
valid_accuracy	 0.8007434944237918 	train_accuracy	 0.8214479966157008
valid_loss	 0.43412449955940247 	train_loss	 0.400440514087677
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.7929645323704461 	train_auc	 0.8123028542500823
valid_accuracy	 0.8015799256505576 	train_accuracy	 0.8215084305312141
valid_loss	 0.4344801902770996 	train_loss	 0.4002929627895355
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.7936535614012109 	train_auc	 0.8133036170350456
valid_accuracy	 0.8009293680297398 	train_accuracy	 0.8216746237988759
valid_loss	 0.43340015411376953 	train_loss	 0.3991446793079376
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.7940449709083038 	train_auc	 0.8137751414849128
valid_accuracy	 0.8010687732342008 	train_accuracy	 0.821810600108781
valid_loss	 0.43419647216796875 	train_loss	 0.3994537591934204
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.794404798833195 	train_auc	 0.8146868740218064
valid_accuracy	 0.8016728624535316 	train_accuracy	 0.8216746237988759
valid_loss	 0.43198347091674805 	train_loss	 0.397722065448761
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.7954085897266168 	train_auc	 0.8157242241993169
valid_accuracy	 0.8016728624535316 	train_accuracy	 0.8219163594609294
valid_loss	 0.4315618574619293 	train_loss	 0.39694735407829285
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.7960787094865307 	train_auc	 0.8162781234233973
valid_accuracy	 0.8019052044609666 	train_accuracy	 0.8222638544751314
valid_loss	 0.43321946263313293 	train_loss	 0.3978201448917389
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.7964813591601982 	train_auc	 0.8170288047463607
valid_accuracy	 0.8020446096654275 	train_accuracy	 0.8223847223061582
valid_loss	 0.43165600299835205 	train_loss	 0.39634907245635986
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.7969951519481429 	train_auc	 0.8179715799526708
valid_accuracy	 0.8020910780669145 	train_accuracy	 0.8228681936302653
valid_loss	 0.4312272071838379 	train_loss	 0.3955208361148834
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.7974331216598556 	train_auc	 0.818396850213813
valid_accuracy	 0.8022304832713755 	train_accuracy	 0.8227775427569952
valid_loss	 0.43225035071372986 	train_loss	 0.39596086740493774
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.7979790912070515 	train_auc	 0.8192428629854873
valid_accuracy	 0.8021840148698884 	train_accuracy	 0.8231250377711972
valid_loss	 0.4304946959018707 	train_loss	 0.3944670259952545
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.7986991810400994 	train_auc	 0.8197243154211962
valid_accuracy	 0.8021840148698884 	train_accuracy	 0.822898410588022
valid_loss	 0.43217596411705017 	train_loss	 0.3955547511577606
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.7990878316535763 	train_auc	 0.8205348668334224
valid_accuracy	 0.8017657992565056 	train_accuracy	 0.8231552547289539
valid_loss	 0.431808203458786 	train_loss	 0.3947557508945465
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.7994830168150784 	train_auc	 0.8213057917446449
valid_accuracy	 0.8023698884758365 	train_accuracy	 0.8239257871517496
valid_loss	 0.4298858940601349 	train_loss	 0.39299970865249634
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.7998271903436095 	train_auc	 0.8219282310265924
valid_accuracy	 0.8020910780669145 	train_accuracy	 0.8239862210672629
valid_loss	 0.4282631278038025 	train_loss	 0.3918880820274353
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.8005896555426465 	train_auc	 0.8225896063241019
valid_accuracy	 0.8027881040892193 	train_accuracy	 0.8239560041095062
valid_loss	 0.42870405316352844 	train_loss	 0.3917541801929474
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.801143256995553 	train_auc	 0.823027558871664
valid_accuracy	 0.8036245353159851 	train_accuracy	 0.8245603432646401
valid_loss	 0.43003007769584656 	train_loss	 0.39246273040771484
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.8015050440448996 	train_auc	 0.8239440685397246
valid_accuracy	 0.8024628252788104 	train_accuracy	 0.8243941499969784
valid_loss	 0.42730337381362915 	train_loss	 0.3902089595794678
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.8020654156367469 	train_auc	 0.8242631818741708
valid_accuracy	 0.8034851301115241 	train_accuracy	 0.8244848008702483
valid_loss	 0.4302755296230316 	train_loss	 0.3919817805290222
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.8024309163428935 	train_auc	 0.8252634340889132
valid_accuracy	 0.8030669144981413 	train_accuracy	 0.8245905602223969
valid_loss	 0.42670121788978577 	train_loss	 0.3891374468803406
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.8024953690575709 	train_auc	 0.8255755786608379
valid_accuracy	 0.8031598513011152 	train_accuracy	 0.8245452347857618
valid_loss	 0.42697998881340027 	train_loss	 0.3892032206058502
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.8032701159830197 	train_auc	 0.8262239882533562
valid_accuracy	 0.8043215613382899 	train_accuracy	 0.8246509941379102
valid_loss	 0.4284369945526123 	train_loss	 0.3897237181663513
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.8034998295251735 	train_auc	 0.8269686552675162
valid_accuracy	 0.8030204460966542 	train_accuracy	 0.8250438145887472
valid_loss	 0.42596349120140076 	train_loss	 0.3877261281013489
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.804092012090377 	train_auc	 0.8270191287807586
valid_accuracy	 0.8047862453531599 	train_accuracy	 0.8255726113494893
valid_loss	 0.42932477593421936 	train_loss	 0.3900049030780792
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.8042613399610266 	train_auc	 0.828040656144002
valid_accuracy	 0.804135687732342 	train_accuracy	 0.8255423943917326
valid_loss	 0.4252986013889313 	train_loss	 0.3867534399032593
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.804600528881766 	train_auc	 0.8283721120793746
valid_accuracy	 0.8048791821561339 	train_accuracy	 0.8257388046171511
valid_loss	 0.426852285861969 	train_loss	 0.3874710202217102
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.805273984113063 	train_auc	 0.8291079257364431
valid_accuracy	 0.8053903345724907 	train_accuracy	 0.8261014081102315
valid_loss	 0.4264737069606781 	train_loss	 0.3869656026363373
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.8051330263484507 	train_auc	 0.8292806721343666
valid_accuracy	 0.8049721189591078 	train_accuracy	 0.8261165165891098
valid_loss	 0.42485737800598145 	train_loss	 0.3857764005661011
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.80561056913421 	train_auc	 0.8299733221155151
valid_accuracy	 0.8047397769516729 	train_accuracy	 0.82629781833565
valid_loss	 0.4250531792640686 	train_loss	 0.3854224681854248
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.8059997901256928 	train_auc	 0.8304796556453242
valid_accuracy	 0.8052044609665427 	train_accuracy	 0.826690638786487
valid_loss	 0.4238162338733673 	train_loss	 0.3845321834087372
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.8066655824524744 	train_auc	 0.8312241621945577
valid_accuracy	 0.8060873605947956 	train_accuracy	 0.8268719405330271
valid_loss	 0.4237670302391052 	train_loss	 0.3841135501861572
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.8066686017360496 	train_auc	 0.8312040443385571
valid_accuracy	 0.8059944237918215 	train_accuracy	 0.8270381338006889
valid_loss	 0.4244866371154785 	train_loss	 0.38452237844467163
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.8069181545131947 	train_auc	 0.8319679928460708
valid_accuracy	 0.8049721189591078 	train_accuracy	 0.8266453133498519
valid_loss	 0.4228752553462982 	train_loss	 0.38345688581466675
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.8073447414638313 	train_auc	 0.8322699788072374
valid_accuracy	 0.8057156133828997 	train_accuracy	 0.827385628814891
valid_loss	 0.42371049523353577 	train_loss	 0.38340458273887634
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.8080511546242571 	train_auc	 0.8329628997031968
valid_accuracy	 0.8064591078066915 	train_accuracy	 0.8268719405330271
valid_loss	 0.4236491620540619 	train_loss	 0.38307127356529236
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.8081312989338607 	train_auc	 0.8330084349256928
valid_accuracy	 0.8063661710037174 	train_accuracy	 0.8272949779416209
valid_loss	 0.4231176972389221 	train_loss	 0.3827444612979889
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.8085079096116022 	train_auc	 0.8337003478796248
valid_accuracy	 0.8060873605947956 	train_accuracy	 0.8268719405330271
valid_loss	 0.423272967338562 	train_loss	 0.3823454678058624
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.8082529320436392 	train_auc	 0.8337314086100284
valid_accuracy	 0.8060408921933085 	train_accuracy	 0.8270079168429323
valid_loss	 0.42336979508399963 	train_loss	 0.3822285830974579
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.8078665133440988 	train_auc	 0.8341965825388651
valid_accuracy	 0.8059944237918215 	train_accuracy	 0.8273705203360125
valid_loss	 0.4213782846927643 	train_loss	 0.38083237409591675
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.8086780620504561 	train_auc	 0.8345227299332496
valid_accuracy	 0.8059014869888476 	train_accuracy	 0.8274913881670394
valid_loss	 0.4232618808746338 	train_loss	 0.38166067004203796
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.8090053350306792 	train_auc	 0.8354008106827018
valid_accuracy	 0.8055762081784387 	train_accuracy	 0.827823774702363
valid_loss	 0.4208870530128479 	train_loss	 0.3798769414424896
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.8099158257217938 	train_auc	 0.8359322885802349
valid_accuracy	 0.8069237918215614 	train_accuracy	 0.8277029068713362
valid_loss	 0.4260818362236023 	train_loss	 0.38305264711380005
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.8098353714241437 	train_auc	 0.8361260204562078
valid_accuracy	 0.8061338289962825 	train_accuracy	 0.8281863781954433
valid_loss	 0.42279866337776184 	train_loss	 0.38030698895454407
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.8099357455536771 	train_auc	 0.8367513515800988
valid_accuracy	 0.8067843866171004 	train_accuracy	 0.8285489816885236
valid_loss	 0.4212217330932617 	train_loss	 0.3790399134159088
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.810114360666207 	train_auc	 0.8365038486713767
valid_accuracy	 0.8068773234200743 	train_accuracy	 0.8283676799419835
valid_loss	 0.4224974811077118 	train_loss	 0.3799293041229248
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.8106399268001666 	train_auc	 0.8377348668167507
valid_accuracy	 0.8065055762081784 	train_accuracy	 0.8286849579984287
valid_loss	 0.42038026452064514 	train_loss	 0.37806472182273865
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.8104758687263116 	train_auc	 0.8371293833287027
valid_accuracy	 0.8063661710037174 	train_accuracy	 0.8279446425333897
valid_loss	 0.42229321599006653 	train_loss	 0.3795158565044403
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.8107551369576169 	train_auc	 0.838138911944434
valid_accuracy	 0.8064591078066915 	train_accuracy	 0.8288209343083338
valid_loss	 0.42038220167160034 	train_loss	 0.3776363432407379
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.8113416529413259 	train_auc	 0.8385979993205179
valid_accuracy	 0.8072490706319703 	train_accuracy	 0.8295008158578594
valid_loss	 0.42116743326187134 	train_loss	 0.3778333365917206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.8113636124945568 	train_auc	 0.8385183906559899
valid_accuracy	 0.8071096654275093 	train_accuracy	 0.8290324530126307
valid_loss	 0.4210774004459381 	train_loss	 0.37782642245292664
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.8110943630769221 	train_auc	 0.8392591912295402
valid_accuracy	 0.8057156133828997 	train_accuracy	 0.8284281138574968
valid_loss	 0.41884592175483704 	train_loss	 0.37648990750312805
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.8118099456837704 	train_auc	 0.8394654998046218
valid_accuracy	 0.8073884758364313 	train_accuracy	 0.8291231038859007
valid_loss	 0.4208795130252838 	train_loss	 0.3770523965358734
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.8115972318860996 	train_auc	 0.8397258885331986
valid_accuracy	 0.8063197026022305 	train_accuracy	 0.8289720190971173
valid_loss	 0.419698566198349 	train_loss	 0.3761552572250366
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.8119423043799662 	train_auc	 0.8399727273533071
valid_accuracy	 0.8073420074349442 	train_accuracy	 0.8291835378014142
valid_loss	 0.4199654459953308 	train_loss	 0.3761959969997406
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.8114852580038572 	train_auc	 0.8400920417093218
valid_accuracy	 0.8065520446096655 	train_accuracy	 0.8291986462802925
valid_loss	 0.4197933077812195 	train_loss	 0.375914603471756
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.8123475641529873 	train_auc	 0.8407585581363595
valid_accuracy	 0.8075743494423792 	train_accuracy	 0.8296972260832779
valid_loss	 0.4203057289123535 	train_loss	 0.37561625242233276
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.8119573326004721 	train_auc	 0.8409094569914124
valid_accuracy	 0.8066449814126394 	train_accuracy	 0.8292439717169275
valid_loss	 0.41886386275291443 	train_loss	 0.37484320998191833
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.8128780652966509 	train_auc	 0.8415880944249539
valid_accuracy	 0.808224907063197 	train_accuracy	 0.8295914667311295
valid_loss	 0.4198932945728302 	train_loss	 0.3748627305030823
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.811873065449847 	train_auc	 0.8408902609404223
valid_accuracy	 0.8068773234200743 	train_accuracy	 0.8296972260832779
valid_loss	 0.41980934143066406 	train_loss	 0.3750913739204407
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.8127017688947107 	train_auc	 0.8421804830024852
valid_accuracy	 0.8075743494423792 	train_accuracy	 0.8301958058862634
valid_loss	 0.41857799887657166 	train_loss	 0.3737674653530121
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.8128772345286859 	train_auc	 0.8424608742746047
valid_accuracy	 0.8074349442379182 	train_accuracy	 0.8305584093793437
valid_loss	 0.41926395893096924 	train_loss	 0.3737109303474426
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.8132716261207882 	train_auc	 0.8427050324273913
valid_accuracy	 0.8078066914498141 	train_accuracy	 0.8307699280836406
valid_loss	 0.4203166365623474 	train_loss	 0.37403586506843567
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.81300288508355 	train_auc	 0.8428337954584285
valid_accuracy	 0.808224907063197 	train_accuracy	 0.8302562398017768
valid_loss	 0.4190704822540283 	train_loss	 0.37338966131210327
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.8136823478831927 	train_auc	 0.8431814520994967
valid_accuracy	 0.80817843866171 	train_accuracy	 0.8311023146189641
valid_loss	 0.4199967086315155 	train_loss	 0.37361669540405273
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.8132939390603923 	train_auc	 0.8439903175880146
valid_accuracy	 0.8073884758364313 	train_accuracy	 0.8306943856892488
valid_loss	 0.41768378019332886 	train_loss	 0.37204796075820923
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.8129829094538182 	train_auc	 0.8434575636122564
valid_accuracy	 0.8061802973977695 	train_accuracy	 0.8292590801958059
valid_loss	 0.42005455493927 	train_loss	 0.37362268567085266
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.8140850099563821 	train_auc	 0.8441500093653166
valid_accuracy	 0.808410780669145 	train_accuracy	 0.8319937148727866
valid_loss	 0.4212662875652313 	train_loss	 0.37376198172569275
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.8141225991069294 	train_auc	 0.8448819419940548
valid_accuracy	 0.8079460966542751 	train_accuracy	 0.8311929654922342
valid_loss	 0.41759487986564636 	train_loss	 0.37120795249938965
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.8125885364609986 	train_auc	 0.8436638791338718
valid_accuracy	 0.8058550185873606 	train_accuracy	 0.8300749380552366
valid_loss	 0.41985535621643066 	train_loss	 0.37280672788619995
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.8139976553248115 	train_auc	 0.845067900698913
valid_accuracy	 0.8077137546468401 	train_accuracy	 0.8317821961684898
valid_loss	 0.4191128611564636 	train_loss	 0.37134596705436707
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.8136297739104661 	train_auc	 0.8451508874627378
valid_accuracy	 0.8077602230483272 	train_accuracy	 0.8316764368163413
valid_loss	 0.4190099239349365 	train_loss	 0.37105420231819153
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.813665596129147 	train_auc	 0.8455494121801577
valid_accuracy	 0.8077137546468401 	train_accuracy	 0.8322203420559618
valid_loss	 0.4186995327472687 	train_loss	 0.37058061361312866
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.8146207684973183 	train_auc	 0.8461231944674027
valid_accuracy	 0.8086431226765799 	train_accuracy	 0.8326887049011905
valid_loss	 0.4191102087497711 	train_loss	 0.3704943060874939
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.8148279645077574 	train_auc	 0.8464733622803724
valid_accuracy	 0.8080855018587361 	train_accuracy	 0.8325829455490421
valid_loss	 0.4195202589035034 	train_loss	 0.3703429400920868
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.8139029353772507 	train_auc	 0.8459597369742283
valid_accuracy	 0.8088289962825279 	train_accuracy	 0.8321145827038133
valid_loss	 0.41947290301322937 	train_loss	 0.3704603314399719
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.8142620193308298 	train_auc	 0.8467658474675146
valid_accuracy	 0.8065520446096655 	train_accuracy	 0.830875687435789
valid_loss	 0.41834598779678345 	train_loss	 0.3699745535850525
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.8136811203305276 	train_auc	 0.8462256697312829
valid_accuracy	 0.8061802973977695 	train_accuracy	 0.8315555689853146
valid_loss	 0.4190009832382202 	train_loss	 0.3699840009212494
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.815373853458061 	train_auc	 0.8473320823459878
valid_accuracy	 0.8087825278810409 	train_accuracy	 0.8334894542817429
valid_loss	 0.42112797498703003 	train_loss	 0.3707440197467804
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.8148353050247041 	train_auc	 0.8483904450930284
valid_accuracy	 0.8073420074349442 	train_accuracy	 0.8329757659998791
valid_loss	 0.41654765605926514 	train_loss	 0.3676384687423706
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.8152424371255274 	train_auc	 0.847901231295312
valid_accuracy	 0.808317843866171 	train_accuracy	 0.8331721762252976
valid_loss	 0.41956380009651184 	train_loss	 0.36902371048927307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.8139067172314208 	train_auc	 0.8479128243652612
valid_accuracy	 0.8077137546468401 	train_accuracy	 0.8332930440563244
valid_loss	 0.4179288148880005 	train_loss	 0.36794859170913696
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.815301465049387 	train_auc	 0.8486549975738538
valid_accuracy	 0.8081319702602231 	train_accuracy	 0.832839789689974
valid_loss	 0.4182398319244385 	train_loss	 0.36773258447647095
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.8150841820279073 	train_auc	 0.84889057953624
valid_accuracy	 0.808039033457249 	train_accuracy	 0.8335649966761346
valid_loss	 0.41871774196624756 	train_loss	 0.3676142692565918
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.8146014500422458 	train_auc	 0.8492269049916763
valid_accuracy	 0.8062732342007435 	train_accuracy	 0.8336254305916481
valid_loss	 0.4172872006893158 	train_loss	 0.36676308512687683
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.8158455994673464 	train_auc	 0.8492012479697714
valid_accuracy	 0.8089684014869889 	train_accuracy	 0.8341995527890252
valid_loss	 0.4209519028663635 	train_loss	 0.3686991333961487
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.8144398470737209 	train_auc	 0.8490264606802718
valid_accuracy	 0.8064126394052045 	train_accuracy	 0.8325678370701638
valid_loss	 0.4180162250995636 	train_loss	 0.36725714802742004
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.8154290375301412 	train_auc	 0.8504447316697162
valid_accuracy	 0.8075743494423792 	train_accuracy	 0.8344563969299571
valid_loss	 0.4171677529811859 	train_loss	 0.3655683994293213
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.814883198177925 	train_auc	 0.8489733002478272
valid_accuracy	 0.8059014869888476 	train_accuracy	 0.8316915452952197
valid_loss	 0.41974788904190063 	train_loss	 0.36815759539604187
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.8157855299836497 	train_auc	 0.8508664585040617
valid_accuracy	 0.8079925650557621 	train_accuracy	 0.8348341089019158
valid_loss	 0.4175678789615631 	train_loss	 0.3653068244457245
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.8156025626389436 	train_auc	 0.8508698157637576
valid_accuracy	 0.808317843866171 	train_accuracy	 0.8345017223665921
valid_loss	 0.41817131638526917 	train_loss	 0.365416556596756
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.8157842094345706 	train_auc	 0.8509886904041946
valid_accuracy	 0.8067843866171004 	train_accuracy	 0.8337311899437965
valid_loss	 0.4180474877357483 	train_loss	 0.36547496914863586
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.816072777307278 	train_auc	 0.8510391701693173
valid_accuracy	 0.80817843866171 	train_accuracy	 0.8340937934368767
valid_loss	 0.4185819625854492 	train_loss	 0.3654390275478363
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.8161595801601252 	train_auc	 0.8519878867458277
valid_accuracy	 0.808224907063197 	train_accuracy	 0.8352722547893878
valid_loss	 0.4177444279193878 	train_loss	 0.36421599984169006
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.815190222738935 	train_auc	 0.8519245718705456
valid_accuracy	 0.8079460966542751 	train_accuracy	 0.8350305191273343
valid_loss	 0.4163661301136017 	train_loss	 0.36370623111724854
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.815924001644127 	train_auc	 0.852128754111688
valid_accuracy	 0.8073420074349442 	train_accuracy	 0.8343808545355653
valid_loss	 0.4173167049884796 	train_loss	 0.3643403649330139
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.8156394202177006 	train_auc	 0.8523937553385847
valid_accuracy	 0.8073420074349442 	train_accuracy	 0.8356650752402248
valid_loss	 0.4163983464241028 	train_loss	 0.3634263873100281
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.8164800148040372 	train_auc	 0.8526331877645535
valid_accuracy	 0.808410780669145 	train_accuracy	 0.8358161600290083
valid_loss	 0.4180073142051697 	train_loss	 0.363707035779953
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.8158886320079943 	train_auc	 0.8529067248919557
valid_accuracy	 0.8066449814126394 	train_accuracy	 0.8355744243669547
valid_loss	 0.4170391857624054 	train_loss	 0.3631070554256439
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.8155507078384855 	train_auc	 0.8528125687967323
valid_accuracy	 0.8070631970260222 	train_accuracy	 0.8343355290989303
valid_loss	 0.4174695909023285 	train_loss	 0.3635999262332916
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.8165547901206711 	train_auc	 0.8531242153021965
valid_accuracy	 0.808271375464684 	train_accuracy	 0.836193872000967
valid_loss	 0.4190284013748169 	train_loss	 0.36358240246772766
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.8167560653594172 	train_auc	 0.8542369124458625
valid_accuracy	 0.8077602230483272 	train_accuracy	 0.8360578956910618
valid_loss	 0.4175005853176117 	train_loss	 0.361880362033844
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.8163230554564525 	train_auc	 0.8539270748177514
valid_accuracy	 0.807899628252788 	train_accuracy	 0.8353326887049012
valid_loss	 0.41747257113456726 	train_loss	 0.36220312118530273
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.8160975453522121 	train_auc	 0.8540226987155276
valid_accuracy	 0.808317843866171 	train_accuracy	 0.8360730041699401
valid_loss	 0.418091356754303 	train_loss	 0.3620695471763611
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.8169778556070967 	train_auc	 0.8544942697071698
valid_accuracy	 0.8090148698884758 	train_accuracy	 0.8360578956910618
valid_loss	 0.41868093609809875 	train_loss	 0.36200201511383057
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.8149879431389173 	train_auc	 0.8541736267460217
valid_accuracy	 0.8039498141263941 	train_accuracy	 0.8334894542817429
valid_loss	 0.41923901438713074 	train_loss	 0.3640095293521881
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.8170325746971066 	train_auc	 0.8556766072396274
valid_accuracy	 0.8085501858736059 	train_accuracy	 0.8367075602828308
valid_loss	 0.4167696535587311 	train_loss	 0.36019206047058105
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.8167588366525551 	train_auc	 0.8548874928301353
valid_accuracy	 0.8076672862453531 	train_accuracy	 0.8353931226204145
valid_loss	 0.41780388355255127 	train_loss	 0.361408531665802
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.8162749143127941 	train_auc	 0.8555965317680403
valid_accuracy	 0.8074349442379182 	train_accuracy	 0.836677343325074
valid_loss	 0.41710472106933594 	train_loss	 0.36018049716949463
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.8166945017333354 	train_auc	 0.856690449652733
valid_accuracy	 0.8075743494423792 	train_accuracy	 0.8366169094095607
valid_loss	 0.4168701767921448 	train_loss	 0.35912564396858215
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.8167234174183351 	train_auc	 0.8558688254659255
valid_accuracy	 0.808457249070632 	train_accuracy	 0.8363298483108721
valid_loss	 0.418599009513855 	train_loss	 0.3602725863456726
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.8174740100751818 	train_auc	 0.857327776745523
valid_accuracy	 0.8092936802973978 	train_accuracy	 0.8380371064241252
valid_loss	 0.4165284037590027 	train_loss	 0.35847821831703186
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.8155650726845713 	train_auc	 0.8557225509182999
valid_accuracy	 0.8035315985130111 	train_accuracy	 0.8340031425636067
valid_loss	 0.4194699823856354 	train_loss	 0.36166268587112427
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.8170067340935306 	train_auc	 0.8574934425417334
valid_accuracy	 0.8065520446096655 	train_accuracy	 0.8367377772405874
valid_loss	 0.4174242913722992 	train_loss	 0.35869359970092773
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.8172456790797165 	train_auc	 0.8574832200228664
valid_accuracy	 0.8069237918215614 	train_accuracy	 0.837417658790113
valid_loss	 0.4175671339035034 	train_loss	 0.3584321439266205
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.8167626681048128 	train_auc	 0.8572746996714818
valid_accuracy	 0.8068773234200743 	train_accuracy	 0.8366018009306823
valid_loss	 0.4179345369338989 	train_loss	 0.3588343560695648
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.8162359054169928 	train_auc	 0.8581227269379044
valid_accuracy	 0.8058085501858736 	train_accuracy	 0.8363751737475071
valid_loss	 0.41654348373413086 	train_loss	 0.35826992988586426
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.817804599927505 	train_auc	 0.8577322733978909
valid_accuracy	 0.8101301115241636 	train_accuracy	 0.8380522149030035
valid_loss	 0.4205871820449829 	train_loss	 0.3599098026752472
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.8168259800634783 	train_auc	 0.8581908988294896
valid_accuracy	 0.8067379182156134 	train_accuracy	 0.8371608146491811
valid_loss	 0.417683869600296 	train_loss	 0.3576812446117401
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.816302100264493 	train_auc	 0.8579294972963118
valid_accuracy	 0.8046003717472119 	train_accuracy	 0.8366018009306823
valid_loss	 0.418971449136734 	train_loss	 0.3590107262134552
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.8171777296998717 	train_auc	 0.8590622963189513
valid_accuracy	 0.8090613382899629 	train_accuracy	 0.8387925303680426
valid_loss	 0.41814306378364563 	train_loss	 0.3571700155735016
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.8177888215359259 	train_auc	 0.8591692875243342
valid_accuracy	 0.808224907063197 	train_accuracy	 0.8377651538043149
valid_loss	 0.4176163673400879 	train_loss	 0.3567957580089569
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.8163601114275592 	train_auc	 0.8576639257590053
valid_accuracy	 0.8062732342007435 	train_accuracy	 0.8377047198888016
valid_loss	 0.41975438594818115 	train_loss	 0.3585556745529175
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.8165187757094011 	train_auc	 0.8605251195963853
valid_accuracy	 0.8070167286245353 	train_accuracy	 0.8389738321145827
valid_loss	 0.4162437915802002 	train_loss	 0.3549734354019165
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.8169664914453032 	train_auc	 0.8594720021768769
valid_accuracy	 0.808317843866171 	train_accuracy	 0.839336435607663
valid_loss	 0.418618768453598 	train_loss	 0.3562659025192261
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.8170511801796718 	train_auc	 0.860105931720076
valid_accuracy	 0.8078066914498141 	train_accuracy	 0.8387925303680426
valid_loss	 0.4178379774093628 	train_loss	 0.35546818375587463
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.8163156901404619 	train_auc	 0.8603101313275522
valid_accuracy	 0.8046933085501858 	train_accuracy	 0.8378709131564634
valid_loss	 0.4179706573486328 	train_loss	 0.35632753372192383
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.817207705543991 	train_auc	 0.8602041105529155
valid_accuracy	 0.8072955390334573 	train_accuracy	 0.8391249169033662
valid_loss	 0.4187847673892975 	train_loss	 0.3555195927619934
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 152
valid_auc	 0.8173049859928181 	train_auc	 0.86076239581832
valid_accuracy	 0.8088289962825279 	train_accuracy	 0.8398047984528918
valid_loss	 0.418639600276947 	train_loss	 0.35492926836013794
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.8179851121668809 	train_auc	 0.8618643300028039
valid_accuracy	 0.8094795539033457 	train_accuracy	 0.8400163171571886
valid_loss	 0.41929519176483154 	train_loss	 0.3544563353061676
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.815341180717935 	train_auc	 0.86014812288129
valid_accuracy	 0.8017193308550186 	train_accuracy	 0.8369795129026409
valid_loss	 0.4209222197532654 	train_loss	 0.3581438958644867
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.8180380643250243 	train_auc	 0.8621878377144149
valid_accuracy	 0.8096189591078067 	train_accuracy	 0.8399407747627968
valid_loss	 0.4178980588912964 	train_loss	 0.35347041487693787
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.8163076118519639 	train_auc	 0.8618238831161806
valid_accuracy	 0.8064126394052045 	train_accuracy	 0.8398047984528918
valid_loss	 0.4173898994922638 	train_loss	 0.35359928011894226
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.817103983543553 	train_auc	 0.861443359645969
valid_accuracy	 0.8063661710037174 	train_accuracy	 0.8395479543119598
valid_loss	 0.4191555976867676 	train_loss	 0.3543996810913086
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.8182509207171967 	train_auc	 0.8628419497163772
valid_accuracy	 0.8098048327137547 	train_accuracy	 0.8411192361153079
valid_loss	 0.4191652238368988 	train_loss	 0.3534030616283417
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.8166219893294426 	train_auc	 0.8622296878008282
valid_accuracy	 0.8056226765799257 	train_accuracy	 0.8398199069317701
valid_loss	 0.4183242619037628 	train_loss	 0.3537689745426178
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.8188578773127078 	train_auc	 0.8632213804968512
valid_accuracy	 0.8099907063197026 	train_accuracy	 0.8411796700308213
valid_loss	 0.41948527097702026 	train_loss	 0.35286983847618103
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.8164042599251756 	train_auc	 0.8617517134945001
valid_accuracy	 0.8051115241635688 	train_accuracy	 0.8398652323684052
valid_loss	 0.4190932810306549 	train_loss	 0.3537326455116272
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.8168920571155207 	train_auc	 0.8637252535644541
valid_accuracy	 0.808410780669145 	train_accuracy	 0.8412854293829697
valid_loss	 0.4175981879234314 	train_loss	 0.3513270616531372
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.8174319694962835 	train_auc	 0.8636964386483679
valid_accuracy	 0.8066449814126394 	train_accuracy	 0.8408775004532544
valid_loss	 0.4182390868663788 	train_loss	 0.35196441411972046
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.8172869694875418 	train_auc	 0.8638203613347826
valid_accuracy	 0.808457249070632 	train_accuracy	 0.8408472834954976
valid_loss	 0.4186326563358307 	train_loss	 0.3514584004878998
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.8175619474842801 	train_auc	 0.8646139173578675
valid_accuracy	 0.8059479553903346 	train_accuracy	 0.8409681513265245
valid_loss	 0.41751760244369507 	train_loss	 0.35079172253608704
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.8178869203531964 	train_auc	 0.8647086458474609
valid_accuracy	 0.8087825278810409 	train_accuracy	 0.8416631413549284
valid_loss	 0.4185892641544342 	train_loss	 0.3505009412765503
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.8175006566476793 	train_auc	 0.8650218039186396
valid_accuracy	 0.8073420074349442 	train_accuracy	 0.8422372635523055
valid_loss	 0.4181247651576996 	train_loss	 0.3499835729598999
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.8182452789347461 	train_auc	 0.8652806977531826
valid_accuracy	 0.8073884758364313 	train_accuracy	 0.8414969480872666
valid_loss	 0.41817086935043335 	train_loss	 0.3500104546546936
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.8177926715874665 	train_auc	 0.8657917681242633
valid_accuracy	 0.8090613382899629 	train_accuracy	 0.8424487822566024
valid_loss	 0.4189395010471344 	train_loss	 0.34965598583221436
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 170
valid_auc	 0.817532814807648 	train_auc	 0.8653687256164513
valid_accuracy	 0.8064126394052045 	train_accuracy	 0.8419350939747386
valid_loss	 0.41925862431526184 	train_loss	 0.3498326539993286
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.8181003657226577 	train_auc	 0.866291964391624
valid_accuracy	 0.8086431226765799 	train_accuracy	 0.8423732398622107
valid_loss	 0.4184715449810028 	train_loss	 0.3487192392349243
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.817684994139552 	train_auc	 0.8668300019008495
valid_accuracy	 0.8073420074349442 	train_accuracy	 0.8429020366229528
valid_loss	 0.4172315299510956 	train_loss	 0.3480486273765564
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.8182891608426421 	train_auc	 0.8665041941919588
valid_accuracy	 0.8077137546468401 	train_accuracy	 0.8423732398622107
valid_loss	 0.41862398386001587 	train_loss	 0.3486234247684479
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.8173379315224252 	train_auc	 0.8667173812246255
valid_accuracy	 0.8061338289962825 	train_accuracy	 0.8426754094397776
valid_loss	 0.4180581867694855 	train_loss	 0.3480933904647827
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.8180860938729859 	train_auc	 0.8678741374523943
valid_accuracy	 0.8077602230483272 	train_accuracy	 0.8435063757780866
valid_loss	 0.417470246553421 	train_loss	 0.34691110253334045
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.8164808641712852 	train_auc	 0.8656181610508249
valid_accuracy	 0.8054832713754647 	train_accuracy	 0.8419653109324953
valid_loss	 0.41946396231651306 	train_loss	 0.3494901955127716
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.8185946230638967 	train_auc	 0.8676406012441575
valid_accuracy	 0.808224907063197 	train_accuracy	 0.8435970266513567
valid_loss	 0.41857972741127014 	train_loss	 0.34725162386894226
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.8177536192933386 	train_auc	 0.8680924663092424
valid_accuracy	 0.808039033457249 	train_accuracy	 0.8435970266513567
valid_loss	 0.4183998107910156 	train_loss	 0.3465993106365204
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.8177736569206796 	train_auc	 0.8681207268919461
valid_accuracy	 0.807899628252788 	train_accuracy	 0.8433401825104249
valid_loss	 0.4189780652523041 	train_loss	 0.34662383794784546
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.8158900517532485 	train_auc	 0.8667071086907164
valid_accuracy	 0.8028345724907063 	train_accuracy	 0.842040853326887
valid_loss	 0.4204294979572296 	train_loss	 0.34913888573646545
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.8181380912679455 	train_auc	 0.8686952427331409
valid_accuracy	 0.8081319702602231 	train_accuracy	 0.8439294131866804
valid_loss	 0.41938817501068115 	train_loss	 0.34610244631767273
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 182
valid_auc	 0.8174756034137421 	train_auc	 0.8691135525676014
valid_accuracy	 0.8063661710037174 	train_accuracy	 0.8439747386233154
valid_loss	 0.4185124337673187 	train_loss	 0.34561091661453247
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.817799751714454 	train_auc	 0.8694144298620032
valid_accuracy	 0.8092007434944238 	train_accuracy	 0.8443373421163958
valid_loss	 0.41999921202659607 	train_loss	 0.34552061557769775
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.8181343714113846 	train_auc	 0.8694126682210787
valid_accuracy	 0.8071561338289963 	train_accuracy	 0.8443524505952741
valid_loss	 0.41896364092826843 	train_loss	 0.34510403871536255
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.817470668404038 	train_auc	 0.8698159193599698
valid_accuracy	 0.8085037174721189 	train_accuracy	 0.8445488608206926
valid_loss	 0.4194183945655823 	train_loss	 0.34481081366539
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.8183784993977117 	train_auc	 0.8701562376829275
valid_accuracy	 0.8055762081784387 	train_accuracy	 0.8446092947362059
valid_loss	 0.4192044138908386 	train_loss	 0.34472227096557617
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.8175820347097087 	train_auc	 0.8708115715801528
valid_accuracy	 0.8072026022304832 	train_accuracy	 0.8447452710461111
valid_loss	 0.4178045690059662 	train_loss	 0.34343692660331726
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.8172888728141487 	train_auc	 0.8695836439475839
valid_accuracy	 0.8060873605947956 	train_accuracy	 0.8440804979754638
valid_loss	 0.420131117105484 	train_loss	 0.3450382351875305
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.816517746549086 	train_auc	 0.8709674406800068
valid_accuracy	 0.804228624535316 	train_accuracy	 0.8445941862573276
valid_loss	 0.41892778873443604 	train_loss	 0.34421584010124207
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.8183351754682999 	train_auc	 0.8713177453396888
valid_accuracy	 0.8098977695167286 	train_accuracy	 0.8446848371305977
valid_loss	 0.42092761397361755 	train_loss	 0.3441535532474518
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.8172047296587426 	train_auc	 0.8710495195318881
valid_accuracy	 0.8055762081784387 	train_accuracy	 0.8453647186801233
valid_loss	 0.4190962314605713 	train_loss	 0.3432387411594391
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.8177153233700447 	train_auc	 0.8714712303892062
valid_accuracy	 0.8070167286245353 	train_accuracy	 0.8457575391309603
valid_loss	 0.42011964321136475 	train_loss	 0.342849999666214
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.8182938230628652 	train_auc	 0.8719694635661676
valid_accuracy	 0.8076672862453531 	train_accuracy	 0.8459539493563788
valid_loss	 0.42026540637016296 	train_loss	 0.34230074286460876
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.817426030125308 	train_auc	 0.8727264655400667
valid_accuracy	 0.8072955390334573 	train_accuracy	 0.8459690578352571
valid_loss	 0.4191977083683014 	train_loss	 0.3414806127548218
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 195
valid_auc	 0.8163543208508462 	train_auc	 0.8728334845315838
valid_accuracy	 0.8063661710037174 	train_accuracy	 0.8464525291593642
valid_loss	 0.4190255105495453 	train_loss	 0.3413270115852356
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.8175921899181199 	train_auc	 0.8739218854792801
valid_accuracy	 0.8076208178438662 	train_accuracy	 0.8466489393847827
valid_loss	 0.41913318634033203 	train_loss	 0.34005627036094666
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.8172756053257484 	train_auc	 0.8723279838911553
valid_accuracy	 0.804182156133829 	train_accuracy	 0.8459539493563788
valid_loss	 0.4204454720020294 	train_loss	 0.3423798084259033
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.816414675523546 	train_auc	 0.8720957758601455
valid_accuracy	 0.8071096654275093 	train_accuracy	 0.8459992747930138
valid_loss	 0.4207846224308014 	train_loss	 0.3421056568622589
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 199
valid_auc	 0.817310516179572 	train_auc	 0.8740680683326622
valid_accuracy	 0.8061338289962825 	train_accuracy	 0.8475101226808485
valid_loss	 0.41962093114852905 	train_loss	 0.33986523747444153
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 200
valid_auc	 0.8173363381838651 	train_auc	 0.8745848834870421
valid_accuracy	 0.8070631970260222 	train_accuracy	 0.8471475191877682
valid_loss	 0.41906479001045227 	train_loss	 0.3391170799732208
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 201
valid_auc	 0.8162526943696041 	train_auc	 0.873080992997533
valid_accuracy	 0.8039033457249071 	train_accuracy	 0.8463467698072158
valid_loss	 0.4213537871837616 	train_loss	 0.34106937050819397
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 66188
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21520
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 202
valid_auc	 0.8181816755873167 	train_auc	 0.8737137652482316
valid_accuracy	 0.8074349442379182 	train_accuracy	 0.84731371245543
valid_loss	 0.422795832157135 	train_loss	 0.34056198596954346


Start testing ......................
 Best epoch: 160
@ 使用预设Q-matrix:  qm_fold1_trained_0.99.json
===== 设备: cuda =====
训练总段数: 156
实际用段数: 156
实际元素数: 23590
最后一次所用q.shpe: torch.Size([12, 200])
===== 数据来自Test=====

test_auc	 0.8081951021413458
test_accuracy	 0.7947859262399322
test_loss	 0.441110759973526
=====第 2 次实验=====


train_data length:  453
valid_data length:  145




===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.6932919538131102 	train_auc	 0.7082804129223488
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.576127827167511 	train_loss	 0.5478982329368591
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.6862806736290776 	train_auc	 0.7041174462605404
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5400357246398926 	train_loss	 0.5202816724777222
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.6824823833068991 	train_auc	 0.7004126750710413
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5446577072143555 	train_loss	 0.5227764248847961
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.6848520654029194 	train_auc	 0.7025052387439228
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5421754121780396 	train_loss	 0.5212246179580688
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.6849594407943815 	train_auc	 0.7032670033754014
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5413076877593994 	train_loss	 0.5207406878471375
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.6819486230344766 	train_auc	 0.7006523304857557
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.54103022813797 	train_loss	 0.520591139793396
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.686662800406298 	train_auc	 0.7058621732954831
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5406719446182251 	train_loss	 0.5204113125801086
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.6938170651376773 	train_auc	 0.7136114609805672
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5402334332466125 	train_loss	 0.5202116370201111
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.6919266160576742 	train_auc	 0.7118066671508932
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5402918457984924 	train_loss	 0.5202279686927795
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.6954282733916863 	train_auc	 0.7153967806223767
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5415846109390259 	train_loss	 0.5208374857902527
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.7012250716171767 	train_auc	 0.7207635982094575
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5388306379318237 	train_loss	 0.5199378132820129
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.6940320574784093 	train_auc	 0.71487267260843
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5436214208602905 	train_loss	 0.5220454931259155
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.6856462132090078 	train_auc	 0.7086031531429717
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5390127301216125 	train_loss	 0.5198907852172852
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.6760529864239563 	train_auc	 0.6985695470793559
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5404921770095825 	train_loss	 0.5202886462211609
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.675649767525944 	train_auc	 0.6978660562039599
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5395262241363525 	train_loss	 0.5199419260025024
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.6636571588178015 	train_auc	 0.687108069262413
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5397054553031921 	train_loss	 0.5199871063232422
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.6704948355294158 	train_auc	 0.6935152509847796
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5387699007987976 	train_loss	 0.5198887586593628
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.6773404954320004 	train_auc	 0.7004673039616741
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5400220155715942 	train_loss	 0.5200858116149902
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.6758054957205737 	train_auc	 0.6991676283479631
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5392460227012634 	train_loss	 0.5198716521263123
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.6800752892089152 	train_auc	 0.7026309719049031
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5392650365829468 	train_loss	 0.5198588371276855
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.6942737272277857 	train_auc	 0.7147950655110982
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5389006733894348 	train_loss	 0.5198207497596741
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.6931698492870169 	train_auc	 0.714322355488908
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5395041108131409 	train_loss	 0.5199025869369507
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.6943663381346934 	train_auc	 0.7153437659564288
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5391490459442139 	train_loss	 0.5198386311531067
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.6994162631846081 	train_auc	 0.7191213597449805
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5398358702659607 	train_loss	 0.519993782043457
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.6934425444855805 	train_auc	 0.7149547543414883
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.53858482837677 	train_loss	 0.5198754668235779
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.695892718356534 	train_auc	 0.7160935978177201
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.539156973361969 	train_loss	 0.5197991132736206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.6941645077486678 	train_auc	 0.7146441067213419
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5388930439949036 	train_loss	 0.5197817087173462
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.6930000989562182 	train_auc	 0.7138921027602942
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5386903285980225 	train_loss	 0.5198196172714233
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.6947939543713091 	train_auc	 0.7143786610666378
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5389499664306641 	train_loss	 0.5197657346725464
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.6863098785572245 	train_auc	 0.7061339968523477
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5401243567466736 	train_loss	 0.5200585722923279
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.7042781384268582 	train_auc	 0.7222287416514164
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5383621454238892 	train_loss	 0.5200236439704895
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.7084852506098627 	train_auc	 0.7252056812209129
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5398343205451965 	train_loss	 0.5199342370033264
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.711104573862922 	train_auc	 0.7291067374780578
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5386079549789429 	train_loss	 0.5197376608848572
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.7124098815572546 	train_auc	 0.7300422223246796
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5392242074012756 	train_loss	 0.519727349281311
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.7044473526171563 	train_auc	 0.7224310978205524
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5390070080757141 	train_loss	 0.51967853307724
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.6992846200709275 	train_auc	 0.7172979882467664
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5389554500579834 	train_loss	 0.5196799635887146
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.6976100883213115 	train_auc	 0.7159970052090406
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5382642149925232 	train_loss	 0.5199360251426697
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.7084603996139128 	train_auc	 0.7258465676129982
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5393224954605103 	train_loss	 0.5197136402130127
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.7077804968676787 	train_auc	 0.7249900934308471
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5389559864997864 	train_loss	 0.5196410417556763
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.7092562206496953 	train_auc	 0.7262743193956279
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5387304425239563 	train_loss	 0.5196021795272827
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.7021476987188269 	train_auc	 0.7199772521693731
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5384271144866943 	train_loss	 0.5197133421897888
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.6917090137142856 	train_auc	 0.7089954703667325
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5394619703292847 	train_loss	 0.5197336077690125
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.7042778026025887 	train_auc	 0.7217509654377166
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5393348932266235 	train_loss	 0.5196670293807983
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.7099591420875313 	train_auc	 0.7266730249319514
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5385269522666931 	train_loss	 0.5196084380149841
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.7073459873960556 	train_auc	 0.7238540932191118
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5386565327644348 	train_loss	 0.5195489525794983
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.705505299224491 	train_auc	 0.7220941400526935
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5385922193527222 	train_loss	 0.5195894837379456
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.7063944381656435 	train_auc	 0.7234931094682122
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5387287139892578 	train_loss	 0.5195527672767639
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.7092769592712561 	train_auc	 0.7267619438496107
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5383133292198181 	train_loss	 0.5196244120597839
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.707932519212035 	train_auc	 0.7228400422934216
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.538593590259552 	train_loss	 0.5195298194885254
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.7123215244244283 	train_auc	 0.7281137651668916
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5381619334220886 	train_loss	 0.5196090340614319
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.7116478079147394 	train_auc	 0.7276997728738103
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.538882851600647 	train_loss	 0.5194307565689087
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.7112373128242192 	train_auc	 0.727741492865975
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5383771657943726 	train_loss	 0.5193926692008972
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.7083210973502239 	train_auc	 0.724922973282579
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5380421876907349 	train_loss	 0.5196935534477234
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.7107153064012325 	train_auc	 0.7262764369938681
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5382186770439148 	train_loss	 0.5193790197372437
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.7095891167673241 	train_auc	 0.7251961501917024
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.538245439529419 	train_loss	 0.5193111896514893
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.7101544386294345 	train_auc	 0.7262778534209153
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5389434695243835 	train_loss	 0.519291877746582
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.7070264358744028 	train_auc	 0.7239976600110782
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5382009148597717 	train_loss	 0.5193535089492798
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.706593081166935 	train_auc	 0.7238048777375139
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5379557609558105 	train_loss	 0.5195441246032715
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.7058872963853267 	train_auc	 0.7232692098907222
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5388885736465454 	train_loss	 0.5193178057670593
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

epoch 60
valid_auc	 0.7065145866626578 	train_auc	 0.7222472237892088
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5384240746498108 	train_loss	 0.5192331075668335
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.7070599122515928 	train_auc	 0.7226616918988988
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.537900447845459 	train_loss	 0.5193750262260437
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.7090535124072457 	train_auc	 0.7252538881182707
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5383762717247009 	train_loss	 0.5191782116889954
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.711905885920095 	train_auc	 0.7283693093045498
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.53779137134552 	train_loss	 0.5192948579788208
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.7129274044316596 	train_auc	 0.7293995153369992
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5386466979980469 	train_loss	 0.5190754532814026
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.7135246237077275 	train_auc	 0.7294877955458776
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5376441478729248 	train_loss	 0.519281268119812
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.7136606148619513 	train_auc	 0.7293338134529082
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5385848879814148 	train_loss	 0.5189889073371887
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.7183790401162004 	train_auc	 0.7339547073660802
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.538514256477356 	train_loss	 0.518942654132843
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.7168500675666647 	train_auc	 0.7320090209929981
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5375946164131165 	train_loss	 0.5191126465797424
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.714510639113177 	train_auc	 0.7299774175722895
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5381304025650024 	train_loss	 0.518856942653656
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.7171200290378408 	train_auc	 0.7324871376880808
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.538293182849884 	train_loss	 0.5188075304031372
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.7189997022829475 	train_auc	 0.7343676849511558
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5377111434936523 	train_loss	 0.5187644958496094
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.7206886509095406 	train_auc	 0.7353166035029816
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5399178862571716 	train_loss	 0.5193790197372437
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.7192122378040231 	train_auc	 0.7348768460773505
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5376003980636597 	train_loss	 0.5186276435852051
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.7205486239724278 	train_auc	 0.7362626640932725
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5376196503639221 	train_loss	 0.5185024738311768
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.7212331163170131 	train_auc	 0.7367397575070771
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5371437072753906 	train_loss	 0.5186811089515686
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.7215303031206417 	train_auc	 0.7375275848861269
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5370381474494934 	train_loss	 0.5186278820037842
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.7212424899382925 	train_auc	 0.7368436484199284
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.539094090461731 	train_loss	 0.5187928080558777
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.7200694263063334 	train_auc	 0.7355436378362239
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5370487570762634 	train_loss	 0.5189619660377502
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.7218284679388098 	train_auc	 0.7374405808700573
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5373608469963074 	train_loss	 0.5182580351829529
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.7211276851713222 	train_auc	 0.7372819496140341
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5370140075683594 	train_loss	 0.5182861685752869
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.7218979776709618 	train_auc	 0.7379416751594624
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.538733720779419 	train_loss	 0.5184440016746521
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.720412155594242 	train_auc	 0.7362845045042716
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5366083383560181 	train_loss	 0.5182324647903442
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.7201715758008284 	train_auc	 0.7357482585739811
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5370146036148071 	train_loss	 0.5200093984603882
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.7222454791984909 	train_auc	 0.7376924256407491
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5384147763252258 	train_loss	 0.5182156562805176
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.7221224614660504 	train_auc	 0.7380206251986512
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5367836952209473 	train_loss	 0.5177838206291199
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.7226417223783419 	train_auc	 0.7381806790054875
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5371999144554138 	train_loss	 0.5177171230316162
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.722632890789217 	train_auc	 0.7379668750684216
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5364404320716858 	train_loss	 0.5175458192825317
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.7237655848089786 	train_auc	 0.7391258926789577
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5360706448554993 	train_loss	 0.5178353190422058
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.7240512475376717 	train_auc	 0.7396379791281116
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5360674858093262 	train_loss	 0.518521249294281
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.7245352469016558 	train_auc	 0.7398972850951476
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5358420014381409 	train_loss	 0.517957866191864
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.7243425839290247 	train_auc	 0.7398670888056096
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5374343991279602 	train_loss	 0.5172754526138306
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.7242642072578247 	train_auc	 0.7396590522312464
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5355775952339172 	train_loss	 0.5180882811546326
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.7254508334769523 	train_auc	 0.740410593235594
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.535271406173706 	train_loss	 0.5166111588478088
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.7253775413030269 	train_auc	 0.7402538719821478
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.535174548625946 	train_loss	 0.5163168907165527
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.7251376743997294 	train_auc	 0.7398521027257562
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.535403847694397 	train_loss	 0.5185127854347229
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.7255660624429997 	train_auc	 0.7401737896586484
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5348317623138428 	train_loss	 0.5159387588500977
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.7254353148607046 	train_auc	 0.7398164697568728
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5365756750106812 	train_loss	 0.520713746547699
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.7257948235787851 	train_auc	 0.7402564721331389
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5341242551803589 	train_loss	 0.5166827440261841
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.7263178787161577 	train_auc	 0.7407163736866214
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5354241132736206 	train_loss	 0.519445538520813
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.7262188576898585 	train_auc	 0.7406208900919421
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5355709195137024 	train_loss	 0.5196382999420166
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.7262565701661684 	train_auc	 0.7406979289038007
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5334147214889526 	train_loss	 0.5148822069168091
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.7263746860426037 	train_auc	 0.7406279244618048
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5327264666557312 	train_loss	 0.5146819353103638
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.7264998247704311 	train_auc	 0.7406274168016136
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5396475791931152 	train_loss	 0.5256132483482361
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.7259802339255239 	train_auc	 0.7401122831665594
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5330925583839417 	train_loss	 0.5159984827041626
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.7253134813506885 	train_auc	 0.7393083662050451
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5320034623146057 	train_loss	 0.5136546492576599
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.725333954847826 	train_auc	 0.7392414395677787
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.531542956829071 	train_loss	 0.5136204361915588
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.7251187739741705 	train_auc	 0.7388425209244028
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5308992862701416 	train_loss	 0.5132815837860107
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.725009224562437 	train_auc	 0.7384989366294887
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5301803350448608 	train_loss	 0.5131666660308838
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.7246240164502518 	train_auc	 0.7379519140960081
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5281764268875122 	train_loss	 0.5102470517158508
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.7237750585883734 	train_auc	 0.7367660321369478
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5272332429885864 	train_loss	 0.5077307224273682
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.7234211292664913 	train_auc	 0.7363050895432661
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5303645730018616 	train_loss	 0.51554936170578
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.7228688515260102 	train_auc	 0.7355896903927465
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5260595083236694 	train_loss	 0.5068131685256958
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.7224593462333373 	train_auc	 0.7352763734230545
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.536962628364563 	train_loss	 0.5238558053970337
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.7213231172212642 	train_auc	 0.7339943734471699
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5254843831062317 	train_loss	 0.5061298608779907
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.7209644510096845 	train_auc	 0.7335633423879131
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5226913690567017 	train_loss	 0.505917489528656
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.7194809973778133 	train_auc	 0.7318765761846169
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5183193683624268 	train_loss	 0.5000833868980408
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.719272968971935 	train_auc	 0.7314323453480129
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5171477198600769 	train_loss	 0.5013087391853333
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.7201429305797975 	train_auc	 0.7322643024211001
valid_accuracy	 0.7709617052352914 	train_accuracy	 0.7858867143719286
valid_loss	 0.5348905324935913 	train_loss	 0.5232338905334473
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.7201546549709639 	train_auc	 0.7322098878622729
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5153152942657471 	train_loss	 0.49994128942489624
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.7210228608659783 	train_auc	 0.7331367302381131
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5216444134712219 	train_loss	 0.4990540146827698
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.7215850719348548 	train_auc	 0.7334334126101775
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.5127224326133728 	train_loss	 0.4932934641838074
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.7213763365305139 	train_auc	 0.733296411719984
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853406902893928
valid_loss	 0.50989830493927 	train_loss	 0.49276793003082275
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.7210223247254778 	train_auc	 0.7328200384610465
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.7853694283989999
valid_loss	 0.5059723258018494 	train_loss	 0.4891754388809204
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.7213005521870091 	train_auc	 0.7329672899229409
valid_accuracy	 0.772376648865763 	train_accuracy	 0.7869787625370003
valid_loss	 0.5060781240463257 	train_loss	 0.49082428216934204
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.7235266605702975 	train_auc	 0.7353617895466324
valid_accuracy	 0.7727417956091104 	train_accuracy	 0.7870362387562146
valid_loss	 0.49645692110061646 	train_loss	 0.4791583716869354
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.7256684299286871 	train_auc	 0.7377210083179786
valid_accuracy	 0.7712812086357205 	train_accuracy	 0.7860016668103572
valid_loss	 0.49577251076698303 	train_loss	 0.4768688976764679
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.7264220961811548 	train_auc	 0.7387637448001649
valid_accuracy	 0.7705509151490255 	train_accuracy	 0.785470011782625
valid_loss	 0.5150131583213806 	train_loss	 0.4910937547683716
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.7274357552264802 	train_auc	 0.739692755601502
valid_accuracy	 0.7726961522661919 	train_accuracy	 0.7869643934821967
valid_loss	 0.5170682072639465 	train_loss	 0.5035465955734253
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.7250778446548571 	train_auc	 0.7369710503071102
valid_accuracy	 0.7728787256378657 	train_accuracy	 0.7866482742765181
valid_loss	 0.49820154905319214 	train_loss	 0.4815886318683624
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.7239494751090234 	train_auc	 0.7358970238308002
valid_accuracy	 0.7563101921584737 	train_accuracy	 0.7668764548667989
valid_loss	 0.563748836517334 	train_loss	 0.5534343719482422
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.7255530536712934 	train_auc	 0.7374930927748264
valid_accuracy	 0.774065452553745 	train_accuracy	 0.7874816794551255
valid_loss	 0.4955081343650818 	train_loss	 0.47881102561950684
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.7247189192105079 	train_auc	 0.736520105373599
valid_accuracy	 0.7755716828700534 	train_accuracy	 0.7879558582636434
valid_loss	 0.5110741257667542 	train_loss	 0.4968337416648865
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.7262020841513404 	train_auc	 0.7383176884689531
valid_accuracy	 0.7740198092108266 	train_accuracy	 0.7867057504957324
valid_loss	 0.4894315302371979 	train_loss	 0.4693782329559326
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.7264415032889451 	train_auc	 0.7384136558411367
valid_accuracy	 0.7761194029850746 	train_accuracy	 0.7883150846337328
valid_loss	 0.5143184661865234 	train_loss	 0.5003030896186829
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.72697396739752 	train_auc	 0.7390327220306501
valid_accuracy	 0.7758911862704825 	train_accuracy	 0.7878409058252148
valid_loss	 0.5024473071098328 	train_loss	 0.48690035939216614
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.7281310941058081 	train_auc	 0.7402360058952024
valid_accuracy	 0.772285362179926 	train_accuracy	 0.7850245710837142
valid_loss	 0.5017896890640259 	train_loss	 0.48554742336273193
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.7297253815299527 	train_auc	 0.7419934587280134
valid_accuracy	 0.7689990414897987 	train_accuracy	 0.7786159726413197
valid_loss	 0.5128371715545654 	train_loss	 0.49675506353378296
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.729434151188369 	train_auc	 0.7417214526829257
valid_accuracy	 0.7770322698434433 	train_accuracy	 0.7887748943874472
valid_loss	 0.48918235301971436 	train_loss	 0.47131556272506714
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.72963520976774 	train_auc	 0.7420303678897053
valid_accuracy	 0.7768496964717696 	train_accuracy	 0.7885018823461792
valid_loss	 0.48099493980407715 	train_loss	 0.4607422947883606
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.7301853841877957 	train_auc	 0.7424456614830357
valid_accuracy	 0.7763476196996668 	train_accuracy	 0.7884012989625543
valid_loss	 0.4972664415836334 	train_loss	 0.4804694354534149
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.7300465120148378 	train_auc	 0.7423541473133977
valid_accuracy	 0.7782189967593226 	train_accuracy	 0.7889329539902865
valid_loss	 0.4813980162143707 	train_loss	 0.46187624335289
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.7303507629114356 	train_auc	 0.7428332303387357
valid_accuracy	 0.778355926788078 	train_accuracy	 0.7894071327988045
valid_loss	 0.47975900769233704 	train_loss	 0.45925992727279663
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.7314429046777304 	train_auc	 0.7439037160536157
valid_accuracy	 0.7784472134739149 	train_accuracy	 0.7903554904158404
valid_loss	 0.48699814081192017 	train_loss	 0.46871811151504517
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.7309099456702317 	train_auc	 0.7433114860433038
valid_accuracy	 0.7753891094983797 	train_accuracy	 0.786720119550536
valid_loss	 0.48657429218292236 	train_loss	 0.4673174023628235
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.7312924259466833 	train_auc	 0.7437643544516768
valid_accuracy	 0.772285362179926 	train_accuracy	 0.7833146535620887
valid_loss	 0.4904061555862427 	train_loss	 0.47067567706108093
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.731700823608432 	train_auc	 0.7443238510962481
valid_accuracy	 0.7799078004473048 	train_accuracy	 0.7908871454435727
valid_loss	 0.4792208671569824 	train_loss	 0.4578528106212616
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.7320769173321073 	train_auc	 0.7447335941081876
valid_accuracy	 0.7799534437902232 	train_accuracy	 0.7911170503204299
valid_loss	 0.4799835681915283 	train_loss	 0.458281934261322
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.7332102417588312 	train_auc	 0.7458948560789176
valid_accuracy	 0.7619243233374412 	train_accuracy	 0.7737448630629077
valid_loss	 0.5160516500473022 	train_loss	 0.4984232783317566
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.7326529266543063 	train_auc	 0.7453028165177243
valid_accuracy	 0.769455474918983 	train_accuracy	 0.7788315084633732
valid_loss	 0.49676868319511414 	train_loss	 0.4772111773490906
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.7331626843289336 	train_auc	 0.7458777609740962
valid_accuracy	 0.7637500570541786 	train_accuracy	 0.7748225421731758
valid_loss	 0.5009968876838684 	train_loss	 0.48099949955940247
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.7333900079011793 	train_auc	 0.7461027297611085
valid_accuracy	 0.778675430188507 	train_accuracy	 0.7899675259361439
valid_loss	 0.4789622128009796 	train_loss	 0.45774775743484497
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

epoch 152
valid_auc	 0.7336838011121889 	train_auc	 0.7464573392841068
valid_accuracy	 0.7784928568168332 	train_accuracy	 0.7901543236485904
valid_loss	 0.4783998131752014 	train_loss	 0.45670413970947266
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.7332339497739337 	train_auc	 0.7460792010278571
valid_accuracy	 0.7807293806198365 	train_accuracy	 0.7919360864442337
valid_loss	 0.4811422526836395 	train_loss	 0.4585180878639221
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.7343440728677864 	train_auc	 0.747144978791531
valid_accuracy	 0.778675430188507 	train_accuracy	 0.7892921803603759
valid_loss	 0.479287713766098 	train_loss	 0.4580898880958557
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.7346757494130676 	train_auc	 0.7475490891636172
valid_accuracy	 0.7685882514035328 	train_accuracy	 0.7782854843808374
valid_loss	 0.4948788583278656 	train_loss	 0.4744774103164673
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.7349467006820909 	train_auc	 0.7478517336341393
valid_accuracy	 0.780455520562326 	train_accuracy	 0.7917349196769836
valid_loss	 0.4761476218700409 	train_loss	 0.4543532431125641
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.7352407472342162 	train_auc	 0.74818567973394
valid_accuracy	 0.7700944817198412 	train_accuracy	 0.7800097709572664
valid_loss	 0.48909667134284973 	train_loss	 0.4672103822231293
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.7363056577764046 	train_auc	 0.749376855688601
valid_accuracy	 0.7260942991464695 	train_accuracy	 0.7456964680863293
valid_loss	 0.5304086208343506 	train_loss	 0.5092780590057373
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.7356100714476148 	train_auc	 0.748655140485956
valid_accuracy	 0.7813227440777762 	train_accuracy	 0.793919016007127
valid_loss	 0.4786214530467987 	train_loss	 0.45528820157051086
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.7362178073258097 	train_auc	 0.7493034507194136
valid_accuracy	 0.7806380939339997 	train_accuracy	 0.7913613242520907
valid_loss	 0.4763447940349579 	train_loss	 0.45357340574264526
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.7383515286850368 	train_auc	 0.7516447752344915
valid_accuracy	 0.7275548861198594 	train_accuracy	 0.7453659798258471
valid_loss	 0.535280168056488 	train_loss	 0.516072154045105
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.7364235262033779 	train_auc	 0.7495952702089954
valid_accuracy	 0.7816878908211238 	train_accuracy	 0.793444837198609
valid_loss	 0.4767577350139618 	train_loss	 0.4533877968788147
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.7380067844515108 	train_auc	 0.7512248343152373
valid_accuracy	 0.7710986352640468 	train_accuracy	 0.7834583441101244
valid_loss	 0.4835209250450134 	train_loss	 0.4609941840171814
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.7383521296337299 	train_auc	 0.751614258671998
valid_accuracy	 0.7742936692683372 	train_accuracy	 0.7853263212345892
valid_loss	 0.4811045825481415 	train_loss	 0.45765623450279236
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.7391539660480957 	train_auc	 0.752453710009765
valid_accuracy	 0.77479574604044 	train_accuracy	 0.7863034169612323
valid_loss	 0.48007944226264954 	train_loss	 0.4571128487586975
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.7396484584475911 	train_auc	 0.7530288455276322
valid_accuracy	 0.7735177324387238 	train_accuracy	 0.7853406902893928
valid_loss	 0.48139965534210205 	train_loss	 0.45838966965675354
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.7398316535324813 	train_auc	 0.7532101145089718
valid_accuracy	 0.7734720890958053 	train_accuracy	 0.7854125355634106
valid_loss	 0.48162326216697693 	train_loss	 0.45849674940109253
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.7401111300246292 	train_auc	 0.7535638575190986
valid_accuracy	 0.7674928111734903 	train_accuracy	 0.7802396758341237
valid_loss	 0.487806499004364 	train_loss	 0.46475735306739807
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.7395013615258554 	train_auc	 0.7530065972738256
valid_accuracy	 0.7774887032726276 	train_accuracy	 0.788918584935483
valid_loss	 0.47887474298477173 	train_loss	 0.45459264516830444
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 170
valid_auc	 0.7408690559428324 	train_auc	 0.7545874756042181
valid_accuracy	 0.7691359715185541 	train_accuracy	 0.782122022013392
valid_loss	 0.484342098236084 	train_loss	 0.4607999920845032
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.7406343147783865 	train_auc	 0.7543028864450069
valid_accuracy	 0.7759824729563193 	train_accuracy	 0.7874673104003219
valid_loss	 0.4808639883995056 	train_loss	 0.45596426725387573
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.7421840907576753 	train_auc	 0.7559365975655006
valid_accuracy	 0.7674928111734903 	train_accuracy	 0.7810156047935167
valid_loss	 0.486815482378006 	train_loss	 0.46367454528808594
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.7418828740628116 	train_auc	 0.7557290882473793
valid_accuracy	 0.7742936692683372 	train_accuracy	 0.7856424404402679
valid_loss	 0.48038429021835327 	train_loss	 0.45639368891716003
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.7415426369444829 	train_auc	 0.7553358267389203
valid_accuracy	 0.7823725409649003 	train_accuracy	 0.7943788257608414
valid_loss	 0.47524210810661316 	train_loss	 0.45056554675102234
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.7423991537982538 	train_auc	 0.7562586660090068
valid_accuracy	 0.7727417956091104 	train_accuracy	 0.7850389401385177
valid_loss	 0.48183056712150574 	train_loss	 0.45767703652381897
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.7432099808763986 	train_auc	 0.7571913057540025
valid_accuracy	 0.7670820210872245 	train_accuracy	 0.780598902204213
valid_loss	 0.48619458079338074 	train_loss	 0.46204522252082825
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.7434152519882741 	train_auc	 0.7574198036672894
valid_accuracy	 0.7771235565292802 	train_accuracy	 0.7893352875247867
valid_loss	 0.47833046317100525 	train_loss	 0.45334190130233765
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.7440762425256418 	train_auc	 0.7581306014201294
valid_accuracy	 0.7787667168743438 	train_accuracy	 0.7913613242520907
valid_loss	 0.4754994213581085 	train_loss	 0.4518950879573822
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.7440575424163138 	train_auc	 0.7582794995626682
valid_accuracy	 0.7673102378018166 	train_accuracy	 0.7808288070810702
valid_loss	 0.4856046438217163 	train_loss	 0.4612308740615845
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.7432252932847614 	train_auc	 0.7572964924557133
valid_accuracy	 0.7873476653430097 	train_accuracy	 0.7978848751329137
valid_loss	 0.4832807779312134 	train_loss	 0.456768274307251
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.7448753746708893 	train_auc	 0.7591071344817995
valid_accuracy	 0.7740198092108266 	train_accuracy	 0.786346524125643
valid_loss	 0.4799343943595886 	train_loss	 0.45645591616630554
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 182
valid_auc	 0.7444289581668304 	train_auc	 0.758599514707476
valid_accuracy	 0.7780820667305673 	train_accuracy	 0.7901112164841797
valid_loss	 0.47699570655822754 	train_loss	 0.45181986689567566
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.7458648956103808 	train_auc	 0.7602580276921469
valid_accuracy	 0.7608288831073988 	train_accuracy	 0.774951863666408
valid_loss	 0.4928050637245178 	train_loss	 0.4699436128139496
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.7451724554247485 	train_auc	 0.7595249614770729
valid_accuracy	 0.7796795837327126 	train_accuracy	 0.7937609564042877
valid_loss	 0.4754209816455841 	train_loss	 0.44991132616996765
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.745865732225228 	train_auc	 0.7604330014421653
valid_accuracy	 0.7667168743438769 	train_accuracy	 0.7805701640946059
valid_loss	 0.48471522331237793 	train_loss	 0.46054935455322266
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.7455615697034379 	train_auc	 0.7600037407636234
valid_accuracy	 0.7786297868455886 	train_accuracy	 0.7915912291289479
valid_loss	 0.4758383631706238 	train_loss	 0.4504932761192322
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.7461998655901656 	train_auc	 0.7607115905355704
valid_accuracy	 0.7755716828700534 	train_accuracy	 0.787395465126304
valid_loss	 0.47770509123802185 	train_loss	 0.4530583322048187
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.7456055155495239 	train_auc	 0.759967840798548
valid_accuracy	 0.7876215254005203 	train_accuracy	 0.7988332327499497
valid_loss	 0.48418131470680237 	train_loss	 0.4569156765937805
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.7474832091989362 	train_auc	 0.761991103037756
valid_accuracy	 0.7803185905335707 	train_accuracy	 0.793617265856252
valid_loss	 0.47375819087028503 	train_loss	 0.45043203234672546
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.7470786352205376 	train_auc	 0.7616908823537679
valid_accuracy	 0.7742480259254187 	train_accuracy	 0.7853694283989999
valid_loss	 0.47995805740356445 	train_loss	 0.45461612939834595
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.7482538669811144 	train_auc	 0.7631365185395267
valid_accuracy	 0.7558081153863709 	train_accuracy	 0.7670919906888525
valid_loss	 0.4980423152446747 	train_loss	 0.47502467036247253
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.7467993649362745 	train_auc	 0.76129463979608
valid_accuracy	 0.7877584554292757 	train_accuracy	 0.7991924591200391
valid_loss	 0.4809217154979706 	train_loss	 0.45369359850883484
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.7478700198409691 	train_auc	 0.7624213876099524
valid_accuracy	 0.7800903738189785 	train_accuracy	 0.7939908612811449
valid_loss	 0.4725339412689209 	train_loss	 0.44743457436561584
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.7482567479998483 	train_auc	 0.7629047327763405
valid_accuracy	 0.7777625633301383 	train_accuracy	 0.791145788430037
valid_loss	 0.47488242387771606 	train_loss	 0.4496764540672302
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 195
valid_auc	 0.7484946765490283 	train_auc	 0.763299946541361
valid_accuracy	 0.7774430599297093 	train_accuracy	 0.7895220852372331
valid_loss	 0.4757591187953949 	train_loss	 0.45086413621902466
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.7485474186343161 	train_auc	 0.7632926127193471
valid_accuracy	 0.7826920443653294 	train_accuracy	 0.79706583900911
valid_loss	 0.47201278805732727 	train_loss	 0.4460392892360687
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.7488129319068336 	train_auc	 0.7636144178409208
valid_accuracy	 0.7810945273631841 	train_accuracy	 0.7949823260625916
valid_loss	 0.4739612638950348 	train_loss	 0.4477457106113434
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.7487730218436366 	train_auc	 0.7635873881507176
valid_accuracy	 0.7824638276507372 	train_accuracy	 0.797640601201253
valid_loss	 0.4706653356552124 	train_loss	 0.444957971572876
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 199
valid_auc	 0.7489793239949363 	train_auc	 0.7638061927549984
valid_accuracy	 0.7829202610799215 	train_accuracy	 0.7977555536396815
valid_loss	 0.47171467542648315 	train_loss	 0.4456155598163605
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 200
valid_auc	 0.7492365359271755 	train_auc	 0.7641500360852089
valid_accuracy	 0.781185814049021 	train_accuracy	 0.7943500876512343
valid_loss	 0.47201478481292725 	train_loss	 0.4465734362602234
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 201
valid_auc	 0.7497076443525305 	train_auc	 0.7647682872014844
valid_accuracy	 0.7737003058103975 	train_accuracy	 0.7864040003448574
valid_loss	 0.47987744212150574 	train_loss	 0.45594823360443115
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 202
valid_auc	 0.7489817631396313 	train_auc	 0.763921122368219
valid_accuracy	 0.7832854078232689 	train_accuracy	 0.797741184584878
valid_loss	 0.47676581144332886 	train_loss	 0.44946223497390747
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 203
valid_auc	 0.7499484539204444 	train_auc	 0.7649510007791942
valid_accuracy	 0.7808206673056735 	train_accuracy	 0.7929850274448946
valid_loss	 0.47246116399765015 	train_loss	 0.4470262825489044
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 204
valid_auc	 0.7500224884427551 	train_auc	 0.7649622458504735
valid_accuracy	 0.7821443242503081 	train_accuracy	 0.7960887432824669
valid_loss	 0.47192952036857605 	train_loss	 0.4458422362804413
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 205
valid_auc	 0.7500807568993564 	train_auc	 0.765165273796726
valid_accuracy	 0.7820530375644712 	train_accuracy	 0.7950254332270024
valid_loss	 0.4727378189563751 	train_loss	 0.4464757740497589
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 206
valid_auc	 0.7508365087972879 	train_auc	 0.7659084576977816
valid_accuracy	 0.7820986809073897 	train_accuracy	 0.7953271833778774
valid_loss	 0.4707944691181183 	train_loss	 0.44569912552833557
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 207
valid_auc	 0.7509205944810711 	train_auc	 0.7659614509305488
valid_accuracy	 0.7817335341640421 	train_accuracy	 0.7940195993907521
valid_loss	 0.47203177213668823 	train_loss	 0.44619959592819214
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 208
valid_auc	 0.7512913326913945 	train_auc	 0.7663556322286424
valid_accuracy	 0.7822356109361449 	train_accuracy	 0.7954133977066988
valid_loss	 0.4700358510017395 	train_loss	 0.44472041726112366
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 209
valid_auc	 0.7507255866302066 	train_auc	 0.7657627494248881
valid_accuracy	 0.7857957916837829 	train_accuracy	 0.8002701382303072
valid_loss	 0.47394147515296936 	train_loss	 0.4465964734554291
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 210
valid_auc	 0.751097367663262 	train_auc	 0.7663253116266572
valid_accuracy	 0.7828746177370031 	train_accuracy	 0.7964767077621634
valid_loss	 0.469908744096756 	train_loss	 0.4442518949508667
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 211
valid_auc	 0.7512989682747873 	train_auc	 0.7665795054739393
valid_accuracy	 0.7804098772194076 	train_accuracy	 0.7912320027588585
valid_loss	 0.4730464816093445 	train_loss	 0.44777992367744446
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 212
valid_auc	 0.7513201782286564 	train_auc	 0.7666313566243705
valid_accuracy	 0.7811401707061025 	train_accuracy	 0.7926114320200017
valid_loss	 0.47265133261680603 	train_loss	 0.4469975531101227
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 213
valid_auc	 0.7513579201632357 	train_auc	 0.7666025375697783
valid_accuracy	 0.7831941211374321 	train_accuracy	 0.7982584705578067
valid_loss	 0.47009938955307007 	train_loss	 0.4438287615776062
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 214
valid_auc	 0.7518854234992667 	train_auc	 0.7672386835546984
valid_accuracy	 0.7831941211374321 	train_accuracy	 0.7954277667615024
valid_loss	 0.47058042883872986 	train_loss	 0.44474366307258606
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 215
valid_auc	 0.7517260719375177 	train_auc	 0.7669653437534026
valid_accuracy	 0.7845177780820667 	train_accuracy	 0.7994798402161106
valid_loss	 0.4714036285877228 	train_loss	 0.44441890716552734
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 216
valid_auc	 0.7526076931283544 	train_auc	 0.7679286635654405
valid_accuracy	 0.7805468072481628 	train_accuracy	 0.7930137655545019
valid_loss	 0.4728694558143616 	train_loss	 0.44803139567375183
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 217
valid_auc	 0.7518279327409738 	train_auc	 0.7670281705294146
valid_accuracy	 0.7853393582545986 	train_accuracy	 0.800816162312843
valid_loss	 0.47310760617256165 	train_loss	 0.4456150531768799
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 218
valid_auc	 0.7522122512134273 	train_auc	 0.76757024628482
valid_accuracy	 0.7832854078232689 	train_accuracy	 0.796591660200592
valid_loss	 0.4710216522216797 	train_loss	 0.4444921910762787
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 219
valid_auc	 0.7522961778225565 	train_auc	 0.7676588265582263
valid_accuracy	 0.7836961979095349 	train_accuracy	 0.797640601201253
valid_loss	 0.46987584233283997 	train_loss	 0.4434727132320404
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 220
valid_auc	 0.752830297485864 	train_auc	 0.768332628191899
valid_accuracy	 0.7784472134739149 	train_accuracy	 0.7898525734977153
valid_loss	 0.4750700294971466 	train_loss	 0.44968661665916443
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 221
valid_auc	 0.7529528144277271 	train_auc	 0.7683509903038801
valid_accuracy	 0.7849742115112511 	train_accuracy	 0.7983015777222174
valid_loss	 0.46874117851257324 	train_loss	 0.4424901306629181
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 222
valid_auc	 0.7534366193671341 	train_auc	 0.7689194227476188
valid_accuracy	 0.7803642338764891 	train_accuracy	 0.793243670431359
valid_loss	 0.47186845541000366 	train_loss	 0.44693151116371155
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 223
valid_auc	 0.7531693150318454 	train_auc	 0.7685471510590787
valid_accuracy	 0.7839244146241271 	train_accuracy	 0.8005575193263788
valid_loss	 0.470051109790802 	train_loss	 0.44287922978401184
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 224
valid_auc	 0.7534892554026524 	train_auc	 0.7689658531404959
valid_accuracy	 0.7840613446528824 	train_accuracy	 0.7984452682702532
valid_loss	 0.4699384272098541 	train_loss	 0.44310858845710754
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 225
valid_auc	 0.7534198576119238 	train_auc	 0.7688755392289698
valid_accuracy	 0.784335204710393 	train_accuracy	 0.8000977095726644
valid_loss	 0.4690089225769043 	train_loss	 0.44218453764915466
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 226
valid_auc	 0.7536832675640158 	train_auc	 0.7691324446797821
valid_accuracy	 0.7845634214249851 	train_accuracy	 0.8003994597235394
valid_loss	 0.47312238812446594 	train_loss	 0.4452911615371704
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 227
valid_auc	 0.7539908649200018 	train_auc	 0.7696082159725339
valid_accuracy	 0.7832854078232689 	train_accuracy	 0.7975687559272351
valid_loss	 0.46865761280059814 	train_loss	 0.44288188219070435
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 228
valid_auc	 0.7541657645562676 	train_auc	 0.7697592960128545
valid_accuracy	 0.7825094709936555 	train_accuracy	 0.7967497198034313
valid_loss	 0.46927475929260254 	train_loss	 0.4441812038421631
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 229
valid_auc	 0.754340717217418 	train_auc	 0.7699113429958071
valid_accuracy	 0.783604911223698 	train_accuracy	 0.79706583900911
valid_loss	 0.4696460962295532 	train_loss	 0.44314971566200256
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 230
valid_auc	 0.7541159270563292 	train_auc	 0.7695959849749485
valid_accuracy	 0.7841526313387193 	train_accuracy	 0.8006724717648073
valid_loss	 0.4725392460823059 	train_loss	 0.4446413516998291
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 231
valid_auc	 0.7543657096130605 	train_auc	 0.7698414175503909
valid_accuracy	 0.7845177780820667 	train_accuracy	 0.8010173290800932
valid_loss	 0.47305426001548767 	train_loss	 0.44500818848609924
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 232
valid_auc	 0.7546534579872173 	train_auc	 0.7702617154851956
valid_accuracy	 0.784654708110822 	train_accuracy	 0.7987182803115211
valid_loss	 0.4686412811279297 	train_loss	 0.44200628995895386
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 233
valid_auc	 0.7547372019550769 	train_auc	 0.7703991174820539
valid_accuracy	 0.784654708110822 	train_accuracy	 0.7996953760381642
valid_loss	 0.47022297978401184 	train_loss	 0.44282034039497375
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 234
valid_auc	 0.7548411601873046 	train_auc	 0.7704989244554421
valid_accuracy	 0.7842439180245561 	train_accuracy	 0.7983303158318246
valid_loss	 0.46970289945602417 	train_loss	 0.44284793734550476
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 235
valid_auc	 0.754898432954405 	train_auc	 0.7704753473444402
valid_accuracy	 0.7844264913962299 	train_accuracy	 0.8010173290800932
valid_loss	 0.4722859859466553 	train_loss	 0.44423410296440125
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 236
valid_auc	 0.7552810310639335 	train_auc	 0.77082674250273
valid_accuracy	 0.7844264913962299 	train_accuracy	 0.8011179124637181
valid_loss	 0.473775178194046 	train_loss	 0.44556185603141785
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 237
valid_auc	 0.7552409913843519 	train_auc	 0.770850564564367
valid_accuracy	 0.7847459947966589 	train_accuracy	 0.8010748052993074
valid_loss	 0.4726451635360718 	train_loss	 0.4445537328720093
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 238
valid_auc	 0.7557077458775098 	train_auc	 0.7715796056281303
valid_accuracy	 0.7821443242503081 	train_accuracy	 0.7952122309394488
valid_loss	 0.47019752860069275 	train_loss	 0.444233238697052
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 239
valid_auc	 0.7557162121840958 	train_auc	 0.7712922307678218
valid_accuracy	 0.7840157013099639 	train_accuracy	 0.8012472339569503
valid_loss	 0.4724886417388916 	train_loss	 0.44427624344825745
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 240
valid_auc	 0.7560820544300677 	train_auc	 0.7718636963127992
valid_accuracy	 0.782555114336574 	train_accuracy	 0.7980716728453602
valid_loss	 0.46900129318237305 	train_loss	 0.44214457273483276
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 241
valid_auc	 0.7559419567931086 	train_auc	 0.7714731825380889
valid_accuracy	 0.7845634214249851 	train_accuracy	 0.8014052935597896
valid_loss	 0.47406449913978577 	train_loss	 0.44562798738479614
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 242
valid_auc	 0.7566220362889584 	train_auc	 0.7723407652315403
valid_accuracy	 0.7831028344515952 	train_accuracy	 0.7983446848866281
valid_loss	 0.4678778648376465 	train_loss	 0.4413415789604187
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 243
valid_auc	 0.7565127637849558 	train_auc	 0.7721423013279956
valid_accuracy	 0.7844264913962299 	train_accuracy	 0.8010460671897003
valid_loss	 0.4715220332145691 	train_loss	 0.4434044659137726
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 244
valid_auc	 0.7571563268102277 	train_auc	 0.7728899316954541
valid_accuracy	 0.7829202610799215 	train_accuracy	 0.7984883754346639
valid_loss	 0.4667902886867523 	train_loss	 0.4405953288078308
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 245
valid_auc	 0.7572145717002137 	train_auc	 0.7727704196682279
valid_accuracy	 0.7847916381395773 	train_accuracy	 0.801290341121361
valid_loss	 0.4733668863773346 	train_loss	 0.4450509548187256
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 246
valid_auc	 0.7571727645244762 	train_auc	 0.7726358811442935
valid_accuracy	 0.7851111415400064 	train_accuracy	 0.8017788889846826
valid_loss	 0.47354933619499207 	train_loss	 0.445124089717865
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 247
valid_auc	 0.7570765184671415 	train_auc	 0.7725654045599484
valid_accuracy	 0.7856588616550276 	train_accuracy	 0.8020375319711469
valid_loss	 0.47688013315200806 	train_loss	 0.44792285561561584
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 248
valid_auc	 0.7577965198094959 	train_auc	 0.7735174266363203
valid_accuracy	 0.7828746177370031 	train_accuracy	 0.7958444693508061
valid_loss	 0.46775245666503906 	train_loss	 0.442257285118103
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 249
valid_auc	 0.7579326346884506 	train_auc	 0.773447367692808
valid_accuracy	 0.7856588616550276 	train_accuracy	 0.8011179124637181
valid_loss	 0.46825364232063293 	train_loss	 0.4408172070980072
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 250
valid_auc	 0.757849774468669 	train_auc	 0.7735046316398976
valid_accuracy	 0.7849742115112511 	train_accuracy	 0.8002988763399144
valid_loss	 0.46574699878692627 	train_loss	 0.43906494975090027
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 251
valid_auc	 0.7578392814331576 	train_auc	 0.7735729459225117
valid_accuracy	 0.7836505545666165 	train_accuracy	 0.7974825415984137
valid_loss	 0.466946542263031 	train_loss	 0.4405636787414551
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 252
valid_auc	 0.7581079290655246 	train_auc	 0.7737653362750598
valid_accuracy	 0.7842439180245561 	train_accuracy	 0.7981004109549674
valid_loss	 0.4663512408733368 	train_loss	 0.4401412606239319
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 253
valid_auc	 0.758254878695914 	train_auc	 0.7737637949231886
valid_accuracy	 0.785385001597517 	train_accuracy	 0.801290341121361
valid_loss	 0.4699605703353882 	train_loss	 0.4419476091861725
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 254
valid_auc	 0.7584512121688951 	train_auc	 0.7739797489144538
valid_accuracy	 0.7852024282258433 	train_accuracy	 0.8015346150530218
valid_loss	 0.46989017724990845 	train_loss	 0.4418233036994934
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 255
valid_auc	 0.7587875961456045 	train_auc	 0.7744130445423318
valid_accuracy	 0.7847459947966589 	train_accuracy	 0.7988332327499497
valid_loss	 0.4651021957397461 	train_loss	 0.4388780891895294
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 256
valid_auc	 0.7585941142330881 	train_auc	 0.7741824296431812
valid_accuracy	 0.7855675749691907 	train_accuracy	 0.8009742219156823
valid_loss	 0.4690636098384857 	train_loss	 0.4412086308002472
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 257
valid_auc	 0.7588633569224942 	train_auc	 0.7744671651603968
valid_accuracy	 0.7855675749691907 	train_accuracy	 0.8012041267925396
valid_loss	 0.46812283992767334 	train_loss	 0.4403441846370697
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 258
valid_auc	 0.7592330346351241 	train_auc	 0.77476264360009
valid_accuracy	 0.7856588616550276 	train_accuracy	 0.8015346150530218
valid_loss	 0.4678654670715332 	train_loss	 0.440178781747818
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 259
valid_auc	 0.7595149561636207 	train_auc	 0.7750983894746819
valid_accuracy	 0.7857501483408645 	train_accuracy	 0.800816162312843
valid_loss	 0.4673198163509369 	train_loss	 0.4398449957370758
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 260
valid_auc	 0.7596581410271985 	train_auc	 0.7752191874927422
valid_accuracy	 0.7862978684558857 	train_accuracy	 0.8017214127654683
valid_loss	 0.4664563834667206 	train_loss	 0.439045786857605
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 261
valid_auc	 0.759511633270848 	train_auc	 0.7751950788388622
valid_accuracy	 0.785385001597517 	train_accuracy	 0.8000833405178608
valid_loss	 0.4645199775695801 	train_loss	 0.4379362463951111
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 262
valid_auc	 0.7595662783603301 	train_auc	 0.7751780682420099
valid_accuracy	 0.7854762882833539 	train_accuracy	 0.8017932580394862
valid_loss	 0.46914544701576233 	train_loss	 0.4412393569946289
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 263
valid_auc	 0.7597946506469613 	train_auc	 0.7755257554600614
valid_accuracy	 0.7851567848829248 	train_accuracy	 0.7992930425036641
valid_loss	 0.4645925462245941 	train_loss	 0.4380218982696533
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 264
valid_auc	 0.7599462723588558 	train_auc	 0.7757371852130968
valid_accuracy	 0.784335204710393 	train_accuracy	 0.7972382676667529
valid_loss	 0.465187132358551 	train_loss	 0.4390478730201721
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 265
valid_auc	 0.7599375055779233 	train_auc	 0.775507562976395
valid_accuracy	 0.786024008398375 	train_accuracy	 0.8021955915739862
valid_loss	 0.4721830189228058 	train_loss	 0.4436008930206299
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 266
valid_auc	 0.7601268397661277 	train_auc	 0.7757155811794605
valid_accuracy	 0.7862978684558857 	train_accuracy	 0.801462769779004
valid_loss	 0.46645498275756836 	train_loss	 0.4388381838798523
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 267
valid_auc	 0.760571123491492 	train_auc	 0.7761459202531731
valid_accuracy	 0.7859327217125383 	train_accuracy	 0.8014915078886111
valid_loss	 0.4676835238933563 	train_loss	 0.4397437572479248
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 268
valid_auc	 0.7606741213841418 	train_auc	 0.7761916268169237
valid_accuracy	 0.785385001597517 	train_accuracy	 0.8019225795327183
valid_loss	 0.4701152443885803 	train_loss	 0.44176357984542847
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 269
valid_auc	 0.7611358090549865 	train_auc	 0.7768298420223336
valid_accuracy	 0.7848829248254142 	train_accuracy	 0.8007874242032359
valid_loss	 0.46391761302948 	train_loss	 0.43695390224456787
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 270
valid_auc	 0.7614336969654236 	train_auc	 0.7770554219611803
valid_accuracy	 0.7856132183121092 	train_accuracy	 0.8017214127654683
valid_loss	 0.4650951325893402 	train_loss	 0.43767523765563965
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 271
valid_auc	 0.7613207421777632 	train_auc	 0.7768381599335239
valid_accuracy	 0.7865260851704778 	train_accuracy	 0.8024111273960399
valid_loss	 0.4785754978656769 	train_loss	 0.44897374510765076
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 272
valid_auc	 0.7617562944721181 	train_auc	 0.7773725203563011
valid_accuracy	 0.785385001597517 	train_accuracy	 0.8012041267925396
valid_loss	 0.4648382365703583 	train_loss	 0.4374871551990509
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 273
valid_auc	 0.7619099900461688 	train_auc	 0.777517819561634
valid_accuracy	 0.7854762882833539 	train_accuracy	 0.7987182803115211
valid_loss	 0.4647236764431 	train_loss	 0.4378609359264374
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 274
valid_auc	 0.761916641723368 	train_auc	 0.7773811420062788
valid_accuracy	 0.7854762882833539 	train_accuracy	 0.8020087938615398
valid_loss	 0.4676809012889862 	train_loss	 0.4397239685058594
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 275
valid_auc	 0.7620310812077995 	train_auc	 0.7774805999250121
valid_accuracy	 0.7858870783696198 	train_accuracy	 0.802066270080754
valid_loss	 0.4699612557888031 	train_loss	 0.44158899784088135
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 276
valid_auc	 0.7623408466924031 	train_auc	 0.7778865621238993
valid_accuracy	 0.7860696517412935 	train_accuracy	 0.8015633531626289
valid_loss	 0.465803861618042 	train_loss	 0.4380912780761719
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 277
valid_auc	 0.7624539252047945 	train_auc	 0.7780690160539361
valid_accuracy	 0.7854306449404355 	train_accuracy	 0.800413828778343
valid_loss	 0.4645727574825287 	train_loss	 0.43736323714256287
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 278
valid_auc	 0.7625619133282573 	train_auc	 0.7781837729769591
valid_accuracy	 0.7851567848829248 	train_accuracy	 0.8012328649021467
valid_loss	 0.4633665382862091 	train_loss	 0.4363259971141815
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 279
valid_auc	 0.7624488465991737 	train_auc	 0.7780225011530898
valid_accuracy	 0.7860696517412935 	train_accuracy	 0.8015202459982183
valid_loss	 0.46544522047042847 	train_loss	 0.43785804510116577
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 280
valid_auc	 0.7624382828638161 	train_auc	 0.7779577815210453
valid_accuracy	 0.7859783650554567 	train_accuracy	 0.8016926746558611
valid_loss	 0.46662095189094543 	train_loss	 0.43876031041145325
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 281
valid_auc	 0.7628087441664084 	train_auc	 0.778337052061606
valid_accuracy	 0.786434798484641 	train_accuracy	 0.8012184958473432
valid_loss	 0.46411386132240295 	train_loss	 0.4368475675582886
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 282
valid_auc	 0.7629079537256309 	train_auc	 0.7783736317646937
valid_accuracy	 0.7863891551417226 	train_accuracy	 0.8017501508750754
valid_loss	 0.46651676297187805 	train_loss	 0.4385576844215393
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 283
valid_auc	 0.7631654307822936 	train_auc	 0.7786094408420609
valid_accuracy	 0.7874845953717651 	train_accuracy	 0.802339282122022
valid_loss	 0.4723109006881714 	train_loss	 0.4433692693710327
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 284
valid_auc	 0.763409374710057 	train_auc	 0.7789022830005441
valid_accuracy	 0.7861609384271304 	train_accuracy	 0.8022674368480042
valid_loss	 0.47049257159233093 	train_loss	 0.4418223798274994
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 285
valid_auc	 0.7636887392607816 	train_auc	 0.7792627407199549
valid_accuracy	 0.7860696517412935 	train_accuracy	 0.801290341121361
valid_loss	 0.4628707766532898 	train_loss	 0.43573513627052307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 286
valid_auc	 0.764063077271609 	train_auc	 0.7796608014237314
valid_accuracy	 0.7857501483408645 	train_accuracy	 0.7999252809150215
valid_loss	 0.46266087889671326 	train_loss	 0.4358047544956207
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 287
valid_auc	 0.7637079696189564 	train_auc	 0.7793292895208667
valid_accuracy	 0.7866630151992332 	train_accuracy	 0.8016495674914504
valid_loss	 0.46578165888786316 	train_loss	 0.43772080540657043
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 288
valid_auc	 0.763444883707826 	train_auc	 0.7789976269733614
valid_accuracy	 0.7868455885709069 	train_accuracy	 0.8022099606287898
valid_loss	 0.46860432624816895 	train_loss	 0.4401431381702423
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 289
valid_auc	 0.7640931011396415 	train_auc	 0.7796862566937277
valid_accuracy	 0.7870738052854991 	train_accuracy	 0.8018794723683076
valid_loss	 0.46480149030685425 	train_loss	 0.43703001737594604
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 290
valid_auc	 0.764654345977286 	train_auc	 0.7802379608462209
valid_accuracy	 0.7864804418275595 	train_accuracy	 0.8016208293818433
valid_loss	 0.46517279744148254 	train_loss	 0.43731260299682617
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 291
valid_auc	 0.7643840545734941 	train_auc	 0.7799844779681571
valid_accuracy	 0.7869368752567438 	train_accuracy	 0.802339282122022
valid_loss	 0.4656841456890106 	train_loss	 0.4376561939716339
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 292
valid_auc	 0.7645870161570594 	train_auc	 0.780120780136664
valid_accuracy	 0.7863891551417226 	train_accuracy	 0.8023536511768256
valid_loss	 0.46878451108932495 	train_loss	 0.44021832942962646
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 293
valid_auc	 0.7647017914657603 	train_auc	 0.7802456082050477
valid_accuracy	 0.7868912319138254 	train_accuracy	 0.8026410322728971
valid_loss	 0.4661639332771301 	train_loss	 0.43798622488975525
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 294
valid_auc	 0.7650859626468675 	train_auc	 0.7806196551733154
valid_accuracy	 0.7871194486284175 	train_accuracy	 0.8024686036152542
valid_loss	 0.4642457365989685 	train_loss	 0.4364337623119354
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 295
valid_auc	 0.7656921725867144 	train_auc	 0.7812991139419049
valid_accuracy	 0.786434798484641 	train_accuracy	 0.8004425668879501
valid_loss	 0.4608682692050934 	train_loss	 0.4340795576572418
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 296
valid_auc	 0.765666579242379 	train_auc	 0.7812463044221141
valid_accuracy	 0.7858414350267013 	train_accuracy	 0.799767221312182
valid_loss	 0.4614652097225189 	train_loss	 0.43464118242263794
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 297
valid_auc	 0.7660197485409143 	train_auc	 0.7815174727360299
valid_accuracy	 0.786434798484641 	train_accuracy	 0.8011035434089145
valid_loss	 0.4612903892993927 	train_loss	 0.4341924786567688
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 298
valid_auc	 0.7661804080498186 	train_auc	 0.7816592599616325
valid_accuracy	 0.7870281619425806 	train_accuracy	 0.8023105440124149
valid_loss	 0.4617350101470947 	train_loss	 0.4343514144420624
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 299
valid_auc	 0.7662366615608023 	train_auc	 0.7816423185633347
valid_accuracy	 0.7874845953717651 	train_accuracy	 0.8032876397390579
valid_loss	 0.4645315706729889 	train_loss	 0.43651655316352844
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 300
valid_auc	 0.7666105164560137 	train_auc	 0.7821428623261876
valid_accuracy	 0.7868912319138254 	train_accuracy	 0.8002701382303072
valid_loss	 0.4603332579135895 	train_loss	 0.4336533844470978


Start testing ......................
 Best epoch: 300
===== 设备: cuda =====
训练总段数: 138
实际用段数: 138
实际元素数: 19795
最后一次所用q.shpe: torch.Size([18, 200])
===== 数据来自Test=====

test_auc	 0.7735030379658836
test_accuracy	 0.8021722657236676
test_loss	 0.4333510398864746
@ 使用预设Q-matrix:  qm_fold2_trained_0.99.json


===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.7276419866779338 	train_auc	 0.739630270531626
valid_accuracy	 0.7847459947966589 	train_accuracy	 0.7990200304623962
valid_loss	 0.4926617741584778 	train_loss	 0.46492525935173035
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.7463028045662767 	train_auc	 0.7584494830558736
valid_accuracy	 0.7867543018850701 	train_accuracy	 0.8011610196281289
valid_loss	 0.47731587290763855 	train_loss	 0.4512902796268463
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.7553094818603873 	train_auc	 0.767416796347105
valid_accuracy	 0.7906796293760555 	train_accuracy	 0.8027847228209328
valid_loss	 0.46711674332618713 	train_loss	 0.4425080418586731
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.7601705381627519 	train_auc	 0.7727651330211466
valid_accuracy	 0.7925966497786298 	train_accuracy	 0.8042791045205047
valid_loss	 0.46857595443725586 	train_loss	 0.44233033061027527
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.7638147911949564 	train_auc	 0.7770083938887535
valid_accuracy	 0.792505363092793 	train_accuracy	 0.8054429979595942
valid_loss	 0.46947845816612244 	train_loss	 0.44199299812316895
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.7675835289814106 	train_auc	 0.7811814316959227
valid_accuracy	 0.7944680268382857 	train_accuracy	 0.8077564157829697
valid_loss	 0.4603791832923889 	train_loss	 0.4338572323322296
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.7700195039665796 	train_auc	 0.7839794648329548
valid_accuracy	 0.7961111871833493 	train_accuracy	 0.8089203092220594
valid_loss	 0.4579515755176544 	train_loss	 0.4312019944190979
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.772314285467173 	train_auc	 0.7865881670508708
valid_accuracy	 0.7969784106987996 	train_accuracy	 0.8095669166882202
valid_loss	 0.45456263422966003 	train_loss	 0.42797189950942993
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.7735721417813772 	train_auc	 0.7881166228834757
valid_accuracy	 0.7960655438404308 	train_accuracy	 0.8098399287294882
valid_loss	 0.4601021111011505 	train_loss	 0.43173086643218994
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.775372118624821 	train_auc	 0.7901321012038778
valid_accuracy	 0.7966589072983705 	train_accuracy	 0.8110612983877921
valid_loss	 0.45725885033607483 	train_loss	 0.4289119243621826
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.7773437311282962 	train_auc	 0.7923541157760033
valid_accuracy	 0.7972066274133918 	train_accuracy	 0.8114636319222922
valid_loss	 0.4496574401855469 	train_loss	 0.42263486981391907
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.7785968741194187 	train_auc	 0.7939279597365333
valid_accuracy	 0.7969327673558811 	train_accuracy	 0.811434893812685
valid_loss	 0.4486088454723358 	train_loss	 0.42131945490837097
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.7793004672057937 	train_auc	 0.79486185730304
valid_accuracy	 0.7974804874709024 	train_accuracy	 0.812210822772078
valid_loss	 0.4517640769481659 	train_loss	 0.4231174886226654
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.78045878402816 	train_auc	 0.7962663172870439
valid_accuracy	 0.7971153407275549 	train_accuracy	 0.8123832514297209
valid_loss	 0.45242083072662354 	train_loss	 0.42318764328956604
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.7813806805647325 	train_auc	 0.7975373936893577
valid_accuracy	 0.7966132639554521 	train_accuracy	 0.8128430611834353
valid_loss	 0.4486965239048004 	train_loss	 0.4198564887046814
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.7827535125038688 	train_auc	 0.7991769266740703
valid_accuracy	 0.7972979140992287 	train_accuracy	 0.8128286921286317
valid_loss	 0.44567158818244934 	train_loss	 0.4172617197036743
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.7836108011642945 	train_auc	 0.8002237936363404
valid_accuracy	 0.796704550641289 	train_accuracy	 0.8131879184987212
valid_loss	 0.4446846842765808 	train_loss	 0.41631096601486206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.7840329676210966 	train_auc	 0.8009202434057314
valid_accuracy	 0.7968414806700442 	train_accuracy	 0.8132453947179354
valid_loss	 0.4460090398788452 	train_loss	 0.4167264699935913
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.7850900540469687 	train_auc	 0.8022697683108087
valid_accuracy	 0.7972066274133918 	train_accuracy	 0.8134465614851855
valid_loss	 0.4438225030899048 	train_loss	 0.41480445861816406
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.7854735359045752 	train_auc	 0.8026695112130716
valid_accuracy	 0.7977999908713315 	train_accuracy	 0.813532775814007
valid_loss	 0.4463527500629425 	train_loss	 0.4162957966327667
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.7864419823982364 	train_auc	 0.803813642561138
valid_accuracy	 0.7979369209000867 	train_accuracy	 0.8138488950196856
valid_loss	 0.44628041982650757 	train_loss	 0.4159252941608429
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.7871619955238984 	train_auc	 0.8048068518620435
valid_accuracy	 0.7981651376146789 	train_accuracy	 0.8140069546225249
valid_loss	 0.4427604079246521 	train_loss	 0.4130856990814209
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.7878520436980667 	train_auc	 0.8057367628569644
valid_accuracy	 0.7987585010726186 	train_accuracy	 0.813633359197632
valid_loss	 0.4425674378871918 	train_loss	 0.4125162959098816
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.7887324217499405 	train_auc	 0.8066178992814306
valid_accuracy	 0.7994431512163951 	train_accuracy	 0.8147541454723108
valid_loss	 0.4423011541366577 	train_loss	 0.4120802879333496
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.7893443053524473 	train_auc	 0.8075276710475128
valid_accuracy	 0.7993975078734766 	train_accuracy	 0.8145673477598644
valid_loss	 0.4419417083263397 	train_loss	 0.4114396572113037
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.7898069356879084 	train_auc	 0.8081018047172827
valid_accuracy	 0.7989410744442923 	train_accuracy	 0.8147541454723108
valid_loss	 0.4413398206233978 	train_loss	 0.41079434752464294
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.7901907828280537 	train_auc	 0.8088239271503584
valid_accuracy	 0.7997626546168242 	train_accuracy	 0.8151995861712217
valid_loss	 0.4410986602306366 	train_loss	 0.4102031886577606
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.7905044485875077 	train_auc	 0.8094038336942202
valid_accuracy	 0.7992149345018029 	train_accuracy	 0.8154007529384717
valid_loss	 0.4421258568763733 	train_loss	 0.4105306565761566
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.7913246021537012 	train_auc	 0.8102679454371725
valid_accuracy	 0.7991692911588845 	train_accuracy	 0.8154294910480788
valid_loss	 0.4410513639450073 	train_loss	 0.40953612327575684
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.7916050684436964 	train_auc	 0.8107696294452317
valid_accuracy	 0.7996257245880688 	train_accuracy	 0.8157456102537575
valid_loss	 0.44251444935798645 	train_loss	 0.4103070795536041
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.7925951549819577 	train_auc	 0.811946112036048
valid_accuracy	 0.8000821580172531 	train_accuracy	 0.8155875506509181
valid_loss	 0.43927064538002014 	train_loss	 0.40762171149253845
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.7929767043771005 	train_auc	 0.8123989982033422
valid_accuracy	 0.8002190880460085 	train_accuracy	 0.8157887174181683
valid_loss	 0.44009605050086975 	train_loss	 0.4079836308956146
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.7934410315088711 	train_auc	 0.81305353385719
valid_accuracy	 0.8007668081610297 	train_accuracy	 0.8160186222950254
valid_loss	 0.43842613697052 	train_loss	 0.40654054284095764
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.793801647857876 	train_auc	 0.8135963799823427
valid_accuracy	 0.7998995846455794 	train_accuracy	 0.8165646463775613
valid_loss	 0.44140830636024475 	train_loss	 0.4083808958530426
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.794367028636525 	train_auc	 0.8142751002247673
valid_accuracy	 0.799853941302661 	train_accuracy	 0.8164784320487398
valid_loss	 0.44077473878860474 	train_loss	 0.4076666235923767
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.7949831070965747 	train_auc	 0.815225542369543
valid_accuracy	 0.8004016614176822 	train_accuracy	 0.8159036698565968
valid_loss	 0.4374989867210388 	train_loss	 0.4049391746520996
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.7952799404009723 	train_auc	 0.815635724455496
valid_accuracy	 0.8004929481035191 	train_accuracy	 0.8164353248843291
valid_loss	 0.4376165270805359 	train_loss	 0.4047572612762451
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.7957817561262064 	train_auc	 0.8163243296807989
valid_accuracy	 0.8007211648181113 	train_accuracy	 0.8165359082679541
valid_loss	 0.4376412630081177 	train_loss	 0.40445101261138916
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.7960432748574119 	train_auc	 0.8167950954073231
valid_accuracy	 0.8009493815327035 	train_accuracy	 0.8167945512544185
valid_loss	 0.43692490458488464 	train_loss	 0.40371695160865784
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.7966611149219638 	train_auc	 0.8175089011539618
valid_accuracy	 0.8003560180747638 	train_accuracy	 0.8171681466793115
valid_loss	 0.43767696619033813 	train_loss	 0.4039611220359802
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.7971573983842305 	train_auc	 0.8180160781800123
valid_accuracy	 0.8006298781322744 	train_accuracy	 0.8172112538437222
valid_loss	 0.43727847933769226 	train_loss	 0.40346211194992065
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.7973672944443803 	train_auc	 0.8185613554402179
valid_accuracy	 0.8004929481035191 	train_accuracy	 0.8174267896657758
valid_loss	 0.43694132566452026 	train_loss	 0.4028969705104828
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.7979402165399604 	train_auc	 0.8192532117728248
valid_accuracy	 0.8006755214751928 	train_accuracy	 0.8177141707618473
valid_loss	 0.435120165348053 	train_loss	 0.40143778920173645
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.798065025335172 	train_auc	 0.81949934551946
valid_accuracy	 0.7997626546168242 	train_accuracy	 0.8179728137483117
valid_loss	 0.4390447437763214 	train_loss	 0.4040035605430603
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.7984053920698857 	train_auc	 0.8201808637105137
valid_accuracy	 0.799534437902232 	train_accuracy	 0.818231456734776
valid_loss	 0.4346459209918976 	train_loss	 0.40061643719673157
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.7990032064029929 	train_auc	 0.8209908768809584
valid_accuracy	 0.8002190880460085 	train_accuracy	 0.8179728137483117
valid_loss	 0.4361664354801178 	train_loss	 0.40111100673675537
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.7990498388432354 	train_auc	 0.8212816296105243
valid_accuracy	 0.8006755214751928 	train_accuracy	 0.8180159209127223
valid_loss	 0.43699806928634644 	train_loss	 0.4013884365558624
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.7996331184662885 	train_auc	 0.8222103832136947
valid_accuracy	 0.8000365146743348 	train_accuracy	 0.8183176710635974
valid_loss	 0.43503445386886597 	train_loss	 0.39967620372772217
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.7999568236039072 	train_auc	 0.8224094772527482
valid_accuracy	 0.7993518645305582 	train_accuracy	 0.8180877661867403
valid_loss	 0.43315720558166504 	train_loss	 0.3987298011779785
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.8002351688985154 	train_auc	 0.8227751983489298
valid_accuracy	 0.8004473047606007 	train_accuracy	 0.8187918498721154
valid_loss	 0.4355408549308777 	train_loss	 0.3996953070163727
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.8011757301944927 	train_auc	 0.8240565412447358
valid_accuracy	 0.8004473047606007 	train_accuracy	 0.8186050521596689
valid_loss	 0.43246203660964966 	train_loss	 0.39724794030189514
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.8006377279312964 	train_auc	 0.8235839530854867
valid_accuracy	 0.8000821580172531 	train_accuracy	 0.818806218926919
valid_loss	 0.43487194180488586 	train_loss	 0.3986652195453644
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.8014883177812918 	train_auc	 0.8248607723554395
valid_accuracy	 0.8005385914464376 	train_accuracy	 0.8190217547489727
valid_loss	 0.43216782808303833 	train_loss	 0.3964445888996124
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.8017558931326576 	train_auc	 0.8252304573652735
valid_accuracy	 0.8006298781322744 	train_accuracy	 0.8194959335574906
valid_loss	 0.43386590480804443 	train_loss	 0.39723387360572815
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.8017396380596785 	train_auc	 0.8253379796712896
valid_accuracy	 0.7998995846455794 	train_accuracy	 0.8196539931603299
valid_loss	 0.433971643447876 	train_loss	 0.39707714319229126
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.8020995591935287 	train_auc	 0.8259235825421698
valid_accuracy	 0.800903738189785 	train_accuracy	 0.8195103026122942
valid_loss	 0.4318642020225525 	train_loss	 0.3955167233943939
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.8022920630915058 	train_auc	 0.8265096495945035
valid_accuracy	 0.8006298781322744 	train_accuracy	 0.8198264218179728
valid_loss	 0.4359303116798401 	train_loss	 0.3977634608745575
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.8025016999188861 	train_auc	 0.8267771173167
valid_accuracy	 0.8005842347893559 	train_accuracy	 0.8192947667902405
valid_loss	 0.4320395588874817 	train_loss	 0.3949725329875946
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.8028936775413479 	train_auc	 0.8272553889430594
valid_accuracy	 0.8012688849331325 	train_accuracy	 0.8203293387360979
valid_loss	 0.43402811884880066 	train_loss	 0.39594346284866333
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.8029606126207662 	train_auc	 0.8277500042881671
valid_accuracy	 0.8003560180747638 	train_accuracy	 0.8196252550507228
valid_loss	 0.4310462474822998 	train_loss	 0.3937951624393463
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.8031749450962669 	train_auc	 0.8280510290226146
valid_accuracy	 0.8004929481035191 	train_accuracy	 0.8205017673937408
valid_loss	 0.43247637152671814 	train_loss	 0.39432165026664734
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.8036902586004773 	train_auc	 0.8286342877159174
valid_accuracy	 0.8014971016477247 	train_accuracy	 0.8204873983389372
valid_loss	 0.4337376356124878 	train_loss	 0.3949021100997925
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.8038806709613366 	train_auc	 0.8293276437587874
valid_accuracy	 0.8004016614176822 	train_accuracy	 0.8204155530649194
valid_loss	 0.42978137731552124 	train_loss	 0.39225202798843384
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.8041927636492122 	train_auc	 0.8294707524930661
valid_accuracy	 0.8012688849331325 	train_accuracy	 0.820904100928241
valid_loss	 0.4340951442718506 	train_loss	 0.3946181535720825
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.8042702860306035 	train_auc	 0.8302272170051785
valid_accuracy	 0.8003560180747638 	train_accuracy	 0.8200132195304193
valid_loss	 0.4305051565170288 	train_loss	 0.39175400137901306
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.8042333924941791 	train_auc	 0.8300231204617804
valid_accuracy	 0.8011319549043772 	train_accuracy	 0.8211340058050981
valid_loss	 0.43182283639907837 	train_loss	 0.39252540469169617
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.8047456187717706 	train_auc	 0.8309699446856762
valid_accuracy	 0.8009493815327035 	train_accuracy	 0.8214644940655804
valid_loss	 0.4341842532157898 	train_loss	 0.3937029540538788
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.8051368717208086 	train_auc	 0.8311825673483045
valid_accuracy	 0.8014514583048062 	train_accuracy	 0.8205879817225623
valid_loss	 0.43186768889427185 	train_loss	 0.3919306695461273
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.8055239946204957 	train_auc	 0.831756364210951
valid_accuracy	 0.8004929481035191 	train_accuracy	 0.8213782797367589
valid_loss	 0.43108683824539185 	train_loss	 0.3912067115306854
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.8052836858431593 	train_auc	 0.8319946019738649
valid_accuracy	 0.8008580948468665 	train_accuracy	 0.8215076012299911
valid_loss	 0.4330703616142273 	train_loss	 0.39200863242149353
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.8050682103868114 	train_auc	 0.8319392412932097
valid_accuracy	 0.8012232415902141 	train_accuracy	 0.821953041928902
valid_loss	 0.43092018365859985 	train_loss	 0.3905566930770874
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.8058978141657842 	train_auc	 0.8329890727705409
valid_accuracy	 0.8010406682185404 	train_accuracy	 0.8215219702847947
valid_loss	 0.42989441752433777 	train_loss	 0.38950636982917786
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.8058012322841799 	train_auc	 0.8329123358603401
valid_accuracy	 0.8016796750193984 	train_accuracy	 0.822154208696152
valid_loss	 0.4312920570373535 	train_loss	 0.39022308588027954
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.8063025766771057 	train_auc	 0.8337595509084854
valid_accuracy	 0.8018622483910721 	train_accuracy	 0.8218668276000805
valid_loss	 0.4305090010166168 	train_loss	 0.3892499506473541
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.8066261345233783 	train_auc	 0.8340625848505172
valid_accuracy	 0.8013601716189693 	train_accuracy	 0.8215363393395982
valid_loss	 0.42931923270225525 	train_loss	 0.3884718120098114
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.8062710740039565 	train_auc	 0.8340970328707034
valid_accuracy	 0.8014514583048062 	train_accuracy	 0.8223122682989913
valid_loss	 0.4304388463497162 	train_loss	 0.3887607753276825
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.8066562526578724 	train_auc	 0.8350973096098071
valid_accuracy	 0.8023186818202566 	train_accuracy	 0.822930137655545
valid_loss	 0.4289768934249878 	train_loss	 0.3872871696949005
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.8064109182997997 	train_auc	 0.8347286999332615
valid_accuracy	 0.8017709617052353 	train_accuracy	 0.8228870304911343
valid_loss	 0.4319821000099182 	train_loss	 0.38908568024635315
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.8073023903358778 	train_auc	 0.8359687006732572
valid_accuracy	 0.8008124515039482 	train_accuracy	 0.822154208696152
valid_loss	 0.4275731146335602 	train_loss	 0.3863178491592407
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.807500526654938 	train_auc	 0.8356959512029921
valid_accuracy	 0.8020448217627459 	train_accuracy	 0.8231456734775986
valid_loss	 0.4319484531879425 	train_loss	 0.3888326585292816
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.8076554712596052 	train_auc	 0.8363841124552689
valid_accuracy	 0.8019991784198275 	train_accuracy	 0.8229445067103486
valid_loss	 0.4285026788711548 	train_loss	 0.3862299919128418
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.8072681539353408 	train_auc	 0.8359930720366933
valid_accuracy	 0.8012232415902141 	train_accuracy	 0.8234186855188665
valid_loss	 0.4340074360370636 	train_loss	 0.3897063136100769
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.8079455704036492 	train_auc	 0.8369651433225456
valid_accuracy	 0.8021817517915012 	train_accuracy	 0.8236198522861167
valid_loss	 0.4283582270145416 	train_loss	 0.38565436005592346
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.8081259905195748 	train_auc	 0.8372803396759851
valid_accuracy	 0.8020448217627459 	train_accuracy	 0.8232893640256344
valid_loss	 0.42811569571495056 	train_loss	 0.3853287100791931
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.8082921940747543 	train_auc	 0.8375098241279548
valid_accuracy	 0.8022273951344197 	train_accuracy	 0.8234617926832773
valid_loss	 0.42908620834350586 	train_loss	 0.3855859339237213
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.8079840546866138 	train_auc	 0.8378134294173428
valid_accuracy	 0.8025468985348487 	train_accuracy	 0.8237635428341523
valid_loss	 0.4290024936199188 	train_loss	 0.3850789964199066
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.8085323614523983 	train_auc	 0.8383949759057063
valid_accuracy	 0.8020448217627459 	train_accuracy	 0.8233468402448487
valid_loss	 0.42982807755470276 	train_loss	 0.3852323889732361
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.8086482267170618 	train_auc	 0.8385813704790848
valid_accuracy	 0.8027294719065224 	train_accuracy	 0.8241227692042418
valid_loss	 0.4302135109901428 	train_loss	 0.385407954454422
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.8085253739509293 	train_auc	 0.8391256997803325
valid_accuracy	 0.8000365146743348 	train_accuracy	 0.8234905307928845
valid_loss	 0.4268736243247986 	train_loss	 0.38356107473373413
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.8084758310336835 	train_auc	 0.83878714187245
valid_accuracy	 0.8026381852206855 	train_accuracy	 0.8239216024369916
valid_loss	 0.43156877160072327 	train_loss	 0.3856702148914337
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.8086340690728543 	train_auc	 0.8395617664122698
valid_accuracy	 0.8017253183623169 	train_accuracy	 0.8240940310946346
valid_loss	 0.4279724061489105 	train_loss	 0.3831288814544678
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.8092427535073192 	train_auc	 0.8403626074061841
valid_accuracy	 0.8024099685060934 	train_accuracy	 0.824654424231974
valid_loss	 0.42853882908821106 	train_loss	 0.38293224573135376
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.8093896618961317 	train_auc	 0.8400684988529176
valid_accuracy	 0.8018622483910721 	train_accuracy	 0.8247550076155991
valid_loss	 0.42970412969589233 	train_loss	 0.3837708532810211
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.8093178308523619 	train_auc	 0.8406815478300805
valid_accuracy	 0.8015427449906432 	train_accuracy	 0.8242664597522775
valid_loss	 0.4265275001525879 	train_loss	 0.38190218806266785
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.8092616657161859 	train_auc	 0.8407372838975841
valid_accuracy	 0.8020904651056643 	train_accuracy	 0.8248124838348133
valid_loss	 0.43051138520240784 	train_loss	 0.38366469740867615
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.8092039334000851 	train_auc	 0.8406185606114026
valid_accuracy	 0.8012688849331325 	train_accuracy	 0.8241371382590453
valid_loss	 0.4275413751602173 	train_loss	 0.38220450282096863
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.8097280608184587 	train_auc	 0.8412159609172444
valid_accuracy	 0.80163403167648 	train_accuracy	 0.8246687932867776
valid_loss	 0.4284188449382782 	train_loss	 0.38203978538513184
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.8098039040785021 	train_auc	 0.8422547114402216
valid_accuracy	 0.8018166050481538 	train_accuracy	 0.8255165675201885
valid_loss	 0.42632344365119934 	train_loss	 0.3802938759326935
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.8097375758394305 	train_auc	 0.8421595664897954
valid_accuracy	 0.8019078917339906 	train_accuracy	 0.8249561743828491
valid_loss	 0.42778727412223816 	train_loss	 0.3808648884296417
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.8099087578421154 	train_auc	 0.8422620630211566
valid_accuracy	 0.8019991784198275 	train_accuracy	 0.8257464723970457
valid_loss	 0.4293011426925659 	train_loss	 0.38156071305274963
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.8100800930278004 	train_auc	 0.8427480058890296
valid_accuracy	 0.8021817517915012 	train_accuracy	 0.8252866626433313
valid_loss	 0.42833212018013 	train_loss	 0.3806333839893341
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.8098993370876052 	train_auc	 0.8429114608354339
valid_accuracy	 0.7999908713314163 	train_accuracy	 0.8248843291088312
valid_loss	 0.42700618505477905 	train_loss	 0.38001230359077454
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.8102789540202844 	train_auc	 0.8433979260605363
valid_accuracy	 0.8019991784198275 	train_accuracy	 0.8256746271230279
valid_loss	 0.43065765500068665 	train_loss	 0.3814767897129059
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.81001011196334 	train_auc	 0.843207145646037
valid_accuracy	 0.8002190880460085 	train_accuracy	 0.8250854958760813
valid_loss	 0.4274868071079254 	train_loss	 0.3800412118434906
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.810637814656441 	train_auc	 0.8438914415772926
valid_accuracy	 0.802683828563604 	train_accuracy	 0.8262350202603673
valid_loss	 0.4286159574985504 	train_loss	 0.3799562156200409
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.8106813363034496 	train_auc	 0.8443874629390455
valid_accuracy	 0.801314528276051 	train_accuracy	 0.8262924964795816
valid_loss	 0.4267502427101135 	train_loss	 0.3784807026386261
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.810730696579426 	train_auc	 0.8444536228808242
valid_accuracy	 0.8024099685060934 	train_accuracy	 0.826852889616921
valid_loss	 0.4277585744857788 	train_loss	 0.3789122402667999
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.8108323158250741 	train_auc	 0.8447038252575079
valid_accuracy	 0.8004473047606007 	train_accuracy	 0.82580394861626
valid_loss	 0.42595839500427246 	train_loss	 0.37846124172210693
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.8107788078247855 	train_auc	 0.8448342124805546
valid_accuracy	 0.8024556118490118 	train_accuracy	 0.8269965801649567
valid_loss	 0.42865678668022156 	train_loss	 0.37906917929649353
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.8105637447842072 	train_auc	 0.8454888534631755
valid_accuracy	 0.801953535076909 	train_accuracy	 0.8268241515073138
valid_loss	 0.42697852849960327 	train_loss	 0.37732362747192383
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.8110002279598708 	train_auc	 0.8453684234834443
valid_accuracy	 0.8019991784198275 	train_accuracy	 0.826852889616921
valid_loss	 0.4279904067516327 	train_loss	 0.3779789209365845
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.8111188269519221 	train_auc	 0.845798472903031
valid_accuracy	 0.8030489753069515 	train_accuracy	 0.827327068425439
valid_loss	 0.431287944316864 	train_loss	 0.37975311279296875
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.811127175425431 	train_auc	 0.8465423138841651
valid_accuracy	 0.8017253183623169 	train_accuracy	 0.8273558065350461
valid_loss	 0.4256460964679718 	train_loss	 0.3761334717273712
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.8109502019270092 	train_auc	 0.8458703897971103
valid_accuracy	 0.801953535076909 	train_accuracy	 0.8273845446446533
valid_loss	 0.42942482233047485 	train_loss	 0.3780505061149597
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.8112206700804165 	train_auc	 0.8469331405833116
valid_accuracy	 0.801953535076909 	train_accuracy	 0.8273845446446533
valid_loss	 0.4268391728401184 	train_loss	 0.3759680986404419
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.8112889838068366 	train_auc	 0.8472661430107906
valid_accuracy	 0.8017709617052353 	train_accuracy	 0.8273701755898497
valid_loss	 0.426044225692749 	train_loss	 0.3754284977912903
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.8113054333043928 	train_auc	 0.8476611540791608
valid_accuracy	 0.8017709617052353 	train_accuracy	 0.8279018306175819
valid_loss	 0.42725035548210144 	train_loss	 0.37543803453445435
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.8113413488262777 	train_auc	 0.8478563521783635
valid_accuracy	 0.8036879821078096 	train_accuracy	 0.8280598902204213
valid_loss	 0.42890506982803345 	train_loss	 0.3761977553367615
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.8113086265807807 	train_auc	 0.8477776005491892
valid_accuracy	 0.8014058149618878 	train_accuracy	 0.8284909618645285
valid_loss	 0.4266227185726166 	train_loss	 0.37505078315734863
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.8117222619228044 	train_auc	 0.8485498809114312
valid_accuracy	 0.8022730384773381 	train_accuracy	 0.8286633905221714
valid_loss	 0.4276857376098633 	train_loss	 0.37484878301620483
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.8117789867660965 	train_auc	 0.8487576902940803
valid_accuracy	 0.8020904651056643 	train_accuracy	 0.8283185332068856
valid_loss	 0.4263817369937897 	train_loss	 0.37403762340545654
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.811495374332944 	train_auc	 0.8488029290021178
valid_accuracy	 0.8014971016477247 	train_accuracy	 0.8284478547001178
valid_loss	 0.4272741675376892 	train_loss	 0.37419506907463074
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.811964921470028 	train_auc	 0.849079269448693
valid_accuracy	 0.80163403167648 	train_accuracy	 0.8285628071385465
valid_loss	 0.42786359786987305 	train_loss	 0.3742292821407318
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.8118430526100886 	train_auc	 0.8498580875433851
valid_accuracy	 0.8022730384773381 	train_accuracy	 0.8287496048509929
valid_loss	 0.42629510164260864 	train_loss	 0.3729097247123718
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.8119531911872077 	train_auc	 0.8496966932441985
valid_accuracy	 0.8017253183623169 	train_accuracy	 0.8291950455499038
valid_loss	 0.4273587167263031 	train_loss	 0.37338024377822876
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.8119474939579321 	train_auc	 0.8502749537197924
valid_accuracy	 0.8028207585923594 	train_accuracy	 0.8289076644538322
valid_loss	 0.427236407995224 	train_loss	 0.3729671835899353
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.8119919641612111 	train_auc	 0.8503097048663895
valid_accuracy	 0.8022730384773381 	train_accuracy	 0.8293674742075466
valid_loss	 0.4271238148212433 	train_loss	 0.3726649582386017
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.8121400214225247 	train_auc	 0.8506088049012223
valid_accuracy	 0.8024099685060934 	train_accuracy	 0.8298560220708682
valid_loss	 0.42717230319976807 	train_loss	 0.372397243976593
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.8120724500444902 	train_auc	 0.8502250627868185
valid_accuracy	 0.8025468985348487 	train_accuracy	 0.8292237836595109
valid_loss	 0.4279492497444153 	train_loss	 0.37297552824020386
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.8121907721288104 	train_auc	 0.8515315541519504
valid_accuracy	 0.8020448217627459 	train_accuracy	 0.8302439865505647
valid_loss	 0.42562323808670044 	train_loss	 0.3709719777107239
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.8123309875988463 	train_auc	 0.8512894192244325
valid_accuracy	 0.8025012551919303 	train_accuracy	 0.8297554386872431
valid_loss	 0.42883533239364624 	train_loss	 0.37268009781837463
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.8121607541524318 	train_auc	 0.8516083559740695
valid_accuracy	 0.8019078917339906 	train_accuracy	 0.8297841767968503
valid_loss	 0.42673397064208984 	train_loss	 0.3712598979473114
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.812482279378125 	train_auc	 0.8522444535812392
valid_accuracy	 0.8027294719065224 	train_accuracy	 0.8303445699341897
valid_loss	 0.4255034327507019 	train_loss	 0.3702974319458008
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.812482520935933 	train_auc	 0.8520214180671142
valid_accuracy	 0.8013601716189693 	train_accuracy	 0.8307612725234934
valid_loss	 0.4266777038574219 	train_loss	 0.37076789140701294
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.8121391553494084 	train_auc	 0.8525538452170042
valid_accuracy	 0.8000365146743348 	train_accuracy	 0.8299134982900824
valid_loss	 0.426165908575058 	train_loss	 0.3704802989959717
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.8125335132000265 	train_auc	 0.853052844566103
valid_accuracy	 0.8023186818202566 	train_accuracy	 0.8306750581946719
valid_loss	 0.4266699254512787 	train_loss	 0.3697248101234436
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.8126725032060612 	train_auc	 0.8528816320330861
valid_accuracy	 0.8030946186498699 	train_accuracy	 0.8310055464551542
valid_loss	 0.428738534450531 	train_loss	 0.3710225820541382
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.8123975220458028 	train_auc	 0.8536127159851459
valid_accuracy	 0.8018166050481538 	train_accuracy	 0.8307181653590827
valid_loss	 0.42725974321365356 	train_loss	 0.3692913353443146
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.8125560664509739 	train_auc	 0.853381776526404
valid_accuracy	 0.8021817517915012 	train_accuracy	 0.8307469034686898
valid_loss	 0.4265029728412628 	train_loss	 0.36925265192985535
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.813005841197729 	train_auc	 0.8533758983235389
valid_accuracy	 0.8015427449906432 	train_accuracy	 0.8308618559071185
valid_loss	 0.4273186922073364 	train_loss	 0.36963602900505066
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.8127654617205462 	train_auc	 0.8545110546803364
valid_accuracy	 0.8019078917339906 	train_accuracy	 0.8316952610857258
valid_loss	 0.4265616536140442 	train_loss	 0.3682865500450134
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.8127457128968325 	train_auc	 0.8546537812916245
valid_accuracy	 0.8022730384773381 	train_accuracy	 0.8318102135241544
valid_loss	 0.4272972047328949 	train_loss	 0.36819028854370117
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.8126793551994919 	train_auc	 0.8552806467093585
valid_accuracy	 0.8026381852206855 	train_accuracy	 0.831824582578958
valid_loss	 0.4254860281944275 	train_loss	 0.36703675985336304
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.8130536342937806 	train_auc	 0.8546561671108102
valid_accuracy	 0.8010406682185404 	train_accuracy	 0.8320113802914044
valid_loss	 0.42862147092819214 	train_loss	 0.3685932457447052
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.8128200420018359 	train_auc	 0.8553021294924307
valid_accuracy	 0.8008580948468665 	train_accuracy	 0.83175273730494
valid_loss	 0.42670738697052 	train_loss	 0.3672502338886261
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.812898336189882 	train_auc	 0.8553783268988578
valid_accuracy	 0.8021817517915012 	train_accuracy	 0.8321838089490473
valid_loss	 0.4290345013141632 	train_loss	 0.3681253492832184
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.8123312232650004 	train_auc	 0.8557316436948798
valid_accuracy	 0.8022730384773381 	train_accuracy	 0.832499928154726
valid_loss	 0.42662930488586426 	train_loss	 0.3665657341480255
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.8126565957406594 	train_auc	 0.8559164301673388
valid_accuracy	 0.80163403167648 	train_accuracy	 0.832126332729833
valid_loss	 0.4264257848262787 	train_loss	 0.3665139675140381
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.8131383209262566 	train_auc	 0.8563541783853857
valid_accuracy	 0.8022273951344197 	train_accuracy	 0.8329309997988332
valid_loss	 0.4286307096481323 	train_loss	 0.36696958541870117
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.8132755846777125 	train_auc	 0.8565744784132936
valid_accuracy	 0.8019991784198275 	train_accuracy	 0.8325717734287439
valid_loss	 0.42768970131874084 	train_loss	 0.3662101924419403
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.8133276374394994 	train_auc	 0.8570104090976284
valid_accuracy	 0.8026381852206855 	train_accuracy	 0.8330459522372619
valid_loss	 0.42764517664909363 	train_loss	 0.3659389615058899
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 152
valid_auc	 0.8130417626112676 	train_auc	 0.8570756431260065
valid_accuracy	 0.8018166050481538 	train_accuracy	 0.8326867258671724
valid_loss	 0.4275195002555847 	train_loss	 0.3654617965221405
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.8127124604024891 	train_auc	 0.8573479186167927
valid_accuracy	 0.8009950248756219 	train_accuracy	 0.8323849757162974
valid_loss	 0.4271097183227539 	train_loss	 0.365111768245697
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.8132705649886303 	train_auc	 0.8577943037942322
valid_accuracy	 0.8032771920215437 	train_accuracy	 0.8334913929361727
valid_loss	 0.42948076128959656 	train_loss	 0.36613962054252625
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.8132822717048351 	train_auc	 0.8578530037644196
valid_accuracy	 0.8014058149618878 	train_accuracy	 0.8334626548265656
valid_loss	 0.42914360761642456 	train_loss	 0.3653583228588104
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.813463398819223 	train_auc	 0.8583911811304679
valid_accuracy	 0.8022730384773381 	train_accuracy	 0.8336781906486191
valid_loss	 0.4293001592159271 	train_loss	 0.36545708775520325
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.812673675645178 	train_auc	 0.8584464303585839
valid_accuracy	 0.7996713679309873 	train_accuracy	 0.8327298330315832
valid_loss	 0.4265304505825043 	train_loss	 0.36398419737815857
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.8134217683931011 	train_auc	 0.8590295733127116
valid_accuracy	 0.801953535076909 	train_accuracy	 0.8341811075667442
valid_loss	 0.4273625314235687 	train_loss	 0.3636225163936615
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.8125593068605929 	train_auc	 0.8579213456039801
valid_accuracy	 0.8009950248756219 	train_accuracy	 0.8334913929361727
valid_loss	 0.42890238761901855 	train_loss	 0.3646814525127411
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.8134048298882751 	train_auc	 0.8598305086126206
valid_accuracy	 0.8021817517915012 	train_accuracy	 0.8344828577176193
valid_loss	 0.4262716472148895 	train_loss	 0.3623194098472595
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.8124125928963576 	train_auc	 0.859137928450887
valid_accuracy	 0.8009950248756219 	train_accuracy	 0.8337212978130298
valid_loss	 0.42809510231018066 	train_loss	 0.3630959093570709
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.8132998818582002 	train_auc	 0.8597049463047082
valid_accuracy	 0.801314528276051 	train_accuracy	 0.8340374170187085
valid_loss	 0.428333580493927 	train_loss	 0.3627932667732239
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.8125967011875947 	train_auc	 0.8597739305273091
valid_accuracy	 0.8014514583048062 	train_accuracy	 0.8348277150329051
valid_loss	 0.42718029022216797 	train_loss	 0.3622574210166931
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.8135731190889184 	train_auc	 0.8603935594909067
valid_accuracy	 0.8009950248756219 	train_accuracy	 0.834798976923298
valid_loss	 0.42759352922439575 	train_loss	 0.36188647150993347
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.8133687258334669 	train_auc	 0.8604357179447081
valid_accuracy	 0.8017709617052353 	train_accuracy	 0.8348708221973159
valid_loss	 0.43050649762153625 	train_loss	 0.3630314767360687
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.8128719710388921 	train_auc	 0.8612555554727487
valid_accuracy	 0.8009950248756219 	train_accuracy	 0.8346409173204586
valid_loss	 0.4264785051345825 	train_loss	 0.3607102334499359
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.8130049515579972 	train_auc	 0.8604995747381408
valid_accuracy	 0.8006298781322744 	train_accuracy	 0.834798976923298
valid_loss	 0.42800965905189514 	train_loss	 0.3615938425064087
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.8131626475650136 	train_auc	 0.8616906612858197
valid_accuracy	 0.8004473047606007 	train_accuracy	 0.834798976923298
valid_loss	 0.4268530607223511 	train_loss	 0.3605114221572876
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.813621194984355 	train_auc	 0.8620389786393801
valid_accuracy	 0.8018622483910721 	train_accuracy	 0.8359916084719947
valid_loss	 0.4271407425403595 	train_loss	 0.3599100708961487
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 170
valid_auc	 0.813559391535442 	train_auc	 0.8618300908615599
valid_accuracy	 0.8012232415902141 	train_accuracy	 0.8361352990200305
valid_loss	 0.4284234344959259 	train_loss	 0.36036416888237
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.8130730178349552 	train_auc	 0.8616619328629624
valid_accuracy	 0.8009950248756219 	train_accuracy	 0.8358910250883697
valid_loss	 0.4284903109073639 	train_loss	 0.36040249466896057
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.813782938557568 	train_auc	 0.8626640534679715
valid_accuracy	 0.8008124515039482 	train_accuracy	 0.8359916084719947
valid_loss	 0.428152471780777 	train_loss	 0.35958632826805115
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.8131952225191642 	train_auc	 0.8625832087356207
valid_accuracy	 0.7986672143867817 	train_accuracy	 0.8350576199097623
valid_loss	 0.42774713039398193 	train_loss	 0.3599530756473541
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.8130299262786781 	train_auc	 0.8628551094519353
valid_accuracy	 0.8004016614176822 	train_accuracy	 0.8358335488691554
valid_loss	 0.42747122049331665 	train_loss	 0.35880523920059204
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.8134744338868888 	train_auc	 0.8629783477906975
valid_accuracy	 0.8007211648181113 	train_accuracy	 0.8357473345403339
valid_loss	 0.4284346401691437 	train_loss	 0.35909754037857056
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.8135579304052866 	train_auc	 0.8628016538748443
valid_accuracy	 0.8010406682185404 	train_accuracy	 0.8359772394171912
valid_loss	 0.42935943603515625 	train_loss	 0.35933542251586914
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.8136953473397428 	train_auc	 0.863856196977641
valid_accuracy	 0.8018166050481538 	train_accuracy	 0.8369543351438342
valid_loss	 0.42914852499961853 	train_loss	 0.3585589528083801
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.8136721636818329 	train_auc	 0.8644579341344767
valid_accuracy	 0.8012688849331325 	train_accuracy	 0.8377015259936201
valid_loss	 0.4279286563396454 	train_loss	 0.3572452664375305
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.8130579941176315 	train_auc	 0.8638411257774419
valid_accuracy	 0.7998995846455794 	train_accuracy	 0.8366094778285484
valid_loss	 0.42799749970436096 	train_loss	 0.3578017055988312
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.813818977804184 	train_auc	 0.864597661937615
valid_accuracy	 0.8014971016477247 	train_accuracy	 0.8374285139523522
valid_loss	 0.43040817975997925 	train_loss	 0.3580514192581177
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.8130777370496911 	train_auc	 0.8647438154082878
valid_accuracy	 0.798484641015108 	train_accuracy	 0.8363795729516912
valid_loss	 0.4282470643520355 	train_loss	 0.3574843406677246
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 182
valid_auc	 0.8135604402498278 	train_auc	 0.8655504004945944
valid_accuracy	 0.8013601716189693 	train_accuracy	 0.8375290973359772
valid_loss	 0.42746996879577637 	train_loss	 0.35588324069976807
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.8132019331129021 	train_auc	 0.8655469583257952
valid_accuracy	 0.8000821580172531 	train_accuracy	 0.8380032761444952
valid_loss	 0.4271297752857208 	train_loss	 0.3557398021221161
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.8138356217263172 	train_auc	 0.865402774870605
valid_accuracy	 0.8004929481035191 	train_accuracy	 0.838146966692531
valid_loss	 0.4304271936416626 	train_loss	 0.3566897511482239
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.8133935120212245 	train_auc	 0.8656523262909761
valid_accuracy	 0.7997170112739057 	train_accuracy	 0.8380463833089059
valid_loss	 0.42986729741096497 	train_loss	 0.3560486435890198
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.8134713820101933 	train_auc	 0.8665418614603421
valid_accuracy	 0.8012232415902141 	train_accuracy	 0.8386786217202632
valid_loss	 0.4301186203956604 	train_loss	 0.3556939363479614
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.8131581934747012 	train_auc	 0.8664723579423947
valid_accuracy	 0.7996713679309873 	train_accuracy	 0.8381038595281203
valid_loss	 0.4282951056957245 	train_loss	 0.3549368679523468
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.8135214669595934 	train_auc	 0.8665320738453414
valid_accuracy	 0.8003560180747638 	train_accuracy	 0.8389803718711383
valid_loss	 0.4298137426376343 	train_loss	 0.35509732365608215
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.8138041602947449 	train_auc	 0.8667923002143888
valid_accuracy	 0.8001278013601716 	train_accuracy	 0.8391096933643705
valid_loss	 0.4290054738521576 	train_loss	 0.35458144545555115
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.8133680247266585 	train_auc	 0.8668830385028901
valid_accuracy	 0.80017344470309 	train_accuracy	 0.8390665861999598
valid_loss	 0.42932677268981934 	train_loss	 0.3544090986251831
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.8138330824235068 	train_auc	 0.8677612036761531
valid_accuracy	 0.8014971016477247 	train_accuracy	 0.8396126102824956
valid_loss	 0.42995521426200867 	train_loss	 0.35394716262817383
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.813790968881769 	train_auc	 0.8681637971914316
valid_accuracy	 0.80163403167648 	train_accuracy	 0.8397419317757278
valid_loss	 0.4290735423564911 	train_loss	 0.35327214002609253
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.8135571527069781 	train_auc	 0.8678442676612577
valid_accuracy	 0.7999908713314163 	train_accuracy	 0.83987125326896
valid_loss	 0.42909350991249084 	train_loss	 0.3533022999763489
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.8141229282264352 	train_auc	 0.8679030025369109
valid_accuracy	 0.8009493815327035 	train_accuracy	 0.8400005747621921
valid_loss	 0.4315875768661499 	train_loss	 0.35419902205467224
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 195
valid_auc	 0.8131302140105555 	train_auc	 0.8689930892016091
valid_accuracy	 0.799853941302661 	train_accuracy	 0.8404029082966923
valid_loss	 0.42768070101737976 	train_loss	 0.35178861021995544
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.8130774365753447 	train_auc	 0.8690534707579065
valid_accuracy	 0.7995800812451503 	train_accuracy	 0.839598241227692
valid_loss	 0.4282662272453308 	train_loss	 0.3518923819065094
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.8134776448382385 	train_auc	 0.8684657423278904
valid_accuracy	 0.8010406682185404 	train_accuracy	 0.8402592177486565
valid_loss	 0.4308319687843323 	train_loss	 0.35301512479782104
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.8135349529552618 	train_auc	 0.8699032957550685
valid_accuracy	 0.8014971016477247 	train_accuracy	 0.8402017415294422
valid_loss	 0.42982038855552673 	train_loss	 0.3515884578227997
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 199
valid_auc	 0.8136620064705913 	train_auc	 0.8693836703377439
valid_accuracy	 0.7994431512163951 	train_accuracy	 0.8407908727763888
valid_loss	 0.4294053912162781 	train_loss	 0.3515016436576843
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 200
valid_auc	 0.8135512492698178 	train_auc	 0.8702395578631239
valid_accuracy	 0.8004016614176822 	train_accuracy	 0.8408196108859959
valid_loss	 0.4289742410182953 	train_loss	 0.35048210620880127
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 201
valid_auc	 0.8139301061791501 	train_auc	 0.8698970562500169
valid_accuracy	 0.8000365146743348 	train_accuracy	 0.8405322297899244
valid_loss	 0.43053242564201355 	train_loss	 0.3511175811290741
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 202
valid_auc	 0.8136338149069071 	train_auc	 0.870302835960681
valid_accuracy	 0.7990780044730476 	train_accuracy	 0.8406040750639423
valid_loss	 0.4298543334007263 	train_loss	 0.3506322503089905
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 203
valid_auc	 0.8134459241738965 	train_auc	 0.8707564428952187
valid_accuracy	 0.8003560180747638 	train_accuracy	 0.8411644682012818
valid_loss	 0.4294215738773346 	train_loss	 0.3499099612236023
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 204
valid_auc	 0.8135290848680248 	train_auc	 0.8713158109407066
valid_accuracy	 0.8012232415902141 	train_accuracy	 0.8411644682012818
valid_loss	 0.4299905002117157 	train_loss	 0.34987640380859375
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 205
valid_auc	 0.8134605354754507 	train_auc	 0.8714565675365123
valid_accuracy	 0.8001278013601716 	train_accuracy	 0.8410495157628531
valid_loss	 0.4290768504142761 	train_loss	 0.34902411699295044
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 206
valid_auc	 0.813506543400385 	train_auc	 0.871518634353179
valid_accuracy	 0.8017253183623169 	train_accuracy	 0.8416673851194069
valid_loss	 0.43113240599632263 	train_loss	 0.3498378098011017
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 207
valid_auc	 0.8136244059357046 	train_auc	 0.8721728331999037
valid_accuracy	 0.8012232415902141 	train_accuracy	 0.8421559329827284
valid_loss	 0.4293331801891327 	train_loss	 0.3481823801994324
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 208
valid_auc	 0.8136815019531893 	train_auc	 0.8714807190567534
valid_accuracy	 0.8012688849331325 	train_accuracy	 0.8421415639279248
valid_loss	 0.4327180087566376 	train_loss	 0.35009774565696716
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 209
valid_auc	 0.8131698235994059 	train_auc	 0.872936580706773
valid_accuracy	 0.8007668081610297 	train_accuracy	 0.8422852544759606
valid_loss	 0.42799803614616394 	train_loss	 0.3472575545310974
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 210
valid_auc	 0.8132259651689666 	train_auc	 0.8723178935783673
valid_accuracy	 0.7994431512163951 	train_accuracy	 0.8422421473115499
valid_loss	 0.43045246601104736 	train_loss	 0.3480640649795532
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 211
valid_auc	 0.8135436843862712 	train_auc	 0.8730490271329308
valid_accuracy	 0.8017709617052353 	train_accuracy	 0.8422996235307642
valid_loss	 0.4294480085372925 	train_loss	 0.3472815155982971
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 212
valid_auc	 0.8135219088336323 	train_auc	 0.8728212487621343
valid_accuracy	 0.797754347528413 	train_accuracy	 0.8411357300916745
valid_loss	 0.4308435618877411 	train_loss	 0.34811943769454956
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 213
valid_auc	 0.8135600867505965 	train_auc	 0.8730175313802737
valid_accuracy	 0.8006755214751928 	train_accuracy	 0.8426013736816392
valid_loss	 0.4319859743118286 	train_loss	 0.3476234972476959
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 214
valid_auc	 0.8119960588606385 	train_auc	 0.8740078649607235
valid_accuracy	 0.798073850928842 	train_accuracy	 0.842472052188407
valid_loss	 0.4288554787635803 	train_loss	 0.34623077511787415
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 215
valid_auc	 0.8132495258927228 	train_auc	 0.873793899968615
valid_accuracy	 0.7995800812451503 	train_accuracy	 0.8427738023392821
valid_loss	 0.4310602843761444 	train_loss	 0.3463802933692932
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 216
valid_auc	 0.8133723374172785 	train_auc	 0.8731337653556261
valid_accuracy	 0.8004929481035191 	train_accuracy	 0.8428887547777107
valid_loss	 0.43342676758766174 	train_loss	 0.3478969633579254
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 217
valid_auc	 0.8131920881593147 	train_auc	 0.8747300014784607
valid_accuracy	 0.798804144415537 	train_accuracy	 0.8429606000517286
valid_loss	 0.4296231269836426 	train_loss	 0.3453843593597412
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 218
valid_auc	 0.8130612816604812 	train_auc	 0.8742906176025482
valid_accuracy	 0.7992605778447214 	train_accuracy	 0.8430468143805501
valid_loss	 0.431230366230011 	train_loss	 0.34566688537597656
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 219
valid_auc	 0.8134787289025471 	train_auc	 0.8751727466894631
valid_accuracy	 0.8002190880460085 	train_accuracy	 0.8438514814495502
valid_loss	 0.431072860956192 	train_loss	 0.34474098682403564
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 220
valid_auc	 0.8127556697918434 	train_auc	 0.8744963167354762
valid_accuracy	 0.7997626546168242 	train_accuracy	 0.8431042905997643
valid_loss	 0.4319477379322052 	train_loss	 0.34543630480766296
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 221
valid_auc	 0.8134350187226154 	train_auc	 0.8754200653847954
valid_accuracy	 0.8004929481035191 	train_accuracy	 0.843520993189068
valid_loss	 0.431600958108902 	train_loss	 0.3444160223007202
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 222
valid_auc	 0.8136313109540197 	train_auc	 0.8758910454431255
valid_accuracy	 0.7999908713314163 	train_accuracy	 0.8438514814495502
valid_loss	 0.43194693326950073 	train_loss	 0.3440549373626709
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 223
valid_auc	 0.8127572192968068 	train_auc	 0.8758508490439108
valid_accuracy	 0.7996257245880688 	train_accuracy	 0.843722159956318
valid_loss	 0.43137457966804504 	train_loss	 0.3437905013561249
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 224
valid_auc	 0.812836738948854 	train_auc	 0.8762562766380372
valid_accuracy	 0.8004473047606007 	train_accuracy	 0.8443543983676753
valid_loss	 0.43177568912506104 	train_loss	 0.34354323148727417
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 225
valid_auc	 0.8132519768207254 	train_auc	 0.8764088049489875
valid_accuracy	 0.7987128577297001 	train_accuracy	 0.8438802195591574
valid_loss	 0.4313543736934662 	train_loss	 0.3432108759880066
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 226
valid_auc	 0.8131810707666104 	train_auc	 0.8770922466149031
valid_accuracy	 0.8006298781322744 	train_accuracy	 0.8442825530936575
valid_loss	 0.43116068840026855 	train_loss	 0.34252434968948364
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 227
valid_auc	 0.8132020391626715 	train_auc	 0.8765402730167113
valid_accuracy	 0.8011775982472956 	train_accuracy	 0.8442969221484611
valid_loss	 0.4350586235523224 	train_loss	 0.34435757994651794
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 228
valid_auc	 0.8124283707453746 	train_auc	 0.8776953720294629
valid_accuracy	 0.798073850928842 	train_accuracy	 0.844569934189729
valid_loss	 0.43051111698150635 	train_loss	 0.3418678641319275
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 229
valid_auc	 0.8127202432772282 	train_auc	 0.8760438566720594
valid_accuracy	 0.799853941302661 	train_accuracy	 0.8445124579705147
valid_loss	 0.4358130693435669 	train_loss	 0.3442405164241791
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 230
valid_auc	 0.8131898905724276 	train_auc	 0.8780310536045133
valid_accuracy	 0.8013601716189693 	train_accuracy	 0.8454033393683363
valid_loss	 0.4323810338973999 	train_loss	 0.34144318103790283
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 231
valid_auc	 0.8124770416978502 	train_auc	 0.8776414669679569
valid_accuracy	 0.7978912775571683 	train_accuracy	 0.8445555651349255
valid_loss	 0.4319804608821869 	train_loss	 0.3418833911418915
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 232
valid_auc	 0.8126815999196095 	train_auc	 0.8782003549101999
valid_accuracy	 0.7995800812451503 	train_accuracy	 0.8453314940943185
valid_loss	 0.4320177137851715 	train_loss	 0.34094327688217163
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 233
valid_auc	 0.8123382755746619 	train_auc	 0.8786552178291189
valid_accuracy	 0.7977087041854946 	train_accuracy	 0.845317125039515
valid_loss	 0.4314073324203491 	train_loss	 0.3406679928302765
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 234
valid_auc	 0.8141594034554362 	train_auc	 0.8782436952508157
valid_accuracy	 0.8011319549043772 	train_accuracy	 0.8450728511078541
valid_loss	 0.43500038981437683 	train_loss	 0.34207242727279663
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 235
valid_auc	 0.8121157242420369 	train_auc	 0.8788282601433798
valid_accuracy	 0.7989867177872108 	train_accuracy	 0.8452883869299077
valid_loss	 0.431970477104187 	train_loss	 0.34015730023384094
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 236
valid_auc	 0.8135550199282836 	train_auc	 0.8786456819008959
valid_accuracy	 0.8002190880460085 	train_accuracy	 0.8461361611633187
valid_loss	 0.4339888393878937 	train_loss	 0.3407214879989624
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 237
valid_auc	 0.8142116035085694 	train_auc	 0.8795137342871899
valid_accuracy	 0.8005385914464376 	train_accuracy	 0.8466390780814438
valid_loss	 0.4325527846813202 	train_loss	 0.3395649194717407
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 238
valid_auc	 0.8124749619440401 	train_auc	 0.8799735305118992
valid_accuracy	 0.7989410744442923 	train_accuracy	 0.8466103399718367
valid_loss	 0.4317423403263092 	train_loss	 0.33880966901779175
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 239
valid_auc	 0.8137968546439676 	train_auc	 0.8799902483927426
valid_accuracy	 0.8012232415902141 	train_accuracy	 0.8465097565882116
valid_loss	 0.43543410301208496 	train_loss	 0.3401167392730713
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 240
valid_auc	 0.8120746476313772 	train_auc	 0.8801392500269248
valid_accuracy	 0.7953808936966543 	train_accuracy	 0.8461505302181223
valid_loss	 0.43269604444503784 	train_loss	 0.33978110551834106
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 241
valid_auc	 0.8133285152959234 	train_auc	 0.880736088171059
valid_accuracy	 0.8018622483910721 	train_accuracy	 0.8463373279305687
valid_loss	 0.4353996515274048 	train_loss	 0.33965080976486206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 242
valid_auc	 0.8130343509107213 	train_auc	 0.8809210148777564
valid_accuracy	 0.7999452279884979 	train_accuracy	 0.8473718998764261
valid_loss	 0.4338884651660919 	train_loss	 0.3379063308238983
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 243
valid_auc	 0.812382810586133 	train_auc	 0.8805947087882635
valid_accuracy	 0.7991692911588845 	train_accuracy	 0.8470988878351582
valid_loss	 0.43372875452041626 	train_loss	 0.3380461037158966
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 244
valid_auc	 0.8133793425937091 	train_auc	 0.8809848079840239
valid_accuracy	 0.8020448217627459 	train_accuracy	 0.8471276259447653
valid_loss	 0.4361741244792938 	train_loss	 0.3391614258289337
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 245
valid_auc	 0.8122919907419965 	train_auc	 0.8815081517519889
valid_accuracy	 0.797754347528413 	train_accuracy	 0.8475155904244619
valid_loss	 0.43363484740257263 	train_loss	 0.33697161078453064
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 246
valid_auc	 0.8127092494511394 	train_auc	 0.881656645113603
valid_accuracy	 0.800264731388927 	train_accuracy	 0.8482627812742478
valid_loss	 0.43516719341278076 	train_loss	 0.33733898401260376
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 247
valid_auc	 0.8126533140894636 	train_auc	 0.8824897626403239
valid_accuracy	 0.7980282075859236 	train_accuracy	 0.8483489956030692
valid_loss	 0.4324951767921448 	train_loss	 0.3358844518661499
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 248
valid_auc	 0.812393839762145 	train_auc	 0.8822202036520803
valid_accuracy	 0.800264731388927 	train_accuracy	 0.8482053050550334
valid_loss	 0.43580272793769836 	train_loss	 0.3365052044391632
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 249
valid_auc	 0.8128024436317784 	train_auc	 0.8822562218058374
valid_accuracy	 0.7992605778447214 	train_accuracy	 0.8482053050550334
valid_loss	 0.43459880352020264 	train_loss	 0.33603158593177795
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 250
valid_auc	 0.8123783682791282 	train_auc	 0.8828488063821938
valid_accuracy	 0.7980282075859236 	train_accuracy	 0.8483777337126763
valid_loss	 0.4339779317378998 	train_loss	 0.33525919914245605
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 251
valid_auc	 0.8125682150412179 	train_auc	 0.8832157344726298
valid_accuracy	 0.7995800812451503 	train_accuracy	 0.84899560306923
valid_loss	 0.43486908078193665 	train_loss	 0.3349020779132843
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 252
valid_auc	 0.8116265343310087 	train_auc	 0.8832876078879714
valid_accuracy	 0.798073850928842 	train_accuracy	 0.8491536626720694
valid_loss	 0.4345152974128723 	train_loss	 0.334702730178833
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 253
valid_auc	 0.812589377861856 	train_auc	 0.8830548515078938
valid_accuracy	 0.798804144415537 	train_accuracy	 0.8487800672471765
valid_loss	 0.43614158034324646 	train_loss	 0.3350415527820587
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 254
valid_auc	 0.811793586284343 	train_auc	 0.8836792049568651
valid_accuracy	 0.7989410744442923 	train_accuracy	 0.8491824007816766
valid_loss	 0.4351610541343689 	train_loss	 0.33414116501808167
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 255
valid_auc	 0.8117310758369677 	train_auc	 0.8847173688230715
valid_accuracy	 0.7985302843580264 	train_accuracy	 0.8492829841653016
valid_loss	 0.4338111877441406 	train_loss	 0.3330056667327881
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 256
valid_auc	 0.811648015300955 	train_auc	 0.8844360399568129
valid_accuracy	 0.7984389976721895 	train_accuracy	 0.8496996867546053
valid_loss	 0.4344017803668976 	train_loss	 0.33327969908714294
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 257
valid_auc	 0.8132968240898508 	train_auc	 0.8845002605019386
valid_accuracy	 0.8019078917339906 	train_accuracy	 0.8490099721240337
valid_loss	 0.43904176354408264 	train_loss	 0.3354750871658325
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 258
valid_auc	 0.8114428384555411 	train_auc	 0.8848092559300513
valid_accuracy	 0.797024054041718 	train_accuracy	 0.8501882346179268
valid_loss	 0.4343079924583435 	train_loss	 0.33296483755111694
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 259
valid_auc	 0.8119921880440575 	train_auc	 0.8849295273042462
valid_accuracy	 0.7988497877584554 	train_accuracy	 0.8507342587004627
valid_loss	 0.4357391595840454 	train_loss	 0.33264610171318054
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 260
valid_auc	 0.8124619767389494 	train_auc	 0.8856222409640757
valid_accuracy	 0.7996713679309873 	train_accuracy	 0.850590568152427
valid_loss	 0.4361085891723633 	train_loss	 0.33199965953826904
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 261
valid_auc	 0.8119805461360449 	train_auc	 0.8864410270415153
valid_accuracy	 0.8000821580172531 	train_accuracy	 0.850791734919677
valid_loss	 0.4355376362800598 	train_loss	 0.3314073085784912
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 262
valid_auc	 0.8122781158971739 	train_auc	 0.8855281903306116
valid_accuracy	 0.7976174174996576 	train_accuracy	 0.8502600798919447
valid_loss	 0.4359816908836365 	train_loss	 0.33186259865760803
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 263
valid_auc	 0.8125416377906891 	train_auc	 0.8858439402724865
valid_accuracy	 0.7981194942717604 	train_accuracy	 0.8508204730292841
valid_loss	 0.43797817826271057 	train_loss	 0.33163344860076904
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 264
valid_auc	 0.8117417515137485 	train_auc	 0.8868983229326171
valid_accuracy	 0.800903738189785 	train_accuracy	 0.8515389257694629
valid_loss	 0.43620139360427856 	train_loss	 0.33061137795448303
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 265
valid_auc	 0.811277459731901 	train_auc	 0.8868041498238355
valid_accuracy	 0.795974257154594 	train_accuracy	 0.8513090208926057
valid_loss	 0.4358466863632202 	train_loss	 0.33048489689826965
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 266
valid_auc	 0.8118434885924737 	train_auc	 0.8879123138454017
valid_accuracy	 0.7991692911588845 	train_accuracy	 0.8518981521395522
valid_loss	 0.4355127811431885 	train_loss	 0.329052597284317
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 267
valid_auc	 0.8116216560416188 	train_auc	 0.8879576958495607
valid_accuracy	 0.798073850928842 	train_accuracy	 0.8524010690576774
valid_loss	 0.4355556070804596 	train_loss	 0.32891276478767395
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 268
valid_auc	 0.8107749841414353 	train_auc	 0.8879595017481178
valid_accuracy	 0.7978912775571683 	train_accuracy	 0.8526309739345346
valid_loss	 0.43582576513290405 	train_loss	 0.32882699370384216
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 269
valid_auc	 0.8120077302269204 	train_auc	 0.888019868607377
valid_accuracy	 0.7997170112739057 	train_accuracy	 0.8522142713452309
valid_loss	 0.43760591745376587 	train_loss	 0.32920289039611816
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 270
valid_auc	 0.8116596984505446 	train_auc	 0.8886260228365394
valid_accuracy	 0.8008124515039482 	train_accuracy	 0.8524298071672846
valid_loss	 0.4385340213775635 	train_loss	 0.3289780914783478
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 271
valid_auc	 0.8104587260542861 	train_auc	 0.8889324328106991
valid_accuracy	 0.797024054041718 	train_accuracy	 0.8533781647843205
valid_loss	 0.43554022908210754 	train_loss	 0.32776495814323425
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 272
valid_auc	 0.8114963935890604 	train_auc	 0.8889205980207657
valid_accuracy	 0.7981651376146789 	train_accuracy	 0.8531626289622669
valid_loss	 0.4379989206790924 	train_loss	 0.32755306363105774
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 273
valid_auc	 0.8120866960635056 	train_auc	 0.8884908125354883
valid_accuracy	 0.7997626546168242 	train_accuracy	 0.8533494266747134
valid_loss	 0.4399609863758087 	train_loss	 0.32872721552848816
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 274
valid_auc	 0.8109840966116227 	train_auc	 0.8895806377153836
valid_accuracy	 0.7978912775571683 	train_accuracy	 0.853866712647642
valid_loss	 0.4373909831047058 	train_loss	 0.32672417163848877
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 275
valid_auc	 0.8120714072217584 	train_auc	 0.8893500075068184
valid_accuracy	 0.7989867177872108 	train_accuracy	 0.8536511768255884
valid_loss	 0.43970248103141785 	train_loss	 0.3271782696247101
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 276
valid_auc	 0.8112707727047784 	train_auc	 0.8895839029073492
valid_accuracy	 0.7993975078734766 	train_accuracy	 0.8538379745380349
valid_loss	 0.4399649202823639 	train_loss	 0.32717180252075195
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 277
valid_auc	 0.811231440023659 	train_auc	 0.8901165750078741
valid_accuracy	 0.7977999908713315 	train_accuracy	 0.8545133201138029
valid_loss	 0.4380843937397003 	train_loss	 0.3259545862674713
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 278
valid_auc	 0.8117231574541899 	train_auc	 0.8903545567973743
valid_accuracy	 0.7968871240129627 	train_accuracy	 0.8540966175244993
valid_loss	 0.43858999013900757 	train_loss	 0.32577425241470337
===== 设备: cuda =====
训练总段数: 19
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 453
实际用段数: 453
实际元素数: 69594
最后一次所用q.shpe: torch.Size([21, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 145
实际用段数: 145
实际元素数: 21909
最后一次所用q.shpe: torch.Size([1, 200])
===== 数据来自Valid_eval=====
epoch 279
valid_auc	 0.810963428689908 	train_auc	 0.8917142826716489
valid_accuracy	 0.7997170112739057 	train_accuracy	 0.8547719631002673
valid_loss	 0.4371611475944519 	train_loss	 0.32448631525039673


Start testing ......................
 Best epoch: 237
@ 使用预设Q-matrix:  qm_fold2_trained_0.99.json
===== 设备: cuda =====
训练总段数: 138
实际用段数: 138
实际元素数: 19795
最后一次所用q.shpe: torch.Size([18, 200])
===== 数据来自Test=====

test_auc	 0.8243251099929108
test_accuracy	 0.8156605203334175
test_loss	 0.40134966373443604
=====第 3 次实验=====


train_data length:  448
valid_data length:  148




===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.6731946991179798 	train_auc	 0.6918138549954553
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5786799192428589 	train_loss	 0.5434918403625488
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.6705144386259279 	train_auc	 0.6898777289769487
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446555614471436 	train_loss	 0.5202780961990356
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.6699286293646952 	train_auc	 0.6891510108203158
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.552520751953125 	train_loss	 0.5238531231880188
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.6721229950764509 	train_auc	 0.690247879409118
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5475664138793945 	train_loss	 0.5210261344909668
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.6694948678105644 	train_auc	 0.6881983267460878
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5479927659034729 	train_loss	 0.5212140679359436
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.6710049566693425 	train_auc	 0.6889084654446157
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5464897155761719 	train_loss	 0.520542323589325
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.6704273313750969 	train_auc	 0.6880418843960779
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5469579696655273 	train_loss	 0.520721971988678
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.676309563298887 	train_auc	 0.6930586379235191
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5457325577735901 	train_loss	 0.5202729105949402
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.6729351577174215 	train_auc	 0.69115342472327
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5465244054794312 	train_loss	 0.5205332636833191
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.663700506145577 	train_auc	 0.6842989926271517
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5454362630844116 	train_loss	 0.5201861262321472
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.6653805818766616 	train_auc	 0.684285564216609
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446866154670715 	train_loss	 0.5200908780097961
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.6631970960933935 	train_auc	 0.6824955484975301
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5465209484100342 	train_loss	 0.5205199718475342
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.6699643098782233 	train_auc	 0.6880575094253139
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446251630783081 	train_loss	 0.5200750827789307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.6701890524633543 	train_auc	 0.6882676934123377
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5457261204719543 	train_loss	 0.5202406048774719
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.6603253092965853 	train_auc	 0.680744008110859
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5453441143035889 	train_loss	 0.5201401710510254
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.6591107136436168 	train_auc	 0.6799050514629673
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5444798469543457 	train_loss	 0.5200622081756592
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.666256825883446 	train_auc	 0.684579105130435
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5445744395256042 	train_loss	 0.5200478434562683
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.6547388927375262 	train_auc	 0.6748225354426867
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5454199910163879 	train_loss	 0.5201482772827148
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.6577439515934178 	train_auc	 0.677897404477305
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5452629327774048 	train_loss	 0.5201056003570557
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.6554129735432355 	train_auc	 0.6759372719034631
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5455507040023804 	train_loss	 0.5201666355133057
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.6643238780066683 	train_auc	 0.6834803543766526
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.545220136642456 	train_loss	 0.5200914740562439
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.6656451478260124 	train_auc	 0.684253292671851
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5448793768882751 	train_loss	 0.5200269818305969
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.6781521371203321 	train_auc	 0.6940208903750253
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5453194975852966 	train_loss	 0.5201040506362915
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.6682822051111248 	train_auc	 0.6844062942602147
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5449922680854797 	train_loss	 0.5200275778770447
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.6686906121929465 	train_auc	 0.6863046571872297
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5456826686859131 	train_loss	 0.52016282081604
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.669125317616198 	train_auc	 0.6870996007319352
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5451451539993286 	train_loss	 0.5200272798538208
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.682573683538544 	train_auc	 0.6993245923560406
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5438673496246338 	train_loss	 0.5201390385627747
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.6744287260406312 	train_auc	 0.6924882664135923
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5450331568717957 	train_loss	 0.520004391670227
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.6733956528101216 	train_auc	 0.6917005715803664
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5452226400375366 	train_loss	 0.5200339555740356
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.6806985490583888 	train_auc	 0.6977574032257662
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5451090931892395 	train_loss	 0.5200082063674927
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.6720717831117624 	train_auc	 0.6881442778168323
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5452127456665039 	train_loss	 0.5200366377830505
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

epoch 32
valid_auc	 0.6819297839370544 	train_auc	 0.6980413666477133
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5438439846038818 	train_loss	 0.5201162099838257
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.6764066574762827 	train_auc	 0.6934533756412771
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5453391671180725 	train_loss	 0.520039975643158
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.6720866419855254 	train_auc	 0.6900713204850097
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.545041561126709 	train_loss	 0.5200001001358032
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.664754502750248 	train_auc	 0.6824203224453168
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446067452430725 	train_loss	 0.5199562311172485
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.6860947166445555 	train_auc	 0.7007588828001492
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.545836865901947 	train_loss	 0.5201934576034546
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.679185956403081 	train_auc	 0.6943465967136191
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5440136194229126 	train_loss	 0.5199967622756958
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.6713225544986923 	train_auc	 0.6863258356122731
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5451732873916626 	train_loss	 0.5200012922286987
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.6664669752346264 	train_auc	 0.6811768149102644
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5448562502861023 	train_loss	 0.5199447870254517
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.6726177124896662 	train_auc	 0.6859188166215359
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5453233122825623 	train_loss	 0.520031213760376
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.6798165118429293 	train_auc	 0.6922013726476204
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446587800979614 	train_loss	 0.5199166536331177
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.6755894759384306 	train_auc	 0.688765062181503
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5452704429626465 	train_loss	 0.5200066566467285
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.6719678388183528 	train_auc	 0.6853031025788521
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5455487966537476 	train_loss	 0.5200756192207336
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.6681384770168717 	train_auc	 0.6820355964650419
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5447939038276672 	train_loss	 0.5199012756347656
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.6735564157638352 	train_auc	 0.6877175087891408
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5448142886161804 	train_loss	 0.5198782682418823
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.6777262769376431 	train_auc	 0.6918180828679493
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5454466938972473 	train_loss	 0.5199834108352661
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.6729286580198836 	train_auc	 0.6874358083922613
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5454103350639343 	train_loss	 0.5199766159057617
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.6751658086971718 	train_auc	 0.6900256361547386
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5450965166091919 	train_loss	 0.5198841094970703
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.6734016777471438 	train_auc	 0.6893662651293269
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5450108051300049 	train_loss	 0.519855260848999
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.686020993118742 	train_auc	 0.7013958703201376
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446124076843262 	train_loss	 0.5198380351066589
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.6805131042097636 	train_auc	 0.6959239622952262
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5440540313720703 	train_loss	 0.5199117660522461
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.6849629101824883 	train_auc	 0.7001206374653073
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.545459508895874 	train_loss	 0.5199911594390869
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.6843778074101187 	train_auc	 0.6994259551759083
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.544570803642273 	train_loss	 0.519820511341095
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.6911182028777156 	train_auc	 0.7038184191237868
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.544448733329773 	train_loss	 0.5197866559028625
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.6905392719920517 	train_auc	 0.7036438094220757
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5448942184448242 	train_loss	 0.5198129415512085
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.693091324537189 	train_auc	 0.7078404025607532
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5445427298545837 	train_loss	 0.519726574420929
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.6958482927640111 	train_auc	 0.7089113075593085
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5441657900810242 	train_loss	 0.5197064876556396
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.6939309837247009 	train_auc	 0.707100928520878
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5444701313972473 	train_loss	 0.5197173953056335
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.6927743823295041 	train_auc	 0.7065457503987542
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5448857545852661 	train_loss	 0.5197124481201172
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.6929762290235685 	train_auc	 0.7066762454345894
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5447055697441101 	train_loss	 0.5196630954742432
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.6877934888969058 	train_auc	 0.7022895966017582
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5444110631942749 	train_loss	 0.5195932388305664
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.6942184794765832 	train_auc	 0.7076954608833037
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446393489837646 	train_loss	 0.5196033716201782
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.6969430792096661 	train_auc	 0.7101512291501515
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.544590175151825 	train_loss	 0.519551157951355
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.6951035348124648 	train_auc	 0.7085779586282899
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.544094443321228 	train_loss	 0.5195241570472717
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.6956821096277419 	train_auc	 0.7088070905674337
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5441099405288696 	train_loss	 0.5194774270057678
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.6974966330153776 	train_auc	 0.7099737255628172
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5440601110458374 	train_loss	 0.5194714069366455
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.700088373278873 	train_auc	 0.7123895959685539
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5438724160194397 	train_loss	 0.5194882154464722
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.7007663143397289 	train_auc	 0.713141389041896
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5444692969322205 	train_loss	 0.5195034742355347
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.6984743401266853 	train_auc	 0.7110807901342389
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5437532663345337 	train_loss	 0.5194944143295288
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.6994343850164225 	train_auc	 0.7120810263807746
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5457201600074768 	train_loss	 0.5198359489440918
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.6968048447728104 	train_auc	 0.7100320388229684
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5431991219520569 	train_loss	 0.520014762878418
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.7012262329375168 	train_auc	 0.7139377857143204
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5456103086471558 	train_loss	 0.5198017954826355
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.7007545922765168 	train_auc	 0.7133171849437432
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5435938835144043 	train_loss	 0.5194977521896362
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.6985132252736952 	train_auc	 0.7114731521965101
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5438234806060791 	train_loss	 0.5194018483161926
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.6950120021153972 	train_auc	 0.7086686788501191
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5433419942855835 	train_loss	 0.5194799304008484
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.6971172654517734 	train_auc	 0.7098738256363117
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5450904965400696 	train_loss	 0.5194942355155945
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.6974435389643585 	train_auc	 0.7108857461495015
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5441374182701111 	train_loss	 0.5192458033561707
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.6979275799178788 	train_auc	 0.711115191891316
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5437032580375671 	train_loss	 0.5192098617553711
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.7021406556024482 	train_auc	 0.7139046879961414
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5458056926727295 	train_loss	 0.5196288228034973
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.7046328826706816 	train_auc	 0.7160063208347436
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5437696576118469 	train_loss	 0.5191287398338318
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.7060156961478441 	train_auc	 0.7174398645326632
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5433443188667297 	train_loss	 0.5191749334335327
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.7054751473891195 	train_auc	 0.7166301221321426
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5431757569313049 	train_loss	 0.5191611647605896
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.7081571091063532 	train_auc	 0.7182698927784322
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5438387393951416 	train_loss	 0.5190081000328064
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.7063341982829381 	train_auc	 0.7172210880816453
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5444348454475403 	train_loss	 0.5190436244010925
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.7081881720086738 	train_auc	 0.7187661378475781
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.544188916683197 	train_loss	 0.5189157724380493
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.7063952502245081 	train_auc	 0.7175196973643295
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5424671769142151 	train_loss	 0.519267737865448
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.7080333774728735 	train_auc	 0.7189957307250847
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5443376302719116 	train_loss	 0.5188744068145752
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.7101799506260367 	train_auc	 0.7207692770123061
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5429121851921082 	train_loss	 0.5188277959823608
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.7096842215207699 	train_auc	 0.7206179765990005
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446009635925293 	train_loss	 0.518919050693512
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.7079156990359705 	train_auc	 0.7191776783311508
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5425027012825012 	train_loss	 0.5205809473991394
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.7072511982192411 	train_auc	 0.7183533024397077
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5434294939041138 	train_loss	 0.5186027884483337
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.7076810316952946 	train_auc	 0.7190763545738561
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5438932776451111 	train_loss	 0.5185936093330383
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.7080615974640101 	train_auc	 0.7191340148379939
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5422446131706238 	train_loss	 0.5187561511993408
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.7103690466091049 	train_auc	 0.7209885157037723
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5422487854957581 	train_loss	 0.518513560295105
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.7102468692511235 	train_auc	 0.7208637088296219
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5424976348876953 	train_loss	 0.5182682871818542
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.7105522759086563 	train_auc	 0.7213493477591312
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5427521467208862 	train_loss	 0.5180994272232056
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.7115338319712887 	train_auc	 0.7220356654495459
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.545714259147644 	train_loss	 0.5189546942710876
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.7098739392140374 	train_auc	 0.7208429724626972
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5417640209197998 	train_loss	 0.519809365272522
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.7108301577600934 	train_auc	 0.7219171691340782
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5415871143341064 	train_loss	 0.5185095071792603
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.712138569482134 	train_auc	 0.7228903962154939
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5433642864227295 	train_loss	 0.5178591012954712
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.712822015504209 	train_auc	 0.7233438013607325
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5429355502128601 	train_loss	 0.5175721645355225
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.7119185745021613 	train_auc	 0.722503708643007
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5409669876098633 	train_loss	 0.5177123546600342
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.7126933893158877 	train_auc	 0.7232849542454156
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5410491824150085 	train_loss	 0.5170392990112305
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.712773731229368 	train_auc	 0.7232445557323263
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5406075119972229 	train_loss	 0.5181636810302734
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.7130410270516847 	train_auc	 0.7233172283943454
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5446386933326721 	train_loss	 0.5178630352020264
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.7135840004801863 	train_auc	 0.7238647743407302
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.543403685092926 	train_loss	 0.5175234079360962
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.711773116923172 	train_auc	 0.7223573262076532
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5455746054649353 	train_loss	 0.5186733603477478
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.710910957478357 	train_auc	 0.7217579761278798
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5408949851989746 	train_loss	 0.5177763104438782
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.7111948303553508 	train_auc	 0.7218031285561143
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5404130220413208 	train_loss	 0.5170537233352661
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.7119843683969784 	train_auc	 0.7223327102761781
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.53985995054245 	train_loss	 0.5174224972724915
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.7114650143041387 	train_auc	 0.7219391437845698
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.541187584400177 	train_loss	 0.5203642249107361
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.7114473916459444 	train_auc	 0.7217759813699026
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5430228114128113 	train_loss	 0.5172403454780579
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.7117410084173343 	train_auc	 0.7217160463619253
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5400431752204895 	train_loss	 0.5165138244628906
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.7117432748336063 	train_auc	 0.7215248246499648
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5395408272743225 	train_loss	 0.5176039934158325
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.7114412706264368 	train_auc	 0.7210961252801198
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5391006469726562 	train_loss	 0.5162410736083984
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.7120903530302239 	train_auc	 0.721356098422804
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5394147634506226 	train_loss	 0.514636754989624
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.7111941860375081 	train_auc	 0.7204483753702025
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5376275777816772 	train_loss	 0.5146836042404175
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.710628893212852 	train_auc	 0.7197941046147505
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5436410903930664 	train_loss	 0.5156617164611816
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.7099665570779982 	train_auc	 0.7189984794281443
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5402702689170837 	train_loss	 0.513637900352478
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.7104203546562787 	train_auc	 0.7195012883116554
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5415250062942505 	train_loss	 0.5234457850456238
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.7087596932391446 	train_auc	 0.7176263746472662
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5384530425071716 	train_loss	 0.5119455456733704
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.7078179888002865 	train_auc	 0.7164161217317278
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.534464418888092 	train_loss	 0.5136411190032959
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.7067566786229074 	train_auc	 0.7153017804539825
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5422618389129639 	train_loss	 0.5255042910575867
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.7055722980856243 	train_auc	 0.713972892550842
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5355092883110046 	train_loss	 0.516623318195343
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.7056257255993865 	train_auc	 0.7143772578907808
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5318655371665955 	train_loss	 0.5064632296562195
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.7056512044137354 	train_auc	 0.714240027816302
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5323666930198669 	train_loss	 0.5057141780853271
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.7049169872760226 	train_auc	 0.7129857507298487
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5331122875213623 	train_loss	 0.515105128288269
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.7041241033031407 	train_auc	 0.7122168078848345
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5264819860458374 	train_loss	 0.503558874130249
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.7031980150941064 	train_auc	 0.7111277752481939
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5243748426437378 	train_loss	 0.5035784840583801
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.7029705313321876 	train_auc	 0.7110791573186837
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5332052111625671 	train_loss	 0.505305290222168
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.7034359774988383 	train_auc	 0.7111630461475225
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5382654666900635 	train_loss	 0.5222919583320618
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.7027064118837982 	train_auc	 0.7104009386017562
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5388293266296387 	train_loss	 0.5234585404396057
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.7024712302192303 	train_auc	 0.7102761825089509
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5209284424781799 	train_loss	 0.5001455545425415
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.7034106851975492 	train_auc	 0.711368552391419
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5213740468025208 	train_loss	 0.4967535734176636
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.7034684307712411 	train_auc	 0.7113608857104072
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5199342966079712 	train_loss	 0.495738685131073
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.7025216396125706 	train_auc	 0.7100467419754795
valid_accuracy	 0.7662886969042476 	train_accuracy	 0.7852379823365538
valid_loss	 0.519702672958374 	train_loss	 0.5015036463737488
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.7034445910110539 	train_auc	 0.7109806336968367
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.52620530128479 	train_loss	 0.49801909923553467
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.7059177315761693 	train_auc	 0.7135909966539873
valid_accuracy	 0.7662437005039597 	train_accuracy	 0.7852379823365538
valid_loss	 0.5186694860458374 	train_loss	 0.49304237961769104
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.7049875626874633 	train_auc	 0.712351681835113
valid_accuracy	 0.7662886969042476 	train_accuracy	 0.7852379823365538
valid_loss	 0.5208420157432556 	train_loss	 0.5028749108314514
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.7043661802990098 	train_auc	 0.7115521927089856
valid_accuracy	 0.7689884809215263 	train_accuracy	 0.7871347282318771
valid_loss	 0.527585506439209 	train_loss	 0.511870801448822
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.7060785567009027 	train_auc	 0.7134054012546375
valid_accuracy	 0.7691684665226782 	train_accuracy	 0.7860974453203723
valid_loss	 0.5086606740951538 	train_loss	 0.4897751212120056
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.7085831671059237 	train_auc	 0.7159086155738028
valid_accuracy	 0.7670086393088553 	train_accuracy	 0.7856528955011558
valid_loss	 0.5091767907142639 	train_loss	 0.4840517044067383
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.7113666823582553 	train_auc	 0.7187317256738148
valid_accuracy	 0.7689884809215263 	train_accuracy	 0.7861863552842155
valid_loss	 0.5078843832015991 	train_loss	 0.48937857151031494
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.7120110623721715 	train_auc	 0.7193341701604199
valid_accuracy	 0.7690334773218143 	train_accuracy	 0.785667713828463
valid_loss	 0.49871522188186646 	train_loss	 0.47820761799812317
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.7129697451513811 	train_auc	 0.7202848626944631
valid_accuracy	 0.769528437724982 	train_accuracy	 0.7852676189911683
valid_loss	 0.4994734823703766 	train_loss	 0.4759358763694763
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.7126828371982324 	train_auc	 0.7199386654321123
valid_accuracy	 0.7700233981281498 	train_accuracy	 0.7849267974631023
valid_loss	 0.5064813494682312 	train_loss	 0.4875068664550781
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.7132247198079299 	train_auc	 0.7203593166098151
valid_accuracy	 0.7605741540676746 	train_accuracy	 0.7747910615849682
valid_loss	 0.5285661816596985 	train_loss	 0.510601818561554
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.7144236992310744 	train_auc	 0.7215447127080107
valid_accuracy	 0.7693934485241181 	train_accuracy	 0.78414142611582
valid_loss	 0.5040258765220642 	train_loss	 0.4842054843902588
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.7145682807638738 	train_auc	 0.7216453847713775
valid_accuracy	 0.7628689704823615 	train_accuracy	 0.7769989923537431
valid_loss	 0.5171902179718018 	train_loss	 0.4973847270011902
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.715559659847655 	train_auc	 0.7225958637633544
valid_accuracy	 0.7705633549316054 	train_accuracy	 0.7854454389188549
valid_loss	 0.4918719232082367 	train_loss	 0.46971362829208374
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.7172889072035922 	train_auc	 0.7244209426990817
valid_accuracy	 0.7696634269258459 	train_accuracy	 0.7828966866220141
valid_loss	 0.5648059248924255 	train_loss	 0.5506886839866638
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 152
valid_auc	 0.7138643296090443 	train_auc	 0.7212330181143841
valid_accuracy	 0.7701133909287257 	train_accuracy	 0.786912453322269
valid_loss	 0.5168920159339905 	train_loss	 0.49891987442970276
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.7122941609373716 	train_auc	 0.719532154254825
valid_accuracy	 0.7632739380849533 	train_accuracy	 0.775946891114931
valid_loss	 0.5165305137634277 	train_loss	 0.4974212050437927
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.7126717594528633 	train_auc	 0.7198778977402852
valid_accuracy	 0.7682685385169187 	train_accuracy	 0.7814444905459071
valid_loss	 0.49708688259124756 	train_loss	 0.4753369688987732
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.7147145070027459 	train_auc	 0.7219523599551319
valid_accuracy	 0.7697534197264219 	train_accuracy	 0.7856232588465414
valid_loss	 0.49291446805000305 	train_loss	 0.46992531418800354
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.7153924311078689 	train_auc	 0.7226428729658965
valid_accuracy	 0.7703833693304536 	train_accuracy	 0.7852231640092466
valid_loss	 0.49301260709762573 	train_loss	 0.47098013758659363
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.716402902346679 	train_auc	 0.7236376612855719
valid_accuracy	 0.7052285817134629 	train_accuracy	 0.7280392389307095
valid_loss	 0.569063663482666 	train_loss	 0.5492343306541443
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.716751930452558 	train_auc	 0.7240765390598785
valid_accuracy	 0.7704733621310296 	train_accuracy	 0.7856528955011558
valid_loss	 0.49771198630332947 	train_loss	 0.4739614725112915
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.7161076691287709 	train_auc	 0.7235534775343062
valid_accuracy	 0.7688084953203743 	train_accuracy	 0.7825114101120265
valid_loss	 0.5033606886863708 	train_loss	 0.48252245783805847
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.7160461311228634 	train_auc	 0.7234839337843917
valid_accuracy	 0.7505399568034558 	train_accuracy	 0.7652184221445083
valid_loss	 0.5194998979568481 	train_loss	 0.49786385893821716
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.7172550013900875 	train_auc	 0.7246546683968209
valid_accuracy	 0.7702933765298776 	train_accuracy	 0.7844377926619643
valid_loss	 0.4918884336948395 	train_loss	 0.46911531686782837
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.7178947977042616 	train_auc	 0.7253420935111828
valid_accuracy	 0.7652987760979122 	train_accuracy	 0.7788512832671448
valid_loss	 0.4994550347328186 	train_loss	 0.4766687750816345
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.7190172106904085 	train_auc	 0.7265728165171059
valid_accuracy	 0.6942044636429086 	train_accuracy	 0.7166884002133839
valid_loss	 0.5718178749084473 	train_loss	 0.5496548414230347
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.7193548671515516 	train_auc	 0.7269020586696072
valid_accuracy	 0.7717782577393808 	train_accuracy	 0.7863938118665165
valid_loss	 0.4919494688510895 	train_loss	 0.4694640338420868
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.7192395907767821 	train_auc	 0.7268735032776357
valid_accuracy	 0.759764218862491 	train_accuracy	 0.7744798767115169
valid_loss	 0.5044770836830139 	train_loss	 0.4814372658729553
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.7193879873494409 	train_auc	 0.7270302027895852
valid_accuracy	 0.7709233261339092 	train_accuracy	 0.7836672396419893
valid_loss	 0.4918728470802307 	train_loss	 0.4681849479675293
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.7203902294059769 	train_auc	 0.7282452291515551
valid_accuracy	 0.7414056875449964 	train_accuracy	 0.7606691956611937
valid_loss	 0.520971953868866 	train_loss	 0.4978485107421875
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.7209693694123442 	train_auc	 0.7288361299967694
valid_accuracy	 0.7649388048956084 	train_accuracy	 0.7786290083575366
valid_loss	 0.5009735822677612 	train_loss	 0.47779524326324463
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.7214209910049272 	train_auc	 0.7293126972947214
valid_accuracy	 0.7618790496760259 	train_accuracy	 0.7765988975164484
valid_loss	 0.5016502737998962 	train_loss	 0.4782041311264038
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

epoch 170
valid_auc	 0.7216018465018995 	train_auc	 0.7294977145679895
valid_accuracy	 0.7648038156947444 	train_accuracy	 0.7787475549759943
valid_loss	 0.49681562185287476 	train_loss	 0.4727339744567871
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.7222557952009738 	train_auc	 0.7302428839310211
valid_accuracy	 0.7648488120950324 	train_accuracy	 0.7787771916306088
valid_loss	 0.4974434971809387 	train_loss	 0.4735881984233856
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.7225429631420239 	train_auc	 0.7305277848547225
valid_accuracy	 0.7693034557235421 	train_accuracy	 0.7830152332404718
valid_loss	 0.4917619228363037 	train_loss	 0.467334121465683
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.7242720070291686 	train_auc	 0.7324821765324059
valid_accuracy	 0.7679985601151907 	train_accuracy	 0.781222215636299
valid_loss	 0.49442026019096375 	train_loss	 0.47005578875541687
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.7259090378068189 	train_auc	 0.7344029288242302
valid_accuracy	 0.7325413966882649 	train_accuracy	 0.7515559243672574
valid_loss	 0.5313042998313904 	train_loss	 0.5082624554634094
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.7240492482647644 	train_auc	 0.7323250121758367
valid_accuracy	 0.7732631389488841 	train_accuracy	 0.7874903680872503
valid_loss	 0.48838600516319275 	train_loss	 0.46371620893478394
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.7255947689529909 	train_auc	 0.7341690976575435
valid_accuracy	 0.7517998560115191 	train_accuracy	 0.7680635409874933
valid_loss	 0.5138644576072693 	train_loss	 0.4904961884021759
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.7246601067951173 	train_auc	 0.7331234010394887
valid_accuracy	 0.7729931605471563 	train_accuracy	 0.789061110781815
valid_loss	 0.48702186346054077 	train_loss	 0.4626006484031677
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.7256930274240325 	train_auc	 0.7343317704879612
valid_accuracy	 0.7552645788336934 	train_accuracy	 0.7709679331397072
valid_loss	 0.5020822882652283 	train_loss	 0.47683411836624146
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.7264662992660824 	train_auc	 0.7351397615831217
valid_accuracy	 0.7615190784737221 	train_accuracy	 0.7771916306087369
valid_loss	 0.49690061807632446 	train_loss	 0.4716653525829315
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.7276383812452415 	train_auc	 0.736499565559734
valid_accuracy	 0.765478761699064 	train_accuracy	 0.7797403829055776
valid_loss	 0.49603143334388733 	train_loss	 0.4712279140949249
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.7282531904613151 	train_auc	 0.7372232895701395
valid_accuracy	 0.7613390928725702 	train_accuracy	 0.7774731788275739
valid_loss	 0.49770328402519226 	train_loss	 0.4724203944206238
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 182
valid_auc	 0.7275921542659691 	train_auc	 0.7364290100891764
valid_accuracy	 0.7765478761699064 	train_accuracy	 0.7916839547151917
valid_loss	 0.48781317472457886 	train_loss	 0.4621785581111908
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.7302977974898847 	train_auc	 0.7398803088645884
valid_accuracy	 0.7468952483801296 	train_accuracy	 0.7647738723252919
valid_loss	 0.5187039375305176 	train_loss	 0.49539613723754883
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.7282208332713977 	train_auc	 0.7371930792271547
valid_accuracy	 0.7735781137508999 	train_accuracy	 0.7887795625629779
valid_loss	 0.4873521029949188 	train_loss	 0.46166232228279114
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.7293063788427272 	train_auc	 0.7384243588747443
valid_accuracy	 0.7710133189344852 	train_accuracy	 0.7851490723727106
valid_loss	 0.48883140087127686 	train_loss	 0.46331942081451416
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.7300440719056451 	train_auc	 0.7393523059235203
valid_accuracy	 0.7697534197264219 	train_accuracy	 0.7839191512062118
valid_loss	 0.49080508947372437 	train_loss	 0.46543073654174805
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.7296561416970235 	train_auc	 0.7388501969111106
valid_accuracy	 0.7748380129589633 	train_accuracy	 0.7898909371110189
valid_loss	 0.4856951832771301 	train_loss	 0.46000510454177856
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.7297398917127783 	train_auc	 0.7389594796676722
valid_accuracy	 0.7741630669546437 	train_accuracy	 0.789965028747555
valid_loss	 0.48563265800476074 	train_loss	 0.4598332941532135
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.7311984860113228 	train_auc	 0.7407960631822172
valid_accuracy	 0.7611141108711303 	train_accuracy	 0.7776509987552606
valid_loss	 0.4957329034805298 	train_loss	 0.47001391649246216
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.7316405558744803 	train_auc	 0.7413146299077125
valid_accuracy	 0.7631839452843773 	train_accuracy	 0.77935510639559
valid_loss	 0.49353572726249695 	train_loss	 0.46738460659980774
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.7325928067790829 	train_auc	 0.742697406583559
valid_accuracy	 0.7562994960403168 	train_accuracy	 0.7742427834746014
valid_loss	 0.4992380142211914 	train_loss	 0.47344252467155457
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.7324849570152394 	train_auc	 0.7423813981797777
valid_accuracy	 0.7702933765298776 	train_accuracy	 0.7853120739730899
valid_loss	 0.48865970969200134 	train_loss	 0.4623520076274872
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.7332181794166335 	train_auc	 0.7433810719252609
valid_accuracy	 0.7634989200863931 	train_accuracy	 0.7805553909074744
valid_loss	 0.4937126338481903 	train_loss	 0.4675258994102478
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.7333463647559044 	train_auc	 0.7435532421692825
valid_accuracy	 0.7634539236861051 	train_accuracy	 0.7807924841443897
valid_loss	 0.492391973733902 	train_loss	 0.46593502163887024
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 195
valid_auc	 0.7330966972436931 	train_auc	 0.743143844267844
valid_accuracy	 0.7758279337652988 	train_accuracy	 0.7919062296248
valid_loss	 0.4853788912296295 	train_loss	 0.45854997634887695
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.7338158463869396 	train_auc	 0.7441856157483462
valid_accuracy	 0.7662886969042476 	train_accuracy	 0.7836376029873748
valid_loss	 0.4905684292316437 	train_loss	 0.4640439748764038
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.7342708308665097 	train_auc	 0.7448332836268602
valid_accuracy	 0.763633909287257 	train_accuracy	 0.7797848378874993
valid_loss	 0.4934151768684387 	train_loss	 0.4671984314918518
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.7339177051252262 	train_auc	 0.7441221891973775
valid_accuracy	 0.7758279337652988 	train_accuracy	 0.7915505897694268
valid_loss	 0.48575925827026367 	train_loss	 0.4585880935192108
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 199
valid_auc	 0.7348335690274377 	train_auc	 0.7457543927722167
valid_accuracy	 0.7451403887688985 	train_accuracy	 0.7638847726868591
valid_loss	 0.5060365200042725 	train_loss	 0.4792901575565338
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 200
valid_auc	 0.7341720637234868 	train_auc	 0.7443222032434975
valid_accuracy	 0.7789776817854571 	train_accuracy	 0.7953144449054591
valid_loss	 0.48730114102363586 	train_loss	 0.4597335457801819
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 201
valid_auc	 0.7348433185737447 	train_auc	 0.745364582798054
valid_accuracy	 0.7747030237580994 	train_accuracy	 0.790943038349831
valid_loss	 0.48519760370254517 	train_loss	 0.4580900967121124
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 202
valid_auc	 0.7357121642291575 	train_auc	 0.7467388288589805
valid_accuracy	 0.7609791216702664 	train_accuracy	 0.7773990871910379
valid_loss	 0.495530903339386 	train_loss	 0.4692041873931885
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 203
valid_auc	 0.7351926575347235 	train_auc	 0.745661407572191
valid_accuracy	 0.7762329013678906 	train_accuracy	 0.7924545077351669
valid_loss	 0.48531341552734375 	train_loss	 0.4578624665737152
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 204
valid_auc	 0.7361017787072281 	train_auc	 0.7473967845171605
valid_accuracy	 0.7564794816414687 	train_accuracy	 0.7754578863137929
valid_loss	 0.49757444858551025 	train_loss	 0.47140753269195557
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 205
valid_auc	 0.7361295352416709 	train_auc	 0.7470066034485536
valid_accuracy	 0.7727231821454283 	train_accuracy	 0.7897131171833324
valid_loss	 0.4843711853027344 	train_loss	 0.4574897289276123
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 206
valid_auc	 0.7366609787719313 	train_auc	 0.7482651949962047
valid_accuracy	 0.7469852411807055 	train_accuracy	 0.7659148835279473
valid_loss	 0.5041126012802124 	train_loss	 0.47741246223449707
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 207
valid_auc	 0.7370230571400844 	train_auc	 0.748551334203473
valid_accuracy	 0.7612041036717062 	train_accuracy	 0.7784363701025429
valid_loss	 0.49324482679367065 	train_loss	 0.46635761857032776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 208
valid_auc	 0.7369787122471426 	train_auc	 0.7480200617250374
valid_accuracy	 0.7733081353491721 	train_accuracy	 0.7906170351490723
valid_loss	 0.4851503074169159 	train_loss	 0.45743104815483093
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 209
valid_auc	 0.7376200571849041 	train_auc	 0.7491857878645536
valid_accuracy	 0.755939524838013 	train_accuracy	 0.7751318831130342
valid_loss	 0.4959220588207245 	train_loss	 0.4691060781478882
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 210
valid_auc	 0.7374587629515659 	train_auc	 0.7482708362828018
valid_accuracy	 0.7779427645788337 	train_accuracy	 0.7957589947246755
valid_loss	 0.48490211367607117 	train_loss	 0.45683732628822327
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 211
valid_auc	 0.7375424055810134 	train_auc	 0.7495240163619942
valid_accuracy	 0.7562994960403168 	train_accuracy	 0.7744057850749807
valid_loss	 0.5010226368904114 	train_loss	 0.4754527509212494
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 212
valid_auc	 0.7374228224501361 	train_auc	 0.7485932568079559
valid_accuracy	 0.7736231101511879 	train_accuracy	 0.7906170351490723
valid_loss	 0.4836888015270233 	train_loss	 0.45632320642471313
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 213
valid_auc	 0.7382217087523966 	train_auc	 0.7501218618816607
valid_accuracy	 0.7648038156947444 	train_accuracy	 0.7821113152747318
valid_loss	 0.49212247133255005 	train_loss	 0.4656830132007599
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 214
valid_auc	 0.7383358264854311 	train_auc	 0.7499140561542952
valid_accuracy	 0.7730381569474442 	train_accuracy	 0.7904243968940786
valid_loss	 0.48379990458488464 	train_loss	 0.45634686946868896
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 215
valid_auc	 0.7388879107943076 	train_auc	 0.7502301589592948
valid_accuracy	 0.7772228221742261 	train_accuracy	 0.7956108114516034
valid_loss	 0.4825361967086792 	train_loss	 0.45438292622566223
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 216
valid_auc	 0.739376247200114 	train_auc	 0.7509800900499862
valid_accuracy	 0.7768628509719222 	train_accuracy	 0.7941437970481892
valid_loss	 0.48128628730773926 	train_loss	 0.45343971252441406
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 217
valid_auc	 0.7393454951528929 	train_auc	 0.7515494459330128
valid_accuracy	 0.7675035997120231 	train_accuracy	 0.7857418054649992
valid_loss	 0.488643079996109 	train_loss	 0.4616145193576813
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 218
valid_auc	 0.7391165927613377 	train_auc	 0.7508874896163055
valid_accuracy	 0.7746130309575234 	train_accuracy	 0.7924841443897813
valid_loss	 0.4826517701148987 	train_loss	 0.45476052165031433
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 219
valid_auc	 0.739198455038851 	train_auc	 0.7512663900648471
valid_accuracy	 0.7671886249100072 	train_accuracy	 0.7857418054649992
valid_loss	 0.48822736740112305 	train_loss	 0.46069881319999695
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 220
valid_auc	 0.7389019105776136 	train_auc	 0.7506886585151071
valid_accuracy	 0.7760079193664506 	train_accuracy	 0.7935362456285935
valid_loss	 0.48204952478408813 	train_loss	 0.4543105363845825
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 221
valid_auc	 0.7394601893808394 	train_auc	 0.7512353372723694
valid_accuracy	 0.7759629229661628 	train_accuracy	 0.7929731491909193
valid_loss	 0.48357051610946655 	train_loss	 0.45515525341033936
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 222
valid_auc	 0.7400391033107707 	train_auc	 0.7520269129722317
valid_accuracy	 0.7736681065514759 	train_accuracy	 0.7910023116590599
valid_loss	 0.4836372137069702 	train_loss	 0.4555002748966217
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 223
valid_auc	 0.7396715482409528 	train_auc	 0.7512387689194153
valid_accuracy	 0.7789776817854571 	train_accuracy	 0.7974927390196195
valid_loss	 0.48424088954925537 	train_loss	 0.4554564952850342
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 224
valid_auc	 0.7395092592712957 	train_auc	 0.7510113394574152
valid_accuracy	 0.7801475881929446 	train_accuracy	 0.7989597534230336
valid_loss	 0.48321643471717834 	train_loss	 0.45456013083457947
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 225
valid_auc	 0.7398857443603396 	train_auc	 0.752335572403929
valid_accuracy	 0.7645788336933045 	train_accuracy	 0.7820372236381957
valid_loss	 0.49032607674598694 	train_loss	 0.4629623293876648
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 226
valid_auc	 0.740516932814209 	train_auc	 0.7524266350743158
valid_accuracy	 0.7756929445644348 	train_accuracy	 0.7928694208997689
valid_loss	 0.48300498723983765 	train_loss	 0.45449963212013245
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 227
valid_auc	 0.7407635313388002 	train_auc	 0.7529285976020765
valid_accuracy	 0.7727681785457163 	train_accuracy	 0.7905281251852291
valid_loss	 0.4831945598125458 	train_loss	 0.4553380310535431
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 228
valid_auc	 0.7408372831241683 	train_auc	 0.7528444841634424
valid_accuracy	 0.7760529157667386 	train_accuracy	 0.7941586153754964
valid_loss	 0.4816989004611969 	train_loss	 0.45332837104797363
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 229
valid_auc	 0.7408088935757046 	train_auc	 0.7531004117256402
valid_accuracy	 0.7730831533477321 	train_accuracy	 0.7917876830063423
valid_loss	 0.4825747609138489 	train_loss	 0.454576313495636
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 230
valid_auc	 0.740995073172747 	train_auc	 0.7530600151656794
valid_accuracy	 0.7760979121670266 	train_accuracy	 0.7942475253393397
valid_loss	 0.4826333224773407 	train_loss	 0.4539477825164795
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 231
valid_auc	 0.741132312873284 	train_auc	 0.7535028083118953
valid_accuracy	 0.7765028797696184 	train_accuracy	 0.7959960879615909
valid_loss	 0.48039528727531433 	train_loss	 0.4519937336444855
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 232
valid_auc	 0.7410256274030865 	train_auc	 0.7540787573062164
valid_accuracy	 0.7638138948884089 	train_accuracy	 0.7837413312785253
valid_loss	 0.49130237102508545 	train_loss	 0.46433424949645996
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 233
valid_auc	 0.7418316746764606 	train_auc	 0.7543647604455219
valid_accuracy	 0.7731731461483081 	train_accuracy	 0.793017604172841
valid_loss	 0.4815930426120758 	train_loss	 0.45352834463119507
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 234
valid_auc	 0.7421157623260688 	train_auc	 0.7544075482859987
valid_accuracy	 0.7751979841612671 	train_accuracy	 0.7940252504297315
valid_loss	 0.48062360286712646 	train_loss	 0.45242899656295776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 235
valid_auc	 0.742143140182481 	train_auc	 0.7540975867685316
valid_accuracy	 0.7791576673866091 	train_accuracy	 0.7995821231699366
valid_loss	 0.48401010036468506 	train_loss	 0.4545833170413971
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 236
valid_auc	 0.7426845593354844 	train_auc	 0.7550726595565258
valid_accuracy	 0.7739380849532037 	train_accuracy	 0.7932843340643708
valid_loss	 0.4812372624874115 	train_loss	 0.45282137393951416
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 237
valid_auc	 0.7428934483105336 	train_auc	 0.755237726922674
valid_accuracy	 0.7749280057595392 	train_accuracy	 0.7939956137751171
valid_loss	 0.48030370473861694 	train_loss	 0.45183899998664856
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 238
valid_auc	 0.7430803004849735 	train_auc	 0.7552829516166686
valid_accuracy	 0.777312814974802 	train_accuracy	 0.795936814652362
valid_loss	 0.4797819256782532 	train_loss	 0.4510944187641144
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 239
valid_auc	 0.7431269683132963 	train_auc	 0.7552248050234959
valid_accuracy	 0.7789326853851691 	train_accuracy	 0.7965147294173434
valid_loss	 0.4804958999156952 	train_loss	 0.4516189992427826
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 240
valid_auc	 0.7433591714208188 	train_auc	 0.75557779591835
valid_accuracy	 0.7750179985601152 	train_accuracy	 0.7934473356647501
valid_loss	 0.48057740926742554 	train_loss	 0.4519958794116974
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 241
valid_auc	 0.7433033814082991 	train_auc	 0.7554222051324333
valid_accuracy	 0.7790676745860331 	train_accuracy	 0.7962776361804279
valid_loss	 0.4793036878108978 	train_loss	 0.45068100094795227
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 242
valid_auc	 0.7435254449876622 	train_auc	 0.7558463875667434
valid_accuracy	 0.7759629229661628 	train_accuracy	 0.7951662616323869
valid_loss	 0.4798905551433563 	train_loss	 0.4512893855571747
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 243
valid_auc	 0.7438475756495557 	train_auc	 0.7564631165852845
valid_accuracy	 0.7721382289416847 	train_accuracy	 0.7914616798055836
valid_loss	 0.48119989037513733 	train_loss	 0.45296570658683777
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 244
valid_auc	 0.7439242212133058 	train_auc	 0.7562665693425261
valid_accuracy	 0.7797426205903528 	train_accuracy	 0.7980113804753719
valid_loss	 0.4816673994064331 	train_loss	 0.45219409465789795
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 245
valid_auc	 0.7439193888294842 	train_auc	 0.7562184292784933
valid_accuracy	 0.779247660187185 	train_accuracy	 0.7993894849149428
valid_loss	 0.4851893186569214 	train_loss	 0.455189049243927
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 246
valid_auc	 0.743697619149488 	train_auc	 0.7561576270813934
valid_accuracy	 0.7758279337652988 	train_accuracy	 0.7952699899235375
valid_loss	 0.4795251786708832 	train_loss	 0.45093923807144165
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 247
valid_auc	 0.7439150651176436 	train_auc	 0.7563237165848707
valid_accuracy	 0.7769528437724982 	train_accuracy	 0.79552190148776
valid_loss	 0.48060667514801025 	train_loss	 0.45160648226737976
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 248
valid_auc	 0.7441948120996786 	train_auc	 0.756714919790807
valid_accuracy	 0.7762778977681786 	train_accuracy	 0.7950180783593148
valid_loss	 0.48000749945640564 	train_loss	 0.4511900842189789
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 249
valid_auc	 0.744379205692876 	train_auc	 0.757151126336157
valid_accuracy	 0.7747030237580994 	train_accuracy	 0.793639973919744
valid_loss	 0.4803101718425751 	train_loss	 0.45157426595687866
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 250
valid_auc	 0.7444833082397908 	train_auc	 0.7570221729698732
valid_accuracy	 0.7796526277897768 	train_accuracy	 0.7977891055657638
valid_loss	 0.4809001684188843 	train_loss	 0.4514559805393219
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 251
valid_auc	 0.7445970190352402 	train_auc	 0.7572156863527881
valid_accuracy	 0.7774928005759539 	train_accuracy	 0.7957441763973683
valid_loss	 0.48018404841423035 	train_loss	 0.45102450251579285
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 252
valid_auc	 0.7447413744916036 	train_auc	 0.7573360374894347
valid_accuracy	 0.7762778977681786 	train_accuracy	 0.794336435303183
valid_loss	 0.481392502784729 	train_loss	 0.45219603180885315
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 253
valid_auc	 0.7451450622278217 	train_auc	 0.7579344292340817
valid_accuracy	 0.7736681065514759 	train_accuracy	 0.7924248710805524
valid_loss	 0.47987306118011475 	train_loss	 0.45139992237091064
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 254
valid_auc	 0.7452052268193798 	train_auc	 0.7577273559299615
valid_accuracy	 0.7798776097912167 	train_accuracy	 0.7983818386580522
valid_loss	 0.4795186519622803 	train_loss	 0.4502263367176056
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 255
valid_auc	 0.745456878152318 	train_auc	 0.7584830917190142
valid_accuracy	 0.7746580273578114 	train_accuracy	 0.7934473356647501
valid_loss	 0.47902676463127136 	train_loss	 0.4506193995475769
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 256
valid_auc	 0.745816526198783 	train_auc	 0.7584821887225328
valid_accuracy	 0.7788876889848813 	train_accuracy	 0.7974334657103906
valid_loss	 0.4784547984600067 	train_loss	 0.44923725724220276
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 257
valid_auc	 0.745845017481643 	train_auc	 0.7587429450698073
valid_accuracy	 0.7756029517638588 	train_accuracy	 0.7945735285400984
valid_loss	 0.47885406017303467 	train_loss	 0.45008158683776855
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 258
valid_auc	 0.7461774628809339 	train_auc	 0.758945765761804
valid_accuracy	 0.7794276457883369 	train_accuracy	 0.7974482840376979
valid_loss	 0.4782389998435974 	train_loss	 0.44898784160614014
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 259
valid_auc	 0.7460205206189905 	train_auc	 0.758869186191433
valid_accuracy	 0.7762778977681786 	train_accuracy	 0.7953292632327663
valid_loss	 0.4777480363845825 	train_loss	 0.4491505026817322
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 260
valid_auc	 0.7462232490111558 	train_auc	 0.7589994696383306
valid_accuracy	 0.7792026637868971 	train_accuracy	 0.7979076521842214
valid_loss	 0.4784718155860901 	train_loss	 0.44916170835494995
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 261
valid_auc	 0.7467388502351562 	train_auc	 0.7594782289976759
valid_accuracy	 0.7794276457883369 	train_accuracy	 0.7984559302945884
valid_loss	 0.47797030210494995 	train_loss	 0.4485960006713867
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

epoch 262
valid_auc	 0.7470214966474842 	train_auc	 0.759665286639345
valid_accuracy	 0.7806425485961123 	train_accuracy	 0.7996562148064726
valid_loss	 0.48104628920555115 	train_loss	 0.4510672390460968
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 263
valid_auc	 0.7472064780394154 	train_auc	 0.7598398344919819
valid_accuracy	 0.7800575953923686 	train_accuracy	 0.8010491375733507
valid_loss	 0.48291754722595215 	train_loss	 0.45256879925727844
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 264
valid_auc	 0.7472372979095673 	train_auc	 0.7599570554144384
valid_accuracy	 0.7797426205903528 	train_accuracy	 0.7975075573469267
valid_loss	 0.4768811762332916 	train_loss	 0.4477800726890564
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 265
valid_auc	 0.7472968803543024 	train_auc	 0.7598710227013797
valid_accuracy	 0.7807775377969762 	train_accuracy	 0.8002785845533756
valid_loss	 0.4787103235721588 	train_loss	 0.4491375684738159
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 266
valid_auc	 0.7473315378719572 	train_auc	 0.7601601853518052
valid_accuracy	 0.779292656587473 	train_accuracy	 0.7969889158911742
valid_loss	 0.4762522280216217 	train_loss	 0.447340726852417
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 267
valid_auc	 0.7476168576381421 	train_auc	 0.7604664841020021
valid_accuracy	 0.7774928005759539 	train_accuracy	 0.7961294529073558
valid_loss	 0.4759237766265869 	train_loss	 0.447419673204422
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 268
valid_auc	 0.7479687230032944 	train_auc	 0.760560113183441
valid_accuracy	 0.781092512598992 	train_accuracy	 0.8004267678264477
valid_loss	 0.48081913590431213 	train_loss	 0.4508049190044403
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 269
valid_auc	 0.7477478237175772 	train_auc	 0.7604443720814618
valid_accuracy	 0.7795626349892009 	train_accuracy	 0.8001896745895324
valid_loss	 0.4762120246887207 	train_loss	 0.4469633996486664
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 270
valid_auc	 0.7478696054417955 	train_auc	 0.7604851182514518
valid_accuracy	 0.7807325413966882 	train_accuracy	 0.7992116649872563
valid_loss	 0.4803784191608429 	train_loss	 0.45050716400146484
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 271
valid_auc	 0.7480077720557203 	train_auc	 0.7606227617381622
valid_accuracy	 0.7800575953923686 	train_accuracy	 0.8012269575010372
valid_loss	 0.48115041851997375 	train_loss	 0.45101669430732727
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 272
valid_auc	 0.7482802450284237 	train_auc	 0.761388784004795
valid_accuracy	 0.7742530597552196 	train_accuracy	 0.7938326121747377
valid_loss	 0.4775448143482208 	train_loss	 0.44871968030929565
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 273
valid_auc	 0.7483032143943319 	train_auc	 0.7613275449579193
valid_accuracy	 0.7784827213822895 	train_accuracy	 0.7967962776361804
valid_loss	 0.47550153732299805 	train_loss	 0.446658194065094
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 274
valid_auc	 0.748605348595452 	train_auc	 0.7614473309893419
valid_accuracy	 0.7789326853851691 	train_accuracy	 0.7970333708730959
valid_loss	 0.47882091999053955 	train_loss	 0.4491659104824066
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 275
valid_auc	 0.7486288153295197 	train_auc	 0.7612628273889102
valid_accuracy	 0.7805525557955364 	train_accuracy	 0.8014344140833383
valid_loss	 0.48595672845840454 	train_loss	 0.4551801383495331
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 276
valid_auc	 0.7485504120214788 	train_auc	 0.7612474380371985
valid_accuracy	 0.78113750899928 	train_accuracy	 0.8014492324106455
valid_loss	 0.4817684292793274 	train_loss	 0.45146578550338745
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 277
valid_auc	 0.7487129609790376 	train_auc	 0.7617785360361411
valid_accuracy	 0.7769528437724982 	train_accuracy	 0.7960849979254342
valid_loss	 0.47665631771087646 	train_loss	 0.44765472412109375
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 278
valid_auc	 0.7491142636088546 	train_auc	 0.761822740545935
valid_accuracy	 0.781407487401008 	train_accuracy	 0.8006638610633632
valid_loss	 0.48426729440689087 	train_loss	 0.4537185728549957
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 279
valid_auc	 0.7492241932759103 	train_auc	 0.762073149868641
valid_accuracy	 0.781047516198704 	train_accuracy	 0.7997895797522375
valid_loss	 0.47796082496643066 	train_loss	 0.4481838047504425
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 280
valid_auc	 0.7497253990828419 	train_auc	 0.762690287742114
valid_accuracy	 0.7804625629949604 	train_accuracy	 0.7983373836761306
valid_loss	 0.4777129292488098 	train_loss	 0.44793519377708435
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 281
valid_auc	 0.749610665291519 	train_auc	 0.7625173681477319
valid_accuracy	 0.7806875449964003 	train_accuracy	 0.7980113804753719
valid_loss	 0.4766956865787506 	train_loss	 0.44718584418296814
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 282
valid_auc	 0.7497839133164164 	train_auc	 0.7627587449014537
valid_accuracy	 0.7801025917926566 	train_accuracy	 0.7982781103669018
valid_loss	 0.47586923837661743 	train_loss	 0.4464293420314789
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 283
valid_auc	 0.7500420869545362 	train_auc	 0.7629789920583484
valid_accuracy	 0.7800125989920806 	train_accuracy	 0.7980558354572935
valid_loss	 0.4757899045944214 	train_loss	 0.4464251697063446
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 284
valid_auc	 0.7502782916149776 	train_auc	 0.7632767335008672
valid_accuracy	 0.7797876169906407 	train_accuracy	 0.7975816489834627
valid_loss	 0.4763369858264923 	train_loss	 0.4468088746070862
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 285
valid_auc	 0.7508080000085909 	train_auc	 0.7639679646119337
valid_accuracy	 0.7745230381569475 	train_accuracy	 0.7925137810443957
valid_loss	 0.47573745250701904 	train_loss	 0.4474756717681885
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 286
valid_auc	 0.7507618125926949 	train_auc	 0.7635899997120177
valid_accuracy	 0.7821274298056156 	train_accuracy	 0.7998933080433881
valid_loss	 0.4744638502597809 	train_loss	 0.445159912109375
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 287
valid_auc	 0.7503834228096768 	train_auc	 0.7630266321214457
valid_accuracy	 0.7821274298056156 	train_accuracy	 0.8020123288483196
valid_loss	 0.4918110966682434 	train_loss	 0.46034860610961914
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 288
valid_auc	 0.7508791971302309 	train_auc	 0.7638642293917938
valid_accuracy	 0.7805525557955364 	train_accuracy	 0.7988560251318831
valid_loss	 0.4750225245952606 	train_loss	 0.44552522897720337
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 289
valid_auc	 0.7507536173218861 	train_auc	 0.7637513652483228
valid_accuracy	 0.7808225341972642 	train_accuracy	 0.7993450299330211
valid_loss	 0.4763530194759369 	train_loss	 0.4466385543346405
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 290
valid_auc	 0.7509471952703001 	train_auc	 0.7640129217273028
valid_accuracy	 0.7810025197984162 	train_accuracy	 0.7989301167684192
valid_loss	 0.47445330023765564 	train_loss	 0.4451000690460205
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 291
valid_auc	 0.7514157217283928 	train_auc	 0.7644699564366242
valid_accuracy	 0.78113750899928 	train_accuracy	 0.7990042084049552
valid_loss	 0.47487443685531616 	train_loss	 0.4453691840171814
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 292
valid_auc	 0.7517131817991964 	train_auc	 0.7649217411361224
valid_accuracy	 0.7769978401727862 	train_accuracy	 0.7958479046885187
valid_loss	 0.4737074673175812 	train_loss	 0.4450710415840149
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 293
valid_auc	 0.7519833035769644 	train_auc	 0.7651154622017177
valid_accuracy	 0.7788426925845933 	train_accuracy	 0.7977742872384566
valid_loss	 0.473482221364975 	train_loss	 0.44438421726226807
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 294
valid_auc	 0.752260461983806 	train_auc	 0.7654311509434426
valid_accuracy	 0.7787077033837293 	train_accuracy	 0.7977001956019204
valid_loss	 0.4733273386955261 	train_loss	 0.44421225786209106
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 295
valid_auc	 0.7522210738167259 	train_auc	 0.7652126017063915
valid_accuracy	 0.7822624190064795 	train_accuracy	 0.8013010491375734
valid_loss	 0.4799526035785675 	train_loss	 0.44939905405044556
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 296
valid_auc	 0.7526648109935996 	train_auc	 0.7658429316618396
valid_accuracy	 0.7796526277897768 	train_accuracy	 0.7980261988026791
valid_loss	 0.47271573543548584 	train_loss	 0.4436055123806
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 297
valid_auc	 0.7526682360516066 	train_auc	 0.7658764909694239
valid_accuracy	 0.7799676025917927 	train_accuracy	 0.7984559302945884
valid_loss	 0.47208499908447266 	train_loss	 0.44315627217292786
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 298
valid_auc	 0.7526690781863312 	train_auc	 0.7660433382868193
valid_accuracy	 0.7756929445644348 	train_accuracy	 0.7946624385039417
valid_loss	 0.4737423062324524 	train_loss	 0.44525042176246643
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 299
valid_auc	 0.7526158315337178 	train_auc	 0.7657709888188946
valid_accuracy	 0.7823074154067674 	train_accuracy	 0.8012417758283445
valid_loss	 0.47843489050865173 	train_loss	 0.4479697048664093
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 300
valid_auc	 0.7528872193395278 	train_auc	 0.7663245783963791
valid_accuracy	 0.7801025917926566 	train_accuracy	 0.7983818386580522
valid_loss	 0.474153608083725 	train_loss	 0.4444410502910614


Start testing ......................
 Best epoch: 300
===== 设备: cuda =====
训练总段数: 140
实际用段数: 140
实际元素数: 21590
最后一次所用q.shpe: torch.Size([20, 200])
===== 数据来自Test=====

test_auc	 0.7636915542046165
test_accuracy	 0.8057433997220935
test_loss	 0.4344305396080017
@ 使用预设Q-matrix:  qm_fold3_trained_0.99.json


===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.7000046571745837 	train_auc	 0.713335839926565
valid_accuracy	 0.7721832253419726 	train_accuracy	 0.7918173196609567
valid_loss	 0.5139195322990417 	train_loss	 0.4794314503669739
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.7224595805004779 	train_auc	 0.735067747776502
valid_accuracy	 0.775467962562995 	train_accuracy	 0.7949439867227788
valid_loss	 0.5053937435150146 	train_loss	 0.4716266095638275
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.7332106454194003 	train_auc	 0.7457330815344247
valid_accuracy	 0.7796976241900648 	train_accuracy	 0.7974927390196195
valid_loss	 0.48747044801712036 	train_loss	 0.4574231207370758
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.7393237522516507 	train_auc	 0.7522852904088052
valid_accuracy	 0.7818574514038877 	train_accuracy	 0.7996413964791654
valid_loss	 0.4858042597770691 	train_loss	 0.4548577666282654
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.7444596776003072 	train_auc	 0.7580713526673617
valid_accuracy	 0.7828923686105111 	train_accuracy	 0.8008861359729714
valid_loss	 0.4839770495891571 	train_loss	 0.45210161805152893
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.7493866291952509 	train_auc	 0.7632447698993937
valid_accuracy	 0.7837922966162707 	train_accuracy	 0.8025606069586865
valid_loss	 0.4775446951389313 	train_loss	 0.44632360339164734
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.7531263629936387 	train_auc	 0.7671767082460023
valid_accuracy	 0.7842872570194385 	train_accuracy	 0.8043239879082449
valid_loss	 0.4775077700614929 	train_loss	 0.4453493356704712
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.7568637795085562 	train_auc	 0.7710813177654345
valid_accuracy	 0.7857271418286537 	train_accuracy	 0.8059095489301168
valid_loss	 0.47376561164855957 	train_loss	 0.4417572617530823
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.759970719710378 	train_auc	 0.7746053230570953
valid_accuracy	 0.7868970482361412 	train_accuracy	 0.807035741805465
valid_loss	 0.46848538517951965 	train_loss	 0.43681228160858154
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.7623693285264208 	train_auc	 0.7770913517972298
valid_accuracy	 0.7878869690424766 	train_accuracy	 0.8078507498073617
valid_loss	 0.47014638781547546 	train_loss	 0.4375966489315033
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.7646617153289602 	train_auc	 0.7798895295589245
valid_accuracy	 0.7887868970482361 	train_accuracy	 0.8090362159919389
valid_loss	 0.46681949496269226 	train_loss	 0.43410396575927734
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.7668771457126498 	train_auc	 0.7824937720619147
valid_accuracy	 0.7898218142548596 	train_accuracy	 0.8100438622488294
valid_loss	 0.4627169668674469 	train_loss	 0.4302775263786316
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.7688305648107167 	train_auc	 0.7845407387826062
valid_accuracy	 0.7903617710583153 	train_accuracy	 0.8104735937407386
valid_loss	 0.4631541967391968 	train_loss	 0.4301612377166748
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.7705038525968072 	train_auc	 0.7865542633834329
valid_accuracy	 0.7904967602591793 	train_accuracy	 0.8105625037045818
valid_loss	 0.4599705934524536 	train_loss	 0.42712506651878357
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.7720447556738261 	train_auc	 0.7884193104929026
valid_accuracy	 0.7902717782577394 	train_accuracy	 0.8107403236322684
valid_loss	 0.4590664207935333 	train_loss	 0.42584410309791565
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.7736475528271395 	train_auc	 0.7900542796979165
valid_accuracy	 0.7903167746580274 	train_accuracy	 0.8114219666884002
valid_loss	 0.456905722618103 	train_loss	 0.42398780584335327
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.7751116464349923 	train_auc	 0.7916625450769236
valid_accuracy	 0.7902267818574514 	train_accuracy	 0.8116442415980084
valid_loss	 0.4562588930130005 	train_loss	 0.42305251955986023
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.7767535039445534 	train_auc	 0.7935044196169935
valid_accuracy	 0.7913516918646508 	train_accuracy	 0.8118813348349239
valid_loss	 0.4553346633911133 	train_loss	 0.42191454768180847
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.7778735996472304 	train_auc	 0.7946344119656901
valid_accuracy	 0.7921166306695464 	train_accuracy	 0.8121777013810682
valid_loss	 0.4553392231464386 	train_loss	 0.42167943716049194
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.779116663975415 	train_auc	 0.7961701394485552
valid_accuracy	 0.7915316774658028 	train_accuracy	 0.8123555213087547
valid_loss	 0.455253928899765 	train_loss	 0.4211078882217407
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.7802931714008109 	train_auc	 0.797734353312846
valid_accuracy	 0.7927915766738661 	train_accuracy	 0.8131260743287297
valid_loss	 0.4522213041782379 	train_loss	 0.418423593044281
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.781430494127919 	train_auc	 0.7990154605276261
valid_accuracy	 0.7928365730741541 	train_accuracy	 0.8133631675656452
valid_loss	 0.45105913281440735 	train_loss	 0.4172600507736206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.7822839044146567 	train_auc	 0.8003595489800415
valid_accuracy	 0.7927915766738661 	train_accuracy	 0.8140003556398554
valid_loss	 0.4508621394634247 	train_loss	 0.4165116250514984
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.7835060849320563 	train_auc	 0.8016114295776359
valid_accuracy	 0.79292656587473 	train_accuracy	 0.8138966273487048
valid_loss	 0.45119157433509827 	train_loss	 0.41644102334976196
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.7846048277153432 	train_auc	 0.8029433871479783
valid_accuracy	 0.7931965442764579 	train_accuracy	 0.8141040839310059
valid_loss	 0.451499342918396 	train_loss	 0.41627708077430725
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.78558979188025 	train_auc	 0.8041578705401822
valid_accuracy	 0.793016558675306 	train_accuracy	 0.8146819986959872
valid_loss	 0.4495631754398346 	train_loss	 0.4144118130207062
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.7864160108236354 	train_auc	 0.8052309350479865
valid_accuracy	 0.793016558675306 	train_accuracy	 0.8146819986959872
valid_loss	 0.44919705390930176 	train_loss	 0.41380348801612854
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.7872725974843006 	train_auc	 0.8060862152941293
valid_accuracy	 0.7939164866810655 	train_accuracy	 0.8147412720052161
valid_loss	 0.4487416446208954 	train_loss	 0.4133240580558777
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.7883337776677288 	train_auc	 0.8071916822063117
valid_accuracy	 0.7936015118790497 	train_accuracy	 0.8147560903325233
valid_loss	 0.44784224033355713 	train_loss	 0.4124044179916382
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.7888639664737688 	train_auc	 0.8079539557680137
valid_accuracy	 0.7931515478761699 	train_accuracy	 0.8148005453144449
valid_loss	 0.4488009214401245 	train_loss	 0.4127551317214966
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.7900865030615554 	train_auc	 0.8095800265188777
valid_accuracy	 0.7940064794816415 	train_accuracy	 0.8152006401517397
valid_loss	 0.4447433352470398 	train_loss	 0.4093833863735199
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.7905646547239151 	train_auc	 0.8102594874256295
valid_accuracy	 0.7937365010799136 	train_accuracy	 0.8152747317882757
valid_loss	 0.44549477100372314 	train_loss	 0.4095114469528198
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.7914051164827751 	train_auc	 0.8110011007924243
valid_accuracy	 0.7941864650827933 	train_accuracy	 0.8144893604409934
valid_loss	 0.4486176371574402 	train_loss	 0.41166722774505615
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.7927699342756237 	train_auc	 0.812783751263347
valid_accuracy	 0.7935115190784737 	train_accuracy	 0.815082093533282
valid_loss	 0.4441945254802704 	train_loss	 0.4078601002693176
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.7925807422100701 	train_auc	 0.8129002443198582
valid_accuracy	 0.7943214542836573 	train_accuracy	 0.815986011499022
valid_loss	 0.44455528259277344 	train_loss	 0.4077439308166504
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.7936688254893948 	train_auc	 0.8139599351047224
valid_accuracy	 0.7941414686825053 	train_accuracy	 0.8153043684428901
valid_loss	 0.4447828233242035 	train_loss	 0.4078182578086853
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.7941817024923401 	train_auc	 0.8152397083326313
valid_accuracy	 0.7944564434845213 	train_accuracy	 0.8153932784067335
valid_loss	 0.44419702887535095 	train_loss	 0.4065706133842468
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.7949618696656912 	train_auc	 0.8158408715668392
valid_accuracy	 0.7954913606911447 	train_accuracy	 0.8160008298263292
valid_loss	 0.44107866287231445 	train_loss	 0.40441495180130005
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.7955223696699019 	train_auc	 0.8165765897403119
valid_accuracy	 0.7945914326853851 	train_accuracy	 0.8161786497540158
valid_loss	 0.44159406423568726 	train_loss	 0.40437233448028564
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.7959839612333169 	train_auc	 0.8173377129092362
valid_accuracy	 0.7945014398848093 	train_accuracy	 0.8162379230632446
valid_loss	 0.44066861271858215 	train_loss	 0.40342849493026733
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.7970261849075779 	train_auc	 0.818058829492888
valid_accuracy	 0.7949964002879769 	train_accuracy	 0.8157637365894138
valid_loss	 0.44579383730888367 	train_loss	 0.4072505533695221
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.7975097680563151 	train_auc	 0.8189306527387343
valid_accuracy	 0.7956263498920086 	train_accuracy	 0.8168454744828404
valid_loss	 0.4399580657482147 	train_loss	 0.402413547039032
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.7980129802916172 	train_auc	 0.8198095918833119
valid_accuracy	 0.7953113750899928 	train_accuracy	 0.8163564696817023
valid_loss	 0.4392510950565338 	train_loss	 0.40153059363365173
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.7984623806832154 	train_auc	 0.8200988346120122
valid_accuracy	 0.7955813534917207 	train_accuracy	 0.8163712880090095
valid_loss	 0.4418739080429077 	train_loss	 0.40327125787734985
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.7988164220340651 	train_auc	 0.8210315798468493
valid_accuracy	 0.7963912886969042 	train_accuracy	 0.8167269278643827
valid_loss	 0.43810227513313293 	train_loss	 0.40016141533851624
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.7993869824396824 	train_auc	 0.8219124317554225
valid_accuracy	 0.7952663786897048 	train_accuracy	 0.8165787445913105
valid_loss	 0.4398001730442047 	train_loss	 0.40091657638549805
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.7995252168765381 	train_auc	 0.8222401257279436
valid_accuracy	 0.7965712742980562 	train_accuracy	 0.8173492976112856
valid_loss	 0.4376695156097412 	train_loss	 0.39921659231185913
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.8005627438128389 	train_auc	 0.8235515383379695
valid_accuracy	 0.7957163426925846 	train_accuracy	 0.8169640211012981
valid_loss	 0.4384424686431885 	train_loss	 0.3993072211742401
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.800441753356147 	train_auc	 0.8236595476546484
valid_accuracy	 0.7975161987041036 	train_accuracy	 0.8176160275028155
valid_loss	 0.4376966059207916 	train_loss	 0.3983738422393799
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.8012314948665671 	train_auc	 0.8240323758262033
valid_accuracy	 0.7963912886969042 	train_accuracy	 0.8172900243020568
valid_loss	 0.4413740038871765 	train_loss	 0.40108734369277954
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.8017370865563592 	train_auc	 0.8250265456551382
valid_accuracy	 0.7964812814974802 	train_accuracy	 0.8176604824847371
valid_loss	 0.4388124942779541 	train_loss	 0.3987307548522949
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.8016004346545561 	train_auc	 0.8258240080847652
valid_accuracy	 0.79670626349892 	train_accuracy	 0.8177345741212732
valid_loss	 0.43543460965156555 	train_loss	 0.39602386951446533
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.802621881904339 	train_auc	 0.8262215127347836
valid_accuracy	 0.7973362131029518 	train_accuracy	 0.817927212376267
valid_loss	 0.4375671446323395 	train_loss	 0.3971359133720398
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.8027484734047355 	train_auc	 0.8263044217440808
valid_accuracy	 0.7978311735061195 	train_accuracy	 0.8188755853239287
valid_loss	 0.43633976578712463 	train_loss	 0.3962578773498535
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.8033318466923689 	train_auc	 0.8274447806486326
valid_accuracy	 0.7976061915046796 	train_accuracy	 0.8187422203781637
valid_loss	 0.43593448400497437 	train_loss	 0.39533737301826477
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.8037575599253743 	train_auc	 0.8278930406019522
valid_accuracy	 0.7979211663066955 	train_accuracy	 0.8184013988500978
valid_loss	 0.43903252482414246 	train_loss	 0.3973875939846039
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.8040393359434235 	train_auc	 0.8286550316110423
valid_accuracy	 0.7979661627069834 	train_accuracy	 0.8190830419062296
valid_loss	 0.4350776672363281 	train_loss	 0.394109845161438
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.8042708495178157 	train_auc	 0.8289273426674367
valid_accuracy	 0.7972912167026638 	train_accuracy	 0.8188755853239287
valid_loss	 0.4378279745578766 	train_loss	 0.39583390951156616
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.8042555554469133 	train_auc	 0.8292504943137504
valid_accuracy	 0.7986411087113031 	train_accuracy	 0.8195720467073677
valid_loss	 0.4343898892402649 	train_loss	 0.3932285010814667
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.8050544191415301 	train_auc	 0.8299733276974894
valid_accuracy	 0.7973812095032398 	train_accuracy	 0.8192164068519946
valid_loss	 0.43576350808143616 	train_loss	 0.39388683438301086
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.8056431787002538 	train_auc	 0.830646096534428
valid_accuracy	 0.7974262059035278 	train_accuracy	 0.8194979550708316
valid_loss	 0.43713879585266113 	train_loss	 0.3947565257549286
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.8057455574143434 	train_auc	 0.8308915006394354
valid_accuracy	 0.7983711303095752 	train_accuracy	 0.8196905933258254
valid_loss	 0.43442538380622864 	train_loss	 0.3924274444580078
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.8061752948079115 	train_auc	 0.832023386871884
valid_accuracy	 0.7977861771058316 	train_accuracy	 0.8200165965265841
valid_loss	 0.4339190125465393 	train_loss	 0.3915477395057678
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.8061392469201748 	train_auc	 0.8314554509133891
valid_accuracy	 0.7998110151187905 	train_accuracy	 0.8200758698358129
valid_loss	 0.435417503118515 	train_loss	 0.39271119236946106
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.8064170100814831 	train_auc	 0.8328633031569878
valid_accuracy	 0.7984611231101512 	train_accuracy	 0.8202388714361922
valid_loss	 0.43548721075057983 	train_loss	 0.39199456572532654
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.806765992972075 	train_auc	 0.83285307592431
valid_accuracy	 0.7992260619150467 	train_accuracy	 0.8209056961650169
valid_loss	 0.43241092562675476 	train_loss	 0.3899276554584503
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.8074326245592146 	train_auc	 0.8335439548211758
valid_accuracy	 0.7987311015118791 	train_accuracy	 0.8202092347815778
valid_loss	 0.434637188911438 	train_loss	 0.39117127656936646
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.8073711487243269 	train_auc	 0.8344878088007569
valid_accuracy	 0.7981011519078474 	train_accuracy	 0.8209501511469385
valid_loss	 0.43092599511146545 	train_loss	 0.3880845308303833
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.8071247254089737 	train_auc	 0.8332104841451378
valid_accuracy	 0.7995410367170627 	train_accuracy	 0.8205500563096437
valid_loss	 0.44057443737983704 	train_loss	 0.3953129053115845
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.8077717279095487 	train_auc	 0.835013102752381
valid_accuracy	 0.7995860331173507 	train_accuracy	 0.8214391559480766
valid_loss	 0.4316597878932953 	train_loss	 0.38797035813331604
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.8075464596967037 	train_auc	 0.8349436293150981
valid_accuracy	 0.7981911447084233 	train_accuracy	 0.8219726157311362
valid_loss	 0.43173515796661377 	train_loss	 0.38792863488197327
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.8081644452867047 	train_auc	 0.835233303685231
valid_accuracy	 0.7999010079193665 	train_accuracy	 0.8220615256949796
valid_loss	 0.4329088628292084 	train_loss	 0.3884255290031433
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.8084874124314119 	train_auc	 0.8362769801172141
valid_accuracy	 0.8002609791216703 	train_accuracy	 0.8224319838776599
valid_loss	 0.4317985475063324 	train_loss	 0.3871942162513733
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.8082872613106182 	train_auc	 0.8360350473728686
valid_accuracy	 0.7976061915046796 	train_accuracy	 0.8224171655503527
valid_loss	 0.4316113591194153 	train_loss	 0.38707828521728516
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.8089629246513803 	train_auc	 0.8365816733956571
valid_accuracy	 0.8010709143268538 	train_accuracy	 0.8221800723134373
valid_loss	 0.43417152762413025 	train_loss	 0.3885239064693451
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.8089568149356945 	train_auc	 0.8363798292679878
valid_accuracy	 0.8011159107271418 	train_accuracy	 0.8222838006045877
valid_loss	 0.43775564432144165 	train_loss	 0.39113086462020874
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.809523192927244 	train_auc	 0.8375442279310619
valid_accuracy	 0.7992710583153347 	train_accuracy	 0.8225949854780392
valid_loss	 0.4310705363750458 	train_loss	 0.3857946991920471
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.8092350132941422 	train_auc	 0.8377996626537959
valid_accuracy	 0.7996760259179265 	train_accuracy	 0.8229802619880268
valid_loss	 0.43131545186042786 	train_loss	 0.3855436146259308
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.8094917569988038 	train_auc	 0.8380215543450177
valid_accuracy	 0.7999460043196545 	train_accuracy	 0.8230395352972556
valid_loss	 0.434474378824234 	train_loss	 0.3875645399093628
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.8094161457347486 	train_auc	 0.8386391993808979
valid_accuracy	 0.7977861771058316 	train_accuracy	 0.8230691719518701
valid_loss	 0.43088024854660034 	train_loss	 0.3848402500152588
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.8102149585621674 	train_auc	 0.8388008956469883
valid_accuracy	 0.8002609791216703 	train_accuracy	 0.8228320787149547
valid_loss	 0.43730515241622925 	train_loss	 0.38943684101104736
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.809759940171132 	train_auc	 0.8394626957134034
valid_accuracy	 0.7979211663066955 	train_accuracy	 0.8229654436607196
valid_loss	 0.42914706468582153 	train_loss	 0.38380709290504456
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.8105600755457019 	train_auc	 0.839627913470458
valid_accuracy	 0.8009809215262779 	train_accuracy	 0.8242842747910616
valid_loss	 0.43139758706092834 	train_loss	 0.38436490297317505
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.8103069321082854 	train_auc	 0.8402987155068413
valid_accuracy	 0.7999460043196545 	train_accuracy	 0.8245065497006698
valid_loss	 0.4296573996543884 	train_loss	 0.38270387053489685
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.8107250548249487 	train_auc	 0.8405876073234266
valid_accuracy	 0.80071094312455 	train_accuracy	 0.8243287297729832
valid_loss	 0.43009400367736816 	train_loss	 0.3827379643917084
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.8111704310559844 	train_auc	 0.8409040011445958
valid_accuracy	 0.8014758819294456 	train_accuracy	 0.8247436429375852
valid_loss	 0.43112078309059143 	train_loss	 0.3833162486553192
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.81090039405688 	train_auc	 0.8410823250459649
valid_accuracy	 0.8012958963282938 	train_accuracy	 0.8250400094837295
valid_loss	 0.4313650131225586 	train_loss	 0.3830387592315674
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.8112519824783979 	train_auc	 0.8418322281418122
valid_accuracy	 0.8010259179265659 	train_accuracy	 0.8251881927568017
valid_loss	 0.4301394820213318 	train_loss	 0.3818514943122864
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.810840387718827 	train_auc	 0.8413796823731818
valid_accuracy	 0.7999910007199424 	train_accuracy	 0.8255290142848676
valid_loss	 0.43069934844970703 	train_loss	 0.3821594715118408
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.8114839990728605 	train_auc	 0.8426440363014065
valid_accuracy	 0.8015208783297336 	train_accuracy	 0.8258105625037045
valid_loss	 0.4304683804512024 	train_loss	 0.381468266248703
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.8113554124479154 	train_auc	 0.8425634905777812
valid_accuracy	 0.798776097912167 	train_accuracy	 0.8254549226483314
valid_loss	 0.42934784293174744 	train_loss	 0.38060086965560913
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.8117248156925985 	train_auc	 0.8432845348956728
valid_accuracy	 0.7999910007199424 	train_accuracy	 0.8254697409756386
valid_loss	 0.42846912145614624 	train_loss	 0.3796902298927307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.8118609758781529 	train_auc	 0.8435684078226589
valid_accuracy	 0.8010259179265659 	train_accuracy	 0.8257661075217829
valid_loss	 0.42976298928260803 	train_loss	 0.3800607919692993
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.8122131125350284 	train_auc	 0.8440450219956986
valid_accuracy	 0.7989110871130309 	train_accuracy	 0.8260328374133128
valid_loss	 0.42913031578063965 	train_loss	 0.37934958934783936
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.8122366131805615 	train_auc	 0.8440903723409701
valid_accuracy	 0.8000359971202304 	train_accuracy	 0.8260624740679272
valid_loss	 0.4292561709880829 	train_loss	 0.3794938623905182
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.8126449580913632 	train_auc	 0.8444409361479495
valid_accuracy	 0.8025557955363571 	train_accuracy	 0.8264181139233003
valid_loss	 0.43184900283813477 	train_loss	 0.38085901737213135
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.8121359243878317 	train_auc	 0.8440141534483574
valid_accuracy	 0.7986411087113031 	train_accuracy	 0.825558650939482
valid_loss	 0.42906418442726135 	train_loss	 0.37932130694389343
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.8127425496369184 	train_auc	 0.8450617042365481
valid_accuracy	 0.8030507559395248 	train_accuracy	 0.8260624740679272
valid_loss	 0.433090478181839 	train_loss	 0.3813806474208832
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.8127482976303063 	train_auc	 0.8452216850046372
valid_accuracy	 0.8003509719222462 	train_accuracy	 0.8262847489775355
valid_loss	 0.4291996657848358 	train_loss	 0.3782353103160858
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.8128018947013957 	train_auc	 0.845033627361097
valid_accuracy	 0.8018358531317494 	train_accuracy	 0.8268033904332879
valid_loss	 0.431132435798645 	train_loss	 0.37948474287986755
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.8123858405841228 	train_auc	 0.846225324252332
valid_accuracy	 0.7998560115190785 	train_accuracy	 0.827159030288661
valid_loss	 0.42837733030319214 	train_loss	 0.3767798840999603
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.8128759629937743 	train_auc	 0.8460218421007645
valid_accuracy	 0.8015208783297336 	train_accuracy	 0.8268626637425167
valid_loss	 0.432888001203537 	train_loss	 0.3798305094242096
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.8127802026673515 	train_auc	 0.8462306986113463
valid_accuracy	 0.8004409647228222 	train_accuracy	 0.8272479402525043
valid_loss	 0.4292984902858734 	train_loss	 0.37715888023376465
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.8134928634168819 	train_auc	 0.8472053990028103
valid_accuracy	 0.8005759539236861 	train_accuracy	 0.8273516685436548
valid_loss	 0.4280531406402588 	train_loss	 0.3760262131690979
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.8133466767413863 	train_auc	 0.8472279849825708
valid_accuracy	 0.7998560115190785 	train_accuracy	 0.8279444016359433
valid_loss	 0.4288083612918854 	train_loss	 0.376194030046463
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.8132563705089846 	train_auc	 0.8477287092267647
valid_accuracy	 0.7993160547156227 	train_accuracy	 0.8275294884713413
valid_loss	 0.42849189043045044 	train_loss	 0.37541845440864563
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.8133827302810339 	train_auc	 0.8477524006773434
valid_accuracy	 0.7994510439164867 	train_accuracy	 0.8277962183628712
valid_loss	 0.42918670177459717 	train_loss	 0.37566226720809937
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.8134931912277142 	train_auc	 0.8486091626970922
valid_accuracy	 0.7994510439164867 	train_accuracy	 0.8280925849090155
valid_loss	 0.4281792938709259 	train_loss	 0.3744538128376007
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.8134115776342808 	train_auc	 0.8490509408674506
valid_accuracy	 0.8013858891288697 	train_accuracy	 0.8287742279651473
valid_loss	 0.4286666512489319 	train_loss	 0.3744332492351532
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.8141344344310795 	train_auc	 0.8487824358077607
valid_accuracy	 0.80071094312455 	train_accuracy	 0.8282555865093948
valid_loss	 0.42955365777015686 	train_loss	 0.3751446008682251
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.8137139266080151 	train_auc	 0.8492906880608317
valid_accuracy	 0.7994960403167747 	train_accuracy	 0.828685318001304
valid_loss	 0.4280569553375244 	train_loss	 0.37371814250946045
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.8137816986716482 	train_auc	 0.8495477334636627
valid_accuracy	 0.8024658027357812 	train_accuracy	 0.8293521427301286
valid_loss	 0.4309464395046234 	train_loss	 0.3749713897705078
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.8136786360763394 	train_auc	 0.849590394350777
valid_accuracy	 0.7990460763138949 	train_accuracy	 0.8285964080374607
valid_loss	 0.4286002814769745 	train_loss	 0.3735145926475525
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.813575963462883 	train_auc	 0.850692199797775
valid_accuracy	 0.8000359971202304 	train_accuracy	 0.8286112263647679
valid_loss	 0.4272677004337311 	train_loss	 0.3720066547393799
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.8138228106715539 	train_auc	 0.8502783168619028
valid_accuracy	 0.7998560115190785 	train_accuracy	 0.8288038646197617
valid_loss	 0.42828571796417236 	train_loss	 0.37271687388420105
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.8142672204258252 	train_auc	 0.8508507795215757
valid_accuracy	 0.802690784737221 	train_accuracy	 0.829515144330508
valid_loss	 0.4301685690879822 	train_loss	 0.3733691871166229
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.8140628868909636 	train_auc	 0.8511302149402589
valid_accuracy	 0.7997210223182145 	train_accuracy	 0.8292335961116709
valid_loss	 0.4282224774360657 	train_loss	 0.3718743622303009
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.8143045626011585 	train_auc	 0.8513828404129449
valid_accuracy	 0.8011609071274298 	train_accuracy	 0.829589235967044
valid_loss	 0.4290592074394226 	train_loss	 0.3720657527446747
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.8142306469103744 	train_auc	 0.8515403322440851
valid_accuracy	 0.8004859611231101 	train_accuracy	 0.8296336909489657
valid_loss	 0.428332656621933 	train_loss	 0.37148359417915344
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.8143199301469028 	train_auc	 0.8521104465920726
valid_accuracy	 0.8018808495320374 	train_accuracy	 0.8304486989508624
valid_loss	 0.4299471974372864 	train_loss	 0.3718006908893585
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.8140458237719486 	train_auc	 0.8528376328485395
valid_accuracy	 0.8012059035277178 	train_accuracy	 0.8304931539327841
valid_loss	 0.4277205467224121 	train_loss	 0.3699392080307007
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.8147047970198154 	train_auc	 0.852696913835241
valid_accuracy	 0.8029157667386609 	train_accuracy	 0.8305968822239346
valid_loss	 0.4312112629413605 	train_loss	 0.37203967571258545
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.8146656518849038 	train_auc	 0.8531915924952063
valid_accuracy	 0.80071094312455 	train_accuracy	 0.8304042439689407
valid_loss	 0.42818960547447205 	train_loss	 0.36973458528518677
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.8148906205464708 	train_auc	 0.8535966264561878
valid_accuracy	 0.8019708423326134 	train_accuracy	 0.8315452551715963
valid_loss	 0.42851051688194275 	train_loss	 0.3696180582046509
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.8147796509278091 	train_auc	 0.8541915247047149
valid_accuracy	 0.8014308855291576 	train_accuracy	 0.8308784304427717
valid_loss	 0.42669934034347534 	train_loss	 0.36831536889076233
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.8149211973844539 	train_auc	 0.8534811796255926
valid_accuracy	 0.7999460043196545 	train_accuracy	 0.8307450654970067
valid_loss	 0.427606999874115 	train_loss	 0.36933913826942444
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.8151920313029956 	train_auc	 0.8541367908783445
valid_accuracy	 0.802600791936645 	train_accuracy	 0.8320342599727343
valid_loss	 0.4299832284450531 	train_loss	 0.3701436519622803
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.8145697446087976 	train_auc	 0.8547504170264966
valid_accuracy	 0.8005759539236861 	train_accuracy	 0.8315304368442891
valid_loss	 0.42667239904403687 	train_loss	 0.36762744188308716
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.8146973534531565 	train_auc	 0.8545305722141044
valid_accuracy	 0.8004859611231101 	train_accuracy	 0.8314859818623673
valid_loss	 0.4281259775161743 	train_loss	 0.36813944578170776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.8149542554113232 	train_auc	 0.8548100929194056
valid_accuracy	 0.8020608351331894 	train_accuracy	 0.8321676249184992
valid_loss	 0.4295749068260193 	train_loss	 0.36855965852737427
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.8150772522963855 	train_auc	 0.8559142349593173
valid_accuracy	 0.8021508279337654 	train_accuracy	 0.832434354810029
valid_loss	 0.4279370903968811 	train_loss	 0.3668470084667206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.8150838593802308 	train_auc	 0.8562139952858219
valid_accuracy	 0.802690784737221 	train_accuracy	 0.8327603580107877
valid_loss	 0.42823830246925354 	train_loss	 0.3668704330921173
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.8147108615202137 	train_auc	 0.8553914911426729
valid_accuracy	 0.7975611951043916 	train_accuracy	 0.8310710686977654
valid_loss	 0.42836299538612366 	train_loss	 0.3675571084022522
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.814699698996181 	train_auc	 0.8562492831122654
valid_accuracy	 0.8000809935205183 	train_accuracy	 0.8320342599727343
valid_loss	 0.42772233486175537 	train_loss	 0.36614638566970825
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.8148994714389444 	train_auc	 0.8567528576222089
valid_accuracy	 0.8016558675305976 	train_accuracy	 0.8327010847015589
valid_loss	 0.4281853139400482 	train_loss	 0.36579158902168274
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.8148742469605861 	train_auc	 0.8567719383870773
valid_accuracy	 0.8015658747300216 	train_accuracy	 0.8328789046292454
valid_loss	 0.42853930592536926 	train_loss	 0.3658702075481415
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.8151285829512029 	train_auc	 0.857308643167344
valid_accuracy	 0.8011609071274298 	train_accuracy	 0.8328048129927094
valid_loss	 0.4289512038230896 	train_loss	 0.36548519134521484
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.8150919755242868 	train_auc	 0.8575827888625881
valid_accuracy	 0.8006659467242621 	train_accuracy	 0.8333382727757691
valid_loss	 0.42780572175979614 	train_loss	 0.36476629972457886
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.8147063343395807 	train_auc	 0.8581745868448976
valid_accuracy	 0.8025557955363571 	train_accuracy	 0.8337087309584494
valid_loss	 0.43021655082702637 	train_loss	 0.3654124140739441
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.8146785608494054 	train_auc	 0.8582355036255452
valid_accuracy	 0.8003959683225342 	train_accuracy	 0.8335753660126844
valid_loss	 0.4283827841281891 	train_loss	 0.36410850286483765
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.8147424217906938 	train_auc	 0.8582028277831556
valid_accuracy	 0.8012059035277178 	train_accuracy	 0.8337828225949855
valid_loss	 0.4280204474925995 	train_loss	 0.3640061318874359
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.8149784964571845 	train_auc	 0.8590640676758661
valid_accuracy	 0.8014758819294456 	train_accuracy	 0.8338717325588287
valid_loss	 0.4275156259536743 	train_loss	 0.3631522059440613
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.8148362152521225 	train_auc	 0.8580158319905606
valid_accuracy	 0.8002159827213823 	train_accuracy	 0.8337680042676783
valid_loss	 0.43091505765914917 	train_loss	 0.36499667167663574
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.8153516638745285 	train_auc	 0.859162948720257
valid_accuracy	 0.8023308135349172 	train_accuracy	 0.8345385572876534
valid_loss	 0.43071335554122925 	train_loss	 0.36434850096702576
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.8149356154091665 	train_auc	 0.8596679633370616
valid_accuracy	 0.802600791936645 	train_accuracy	 0.8341236441230514
valid_loss	 0.43043389916419983 	train_loss	 0.3638436198234558
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.815432412725594 	train_auc	 0.8594517181407799
valid_accuracy	 0.802690784737221 	train_accuracy	 0.8347015588880328
valid_loss	 0.4309377372264862 	train_loss	 0.36386197805404663
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.8153772161637192 	train_auc	 0.8602457437150178
valid_accuracy	 0.8018808495320374 	train_accuracy	 0.8349831071068697
valid_loss	 0.42905694246292114 	train_loss	 0.36220091581344604
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.8150568488980271 	train_auc	 0.8599913063899836
valid_accuracy	 0.8011609071274298 	train_accuracy	 0.8346719222334182
valid_loss	 0.4296054244041443 	train_loss	 0.3624008297920227
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.8153543598360291 	train_auc	 0.8610758800339057
valid_accuracy	 0.8030057595392368 	train_accuracy	 0.8351164720526347
valid_loss	 0.4297982454299927 	train_loss	 0.3616117835044861
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.8148288847236818 	train_auc	 0.8610330043026395
valid_accuracy	 0.79670626349892 	train_accuracy	 0.8334420010669196
valid_loss	 0.42802613973617554 	train_loss	 0.3616982400417328
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.8155772712020275 	train_auc	 0.8612074792384736
valid_accuracy	 0.8029157667386609 	train_accuracy	 0.8353980202714718
valid_loss	 0.43363597989082336 	train_loss	 0.36434119939804077
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 152
valid_auc	 0.8149682947580053 	train_auc	 0.8614348761483295
valid_accuracy	 0.7992260619150467 	train_accuracy	 0.8345978305968822
valid_loss	 0.4273350238800049 	train_loss	 0.36043307185173035
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.8154538052083604 	train_auc	 0.8621279191117446
valid_accuracy	 0.8019258459323254 	train_accuracy	 0.8356499318356944
valid_loss	 0.42897140979766846 	train_loss	 0.3600423336029053
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.8145330863146834 	train_auc	 0.8624625336701314
valid_accuracy	 0.7999460043196545 	train_accuracy	 0.8357832967814594
valid_loss	 0.4273805618286133 	train_loss	 0.35922008752822876
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.8152657604807199 	train_auc	 0.8619421446756015
valid_accuracy	 0.8000359971202304 	train_accuracy	 0.8361537549641397
valid_loss	 0.4299217164516449 	train_loss	 0.36026501655578613
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.814585739516652 	train_auc	 0.8632856074758046
valid_accuracy	 0.7999910007199424 	train_accuracy	 0.83652421314682
valid_loss	 0.42777809500694275 	train_loss	 0.3582197427749634
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.815619722704817 	train_auc	 0.8629227682552318
valid_accuracy	 0.8015208783297336 	train_accuracy	 0.8359759350364531
valid_loss	 0.4287622570991516 	train_loss	 0.3589702844619751
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.8153163789947635 	train_auc	 0.86279107790466
valid_accuracy	 0.8017908567314614 	train_accuracy	 0.8360203900183747
valid_loss	 0.4308021366596222 	train_loss	 0.35965925455093384
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.8152820153764757 	train_auc	 0.8635494237246378
valid_accuracy	 0.8013858891288697 	train_accuracy	 0.8366872147471993
valid_loss	 0.4297044575214386 	train_loss	 0.3583284020423889
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.815350471321328 	train_auc	 0.8640576291026211
valid_accuracy	 0.8000359971202304 	train_accuracy	 0.8372651295121807
valid_loss	 0.4283275008201599 	train_loss	 0.35746660828590393
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.8153631202979279 	train_auc	 0.8643225299889005
valid_accuracy	 0.8005759539236861 	train_accuracy	 0.8368353980202715
valid_loss	 0.4290216863155365 	train_loss	 0.35730352997779846
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.8152784377168744 	train_auc	 0.8641042235908455
valid_accuracy	 0.8018808495320374 	train_accuracy	 0.8372799478394879
valid_loss	 0.43125829100608826 	train_loss	 0.358477383852005
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.8154206115356293 	train_auc	 0.8648738324527309
valid_accuracy	 0.800755939524838 	train_accuracy	 0.83742813111256
valid_loss	 0.4285999536514282 	train_loss	 0.3565809726715088
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.8151932916791268 	train_auc	 0.8651320490817116
valid_accuracy	 0.798866090712743 	train_accuracy	 0.8369243079841148
valid_loss	 0.42838501930236816 	train_loss	 0.3564259111881256
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.8152974111817745 	train_auc	 0.8653835860106941
valid_accuracy	 0.8015658747300216 	train_accuracy	 0.8377985892952403
valid_loss	 0.43024522066116333 	train_loss	 0.35633376240730286
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.8151034432515081 	train_auc	 0.8652748566405846
valid_accuracy	 0.8017458603311735 	train_accuracy	 0.8378874992590837
valid_loss	 0.4313046336174011 	train_loss	 0.35697686672210693
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.8150711086692344 	train_auc	 0.8659453181815393
valid_accuracy	 0.8004409647228222 	train_accuracy	 0.8376948610040899
valid_loss	 0.4299459755420685 	train_loss	 0.3554810583591461
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.8151902452991502 	train_auc	 0.86493549207331
valid_accuracy	 0.7995410367170627 	train_accuracy	 0.8373836761306384
valid_loss	 0.4315853416919708 	train_loss	 0.35693907737731934
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.8154661207222169 	train_auc	 0.8660874805569134
valid_accuracy	 0.8033207343412527 	train_accuracy	 0.8381542291506134
valid_loss	 0.43215927481651306 	train_loss	 0.35666272044181824
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 170
valid_auc	 0.8149093114158257 	train_auc	 0.8670751712070587
valid_accuracy	 0.80071094312455 	train_accuracy	 0.8391026020982751
valid_loss	 0.4285227358341217 	train_loss	 0.3540147542953491
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.8151214558915548 	train_auc	 0.8674704225976526
valid_accuracy	 0.8003959683225342 	train_accuracy	 0.8389099638432814
valid_loss	 0.42902371287345886 	train_loss	 0.3535732626914978
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.8153265185229228 	train_auc	 0.8676113479915457
valid_accuracy	 0.8015208783297336 	train_accuracy	 0.8383616857329145
valid_loss	 0.43131694197654724 	train_loss	 0.3546581268310547
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.8149554423126127 	train_auc	 0.8672707737865911
valid_accuracy	 0.800755939524838 	train_accuracy	 0.8378134076225475
valid_loss	 0.4302234649658203 	train_loss	 0.3538956344127655
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.8149510451259305 	train_auc	 0.8675077338653823
valid_accuracy	 0.800845932325414 	train_accuracy	 0.838746962242902
valid_loss	 0.43109259009361267 	train_loss	 0.3537605106830597
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.8151607084127733 	train_auc	 0.8678397865700174
valid_accuracy	 0.7992710583153347 	train_accuracy	 0.8387025072609804
valid_loss	 0.43043047189712524 	train_loss	 0.35336676239967346
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.8148851834081825 	train_auc	 0.8683531215148901
valid_accuracy	 0.7984611231101512 	train_accuracy	 0.8390433287890463
valid_loss	 0.4293684959411621 	train_loss	 0.35267373919487
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.8156706972892475 	train_auc	 0.8692929071274837
valid_accuracy	 0.8014308855291576 	train_accuracy	 0.8398731551182502
valid_loss	 0.42920154333114624 	train_loss	 0.3516363501548767
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.8154361316829679 	train_auc	 0.8694319803043694
valid_accuracy	 0.8002609791216703 	train_accuracy	 0.8397546084997926
valid_loss	 0.429659366607666 	train_loss	 0.3514389395713806
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.8155570769243725 	train_auc	 0.8693067300700145
valid_accuracy	 0.8020158387329014 	train_accuracy	 0.8402139766463161
valid_loss	 0.4331817030906677 	train_loss	 0.35311636328697205
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.8146001123260772 	train_auc	 0.8701230349828142
valid_accuracy	 0.8015208783297336 	train_accuracy	 0.8404362515559244
valid_loss	 0.4308958649635315 	train_loss	 0.35122770071029663
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.8151318667114373 	train_auc	 0.8698485715786424
valid_accuracy	 0.8003959683225342 	train_accuracy	 0.8402880682828522
valid_loss	 0.43059802055358887 	train_loss	 0.35087987780570984
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 182
valid_auc	 0.8149936266226706 	train_auc	 0.8703865055278757
valid_accuracy	 0.7998110151187905 	train_accuracy	 0.8401991583190089
valid_loss	 0.42983946204185486 	train_loss	 0.35016733407974243
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.8158877193640854 	train_auc	 0.8703741532912217
valid_accuracy	 0.8012958963282938 	train_accuracy	 0.8407029814474543
valid_loss	 0.43174082040786743 	train_loss	 0.3509714603424072
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.8142925070752034 	train_auc	 0.8706141954070298
valid_accuracy	 0.798821094312455 	train_accuracy	 0.840065793373244
valid_loss	 0.430080771446228 	train_loss	 0.34997379779815674
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.8157689953236653 	train_auc	 0.8712430286148856
valid_accuracy	 0.8016108711303096 	train_accuracy	 0.8414883527947365
valid_loss	 0.4318540096282959 	train_loss	 0.35027042031288147
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.8150935071921414 	train_auc	 0.8717422528562725
valid_accuracy	 0.7989560835133189 	train_accuracy	 0.8409993479935984
valid_loss	 0.42938631772994995 	train_loss	 0.3487037420272827
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.8153531164156305 	train_auc	 0.8716169576999586
valid_accuracy	 0.8011159107271418 	train_accuracy	 0.8414290794855077
valid_loss	 0.4313723146915436 	train_loss	 0.34908005595207214
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.8143361398273714 	train_auc	 0.8725173532648914
valid_accuracy	 0.8006209503239741 	train_accuracy	 0.8411919862485923
valid_loss	 0.42931240797042847 	train_loss	 0.34768804907798767
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.8154305419430852 	train_auc	 0.8721192144991032
valid_accuracy	 0.8023758099352052 	train_accuracy	 0.8417847193408808
valid_loss	 0.4331265985965729 	train_loss	 0.3493327498435974
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.8151871537038866 	train_auc	 0.872029471492644
valid_accuracy	 0.798866090712743 	train_accuracy	 0.8411327129393634
valid_loss	 0.4314807653427124 	train_loss	 0.34840846061706543
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.8151398246019882 	train_auc	 0.8732006572777923
valid_accuracy	 0.80071094312455 	train_accuracy	 0.8424070890877837
valid_loss	 0.43067026138305664 	train_loss	 0.34696248173713684
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.8152256771285986 	train_auc	 0.8732859419425764
valid_accuracy	 0.8017008639308856 	train_accuracy	 0.842140359196254
valid_loss	 0.434733510017395 	train_loss	 0.34913375973701477
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.815168852816384 	train_auc	 0.8725842934943095
valid_accuracy	 0.7991360691144709 	train_accuracy	 0.8410438029755202
valid_loss	 0.43208277225494385 	train_loss	 0.3477734327316284
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.8151808574751411 	train_auc	 0.873161806944683
valid_accuracy	 0.80071094312455 	train_accuracy	 0.842288542469326
valid_loss	 0.43277090787887573 	train_loss	 0.3472929894924164
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 195
valid_auc	 0.815048094088039 	train_auc	 0.8742054592880795
valid_accuracy	 0.7995860331173507 	train_accuracy	 0.8421255408689468
valid_loss	 0.431179940700531 	train_loss	 0.345782607793808
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.8148503111179135 	train_auc	 0.8740049914650687
valid_accuracy	 0.7961213102951764 	train_accuracy	 0.8415772627585798
valid_loss	 0.43134868144989014 	train_loss	 0.3469545245170593
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.815048681886773 	train_auc	 0.8737390723477174
valid_accuracy	 0.8012508999280058 	train_accuracy	 0.8423626341058621
valid_loss	 0.4373592138290405 	train_loss	 0.34981676936149597
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.8150859844987302 	train_auc	 0.8744412735313933
valid_accuracy	 0.7962562994960403 	train_accuracy	 0.8424070890877837
valid_loss	 0.43233755230903625 	train_loss	 0.3462980389595032
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 199
valid_auc	 0.8145027242493146 	train_auc	 0.8749017281689888
valid_accuracy	 0.8003059755219583 	train_accuracy	 0.8431776421077589
valid_loss	 0.4316224455833435 	train_loss	 0.34485840797424316
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 200
valid_auc	 0.8153414565234384 	train_auc	 0.8752026909717017
valid_accuracy	 0.8015208783297336 	train_accuracy	 0.8432813703989094
valid_loss	 0.4330565929412842 	train_loss	 0.345000296831131
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 201
valid_auc	 0.8139170506339437 	train_auc	 0.8753595766819162
valid_accuracy	 0.8001709863210943 	train_accuracy	 0.8436666469088969
valid_loss	 0.4322544038295746 	train_loss	 0.3443833291530609
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 202
valid_auc	 0.8145386647507443 	train_auc	 0.8757454478466258
valid_accuracy	 0.8006209503239741 	train_accuracy	 0.8442593800011855
valid_loss	 0.43363022804260254 	train_loss	 0.34421780705451965
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 203
valid_auc	 0.8143179689338196 	train_auc	 0.8763891736604721
valid_accuracy	 0.7990910727141829 	train_accuracy	 0.8436073735996681
valid_loss	 0.4318019449710846 	train_loss	 0.34317827224731445
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 204
valid_auc	 0.8141796384144786 	train_auc	 0.8768814590867926
valid_accuracy	 0.8005309575233981 	train_accuracy	 0.844644656511173
valid_loss	 0.43251779675483704 	train_loss	 0.3427918553352356
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 205
valid_auc	 0.8144894592144263 	train_auc	 0.8768223574137078
valid_accuracy	 0.8000809935205183 	train_accuracy	 0.8444223816015648
valid_loss	 0.43289172649383545 	train_loss	 0.3427828848361969
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 206
valid_auc	 0.8147674597559923 	train_auc	 0.8768742539951861
valid_accuracy	 0.8004409647228222 	train_accuracy	 0.8451040246576966
valid_loss	 0.4334639310836792 	train_loss	 0.34291672706604004
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 207
valid_auc	 0.8147534204093102 	train_auc	 0.8777934809755626
valid_accuracy	 0.7999910007199424 	train_accuracy	 0.8455782111315274
valid_loss	 0.43241673707962036 	train_loss	 0.3417845070362091
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 208
valid_auc	 0.8137958849680138 	train_auc	 0.8776243471955558
valid_accuracy	 0.7998110151187905 	train_accuracy	 0.8450002963665462
valid_loss	 0.43278661370277405 	train_loss	 0.34171515703201294
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 209
valid_auc	 0.8144161765376631 	train_auc	 0.8767002543206582
valid_accuracy	 0.7985061195104391 	train_accuracy	 0.8435925552723609
valid_loss	 0.4343232214450836 	train_loss	 0.342875212430954
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 210
valid_auc	 0.8142644340337502 	train_auc	 0.8783209689417089
valid_accuracy	 0.8005759539236861 	train_accuracy	 0.8455041194949914
valid_loss	 0.43467938899993896 	train_loss	 0.3415493667125702
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 211
valid_auc	 0.8142671526028943 	train_auc	 0.878272805440132
valid_accuracy	 0.797066234701224 	train_accuracy	 0.8452373896034615
valid_loss	 0.4330591559410095 	train_loss	 0.34092843532562256
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 212
valid_auc	 0.8139571792013522 	train_auc	 0.8791880981683555
valid_accuracy	 0.7994960403167747 	train_accuracy	 0.8456967577499852
valid_loss	 0.43344324827194214 	train_loss	 0.33986896276474
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 213
valid_auc	 0.8141447604722986 	train_auc	 0.8788588130470237
valid_accuracy	 0.7997660187185025 	train_accuracy	 0.8459042143322861
valid_loss	 0.43453243374824524 	train_loss	 0.34030380845069885
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 214
valid_auc	 0.8136523433868207 	train_auc	 0.879842767362053
valid_accuracy	 0.8003959683225342 	train_accuracy	 0.8460079426234367
valid_loss	 0.43308526277542114 	train_loss	 0.33919036388397217
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 215
valid_auc	 0.8143056477680519 	train_auc	 0.8801292386011925
valid_accuracy	 0.7990910727141829 	train_accuracy	 0.8465265840791891
valid_loss	 0.4328005015850067 	train_loss	 0.3387148380279541
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 216
valid_auc	 0.8145161418857975 	train_auc	 0.8793224818833417
valid_accuracy	 0.8006209503239741 	train_accuracy	 0.8459042143322861
valid_loss	 0.4345826208591461 	train_loss	 0.3397686183452606
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 217
valid_auc	 0.8146571457589955 	train_auc	 0.8798640675321159
valid_accuracy	 0.7980561555075594 	train_accuracy	 0.8458597593503645
valid_loss	 0.4337480664253235 	train_loss	 0.3390081822872162
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 218
valid_auc	 0.8141702392866474 	train_auc	 0.880176573325177
valid_accuracy	 0.8013408927285817 	train_accuracy	 0.8464376741153459
valid_loss	 0.4355127811431885 	train_loss	 0.3393901586532593
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 219
valid_auc	 0.8131119811411558 	train_auc	 0.881085255363948
valid_accuracy	 0.794906407487401 	train_accuracy	 0.8458153043684429
valid_loss	 0.43324044346809387 	train_loss	 0.338813453912735
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 220
valid_auc	 0.8143568314731858 	train_auc	 0.8811906019152279
valid_accuracy	 0.7992710583153347 	train_accuracy	 0.8467636773161046
valid_loss	 0.4346962869167328 	train_loss	 0.33741530776023865
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 221
valid_auc	 0.8139560996863697 	train_auc	 0.8799102694414807
valid_accuracy	 0.7990010799136069 	train_accuracy	 0.8465265840791891
valid_loss	 0.4365331828594208 	train_loss	 0.3389398157596588
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 222
valid_auc	 0.8144936698880486 	train_auc	 0.8813415403486894
valid_accuracy	 0.7990460763138949 	train_accuracy	 0.8473712287357004
valid_loss	 0.4361422061920166 	train_loss	 0.3374713361263275
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 223
valid_auc	 0.813270274209805 	train_auc	 0.8827265403359876
valid_accuracy	 0.7983711303095752 	train_accuracy	 0.8480084168099105
valid_loss	 0.4333812892436981 	train_loss	 0.3356230854988098
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 224
valid_auc	 0.8142601724929296 	train_auc	 0.8819091644576423
valid_accuracy	 0.7999460043196545 	train_accuracy	 0.8475935036453085
valid_loss	 0.438847154378891 	train_loss	 0.33855104446411133
===== 设备: cuda =====
训练总段数: 19
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 448
实际用段数: 448
实际元素数: 67484
最后一次所用q.shpe: torch.Size([16, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 148
实际用段数: 148
实际元素数: 22224
最后一次所用q.shpe: torch.Size([4, 200])
===== 数据来自Valid_eval=====
epoch 225
valid_auc	 0.8138942112619865 	train_auc	 0.8830378709966414
valid_accuracy	 0.7986411087113031 	train_accuracy	 0.8482010550649043
valid_loss	 0.43343326449394226 	train_loss	 0.3351786434650421


Start testing ......................
 Best epoch: 183
@ 使用预设Q-matrix:  qm_fold3_trained_0.99.json
===== 设备: cuda =====
训练总段数: 140
实际用段数: 140
实际元素数: 21590
最后一次所用q.shpe: torch.Size([20, 200])
===== 数据来自Test=====

test_auc	 0.8215127038694726
test_accuracy	 0.8220009263547939
test_loss	 0.39882925152778625
=====第 4 次实验=====


train_data length:  435
valid_data length:  151




===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.6858599894086637 	train_auc	 0.7024184486307843
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5682573914527893 	train_loss	 0.5404765009880066
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.6927924709544535 	train_auc	 0.7093258236677036
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5386377573013306 	train_loss	 0.5193042755126953
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.690925161162355 	train_auc	 0.7053107749635308
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5428910851478577 	train_loss	 0.5209566354751587
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.6883535705278148 	train_auc	 0.7029213989355756
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5391834378242493 	train_loss	 0.5192070603370667
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.6857705692342069 	train_auc	 0.6997681951178203
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5413111448287964 	train_loss	 0.5200410485267639
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.6871612171746726 	train_auc	 0.6997325498347894
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5418578386306763 	train_loss	 0.5203368067741394
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.6811204175654211 	train_auc	 0.6938458579579668
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5390755534172058 	train_loss	 0.519143283367157
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.6831582545406418 	train_auc	 0.6967513180368978
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5433133244514465 	train_loss	 0.5212084650993347
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.6831157644152908 	train_auc	 0.6969349858520006
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5383514165878296 	train_loss	 0.5191714763641357
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.6829313177686 	train_auc	 0.6978008929498394
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.540107011795044 	train_loss	 0.5194434523582458
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.6890242355906511 	train_auc	 0.7021878324086313
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5389024019241333 	train_loss	 0.5190823674201965
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.6838187138307827 	train_auc	 0.6988854079967903
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.539648175239563 	train_loss	 0.5192615985870361
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.6807536809636282 	train_auc	 0.6955170417816114
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5418314337730408 	train_loss	 0.5203143954277039
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.6786255655387268 	train_auc	 0.6923824891554717
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5397543907165527 	train_loss	 0.5192922949790955
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.6794485414432332 	train_auc	 0.6937487748381415
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5395408868789673 	train_loss	 0.5192165970802307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.6822396964857118 	train_auc	 0.6958955180750322
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5380821824073792 	train_loss	 0.5193178653717041
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.6744263714789686 	train_auc	 0.6907837987991605
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5416315793991089 	train_loss	 0.5201903581619263
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.6927946826636844 	train_auc	 0.7088918016797522
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.538002610206604 	train_loss	 0.5194328427314758
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.682286615531289 	train_auc	 0.6975357064512518
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5417322516441345 	train_loss	 0.520244836807251
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.6869014843858995 	train_auc	 0.7012686264146146
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5382411479949951 	train_loss	 0.5190954804420471
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.6855145061221928 	train_auc	 0.7003220599472457
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5397976636886597 	train_loss	 0.5192964673042297
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.689078510495039 	train_auc	 0.7018460217903546
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5384572148323059 	train_loss	 0.5190238356590271
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.6906208255707565 	train_auc	 0.7047513131865788
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5388833284378052 	train_loss	 0.5190143585205078
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.6913087056539508 	train_auc	 0.7053610541627231
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5389518737792969 	train_loss	 0.5190198421478271
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.6914420574159936 	train_auc	 0.7063980062168591
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5385985970497131 	train_loss	 0.5189793705940247
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.6856966750384812 	train_auc	 0.700502492372721
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5386505722999573 	train_loss	 0.5189828872680664
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.691794461921899 	train_auc	 0.7059957574142244
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.538533627986908 	train_loss	 0.5189671516418457
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.6981930467624984 	train_auc	 0.7118558250762319
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5385581254959106 	train_loss	 0.5189457535743713
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.7016651606687367 	train_auc	 0.7139650053012827
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5387769341468811 	train_loss	 0.5189605951309204
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.7025926921011687 	train_auc	 0.7160247393708381
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5387709736824036 	train_loss	 0.5189368724822998
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.7007645603723391 	train_auc	 0.7136482827790708
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5379764437675476 	train_loss	 0.5191600322723389
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.6988412701289335 	train_auc	 0.7125412064200484
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5394335389137268 	train_loss	 0.5191070437431335
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.7032007580902976 	train_auc	 0.7164879904770481
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5380398035049438 	train_loss	 0.5190590023994446
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.6996876395350573 	train_auc	 0.7143430951453869
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5385363101959229 	train_loss	 0.5188940763473511
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.7011206675655889 	train_auc	 0.715461602523104
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5379451513290405 	train_loss	 0.5191630125045776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.6981394265680569 	train_auc	 0.7131350276200511
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5383093953132629 	train_loss	 0.5189298987388611
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.6953451410217165 	train_auc	 0.7103768019654622
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.539048969745636 	train_loss	 0.5189673900604248
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.7013883779125336 	train_auc	 0.7154100333159961
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.538244903087616 	train_loss	 0.5188971161842346
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.6944173014904862 	train_auc	 0.708011613240263
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5393877625465393 	train_loss	 0.5190632939338684
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.6854475441494299 	train_auc	 0.6993165872663337
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5385103821754456 	train_loss	 0.5188782811164856
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.6938143521421158 	train_auc	 0.7087758295533474
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5378734469413757 	train_loss	 0.5191655158996582
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.6893059039135139 	train_auc	 0.7046852656108877
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5408620834350586 	train_loss	 0.5196898579597473
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.6982532140564046 	train_auc	 0.712706088926957
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5381239652633667 	train_loss	 0.5189378261566162
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.703563362867134 	train_auc	 0.7178095876861492
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5383211374282837 	train_loss	 0.5188264846801758
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.70004002753567 	train_auc	 0.713331849229693
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5386536121368408 	train_loss	 0.5188543200492859
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.7013693363064427 	train_auc	 0.715489070842777
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5387046933174133 	train_loss	 0.5188490152359009
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.7047158064223612 	train_auc	 0.7178152406308038
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5380644798278809 	train_loss	 0.5188533663749695
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.706392744167665 	train_auc	 0.7201548829130744
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.538532018661499 	train_loss	 0.5187927484512329
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.7029490303685174 	train_auc	 0.7169100207837005
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5385133624076843 	train_loss	 0.5187809467315674
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.6993064442967991 	train_auc	 0.7149049399112377
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5394460558891296 	train_loss	 0.5189710259437561
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.7038774310797017 	train_auc	 0.7179417049598534
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5380384922027588 	train_loss	 0.518822431564331
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.7033868772733222 	train_auc	 0.7185648009054048
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5387600660324097 	train_loss	 0.5187888145446777
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.7037458838963349 	train_auc	 0.7188479942829725
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5384284257888794 	train_loss	 0.5187364816665649
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.7037781407401692 	train_auc	 0.7195329089840542
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5384538769721985 	train_loss	 0.5187156200408936
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.7041707796480805 	train_auc	 0.7194043430343919
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5382581353187561 	train_loss	 0.5186466574668884
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.7042952515626139 	train_auc	 0.7195952227265449
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5387357473373413 	train_loss	 0.518697202205658
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.6990651754288699 	train_auc	 0.7151752940460357
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5381356477737427 	train_loss	 0.5186667442321777
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
epoch 58
valid_auc	 0.6965840393004664 	train_auc	 0.7124160659737203
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5387893915176392 	train_loss	 0.5186951756477356
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.6956243280488997 	train_auc	 0.7112054592205851
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5380440354347229 	train_loss	 0.5186490416526794
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.6940295976651129 	train_auc	 0.7102210898524444
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5377923250198364 	train_loss	 0.5187883973121643
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.7061891238725414 	train_auc	 0.7209979307388141
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5389747023582458 	train_loss	 0.5187106132507324
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.7066355480278217 	train_auc	 0.7210154343349635
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5378265976905823 	train_loss	 0.5186747908592224
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.708775019094148 	train_auc	 0.721960565616677
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5392808318138123 	train_loss	 0.518782377243042
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.705669097115041 	train_auc	 0.7195087797523941
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5376454591751099 	train_loss	 0.5187259912490845
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.7120466872232385 	train_auc	 0.7248080721245667
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5389261841773987 	train_loss	 0.5186346173286438
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.7140698895055376 	train_auc	 0.7266778231473423
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5383487939834595 	train_loss	 0.5184635519981384
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.7101000364888008 	train_auc	 0.7233602207484774
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.53801429271698 	train_loss	 0.5184625387191772
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.7057767006203646 	train_auc	 0.7196600480439321
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5376182198524475 	train_loss	 0.5185810327529907
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.7078487365622022 	train_auc	 0.7217264229580947
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.53761225938797 	train_loss	 0.5185132026672363
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.7068504029255565 	train_auc	 0.7210165584254623
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.538427472114563 	train_loss	 0.5183914303779602
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.7098963171619206 	train_auc	 0.7240185527140981
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5375538468360901 	train_loss	 0.5183619856834412
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.7141114773415506 	train_auc	 0.7277356517604467
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5383549928665161 	train_loss	 0.5182485580444336
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.714666654870884 	train_auc	 0.7279659527395078
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5373523235321045 	train_loss	 0.5183767080307007
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.7095681534293283 	train_auc	 0.7235600579071695
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.538375735282898 	train_loss	 0.5182125568389893
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.7110851823965243 	train_auc	 0.7248489265231622
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5375579595565796 	train_loss	 0.5181275010108948
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.711175933997931 	train_auc	 0.7249675782158485
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.537575364112854 	train_loss	 0.5180010795593262
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.7124057818744796 	train_auc	 0.7262351686144597
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5370275974273682 	train_loss	 0.5188321471214294
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.7143137276973744 	train_auc	 0.7274951219726404
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5371155738830566 	train_loss	 0.5182016491889954
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.714839877918492 	train_auc	 0.7277405995560802
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.537796139717102 	train_loss	 0.5179201364517212
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.7132372690082902 	train_auc	 0.726607792171003
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5369330048561096 	train_loss	 0.5187394022941589
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.7172263671963952 	train_auc	 0.7298622705973254
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5370068550109863 	train_loss	 0.5178210735321045
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.7170865398578227 	train_auc	 0.7294955212086593
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5366600155830383 	train_loss	 0.5182803869247437
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.7192183194577187 	train_auc	 0.7311624160670798
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5376226305961609 	train_loss	 0.5175412893295288
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.7206430068136379 	train_auc	 0.7327154224453214
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5374343991279602 	train_loss	 0.5173277258872986
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.7202282508134166 	train_auc	 0.7321709077536549
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5381401777267456 	train_loss	 0.517606258392334
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.7198863271684194 	train_auc	 0.7321186838640733
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5366173982620239 	train_loss	 0.5173274874687195
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.7202127248346855 	train_auc	 0.7323216105433307
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5365036725997925 	train_loss	 0.5170819759368896
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.7221140190245947 	train_auc	 0.7332571863644819
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5378928780555725 	train_loss	 0.5172365307807922
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.721897475085233 	train_auc	 0.7331022851728387
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5359092354774475 	train_loss	 0.5174017548561096
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.7216901466010006 	train_auc	 0.7326255830033845
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5362576842308044 	train_loss	 0.5189700126647949
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.7230684870948252 	train_auc	 0.7334794590145377
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5366343259811401 	train_loss	 0.5166946649551392
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.7231752873425674 	train_auc	 0.7338614555224849
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5360550880432129 	train_loss	 0.5165551900863647
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.7229608450771516 	train_auc	 0.7339663630311573
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5359777212142944 	train_loss	 0.5187608003616333
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.7231819994949601 	train_auc	 0.7337684754021125
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5381588935852051 	train_loss	 0.5169146656990051
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.7236319722881855 	train_auc	 0.7341397481143541
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5394966006278992 	train_loss	 0.5176606774330139
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.7235105098387005 	train_auc	 0.7341443170652191
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5358044505119324 	train_loss	 0.5159157514572144
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.7234858784401252 	train_auc	 0.734241140247758
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5351800322532654 	train_loss	 0.5178896188735962
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.723219103393104 	train_auc	 0.7337158719764398
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5347228646278381 	train_loss	 0.5175143480300903
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.7231479325706854 	train_auc	 0.7334498510515104
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5339863300323486 	train_loss	 0.5163153409957886
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.7226521410847337 	train_auc	 0.7327641627604728
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5342569351196289 	train_loss	 0.5145022869110107
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.7226154058047949 	train_auc	 0.7328053897819338
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5346025228500366 	train_loss	 0.5175545811653137
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.722470181235487 	train_auc	 0.7328245988708634
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.535140335559845 	train_loss	 0.5186179876327515
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.7220895691842399 	train_auc	 0.7321844355537044
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5355507731437683 	train_loss	 0.5194193720817566
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.7212941296098361 	train_auc	 0.7313703900924207
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5333324670791626 	train_loss	 0.5145742893218994
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.7212637653729059 	train_auc	 0.7315271550897124
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5358009934425354 	train_loss	 0.5199249386787415
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.719915519529563 	train_auc	 0.7299231602153218
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5326323509216309 	train_loss	 0.5131391882896423
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.7193387860878736 	train_auc	 0.729089797127465
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5323759317398071 	train_loss	 0.5123069882392883
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.7185217465869997 	train_auc	 0.7279780495018373
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5306784510612488 	train_loss	 0.5112780332565308
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.7182696667523072 	train_auc	 0.7276509101311409
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5325649976730347 	train_loss	 0.5169204473495483
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.7163652365567719 	train_auc	 0.7253462729672014
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5283015966415405 	train_loss	 0.5097330212593079
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.716306153110424 	train_auc	 0.7251230068866125
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5379073023796082 	train_loss	 0.524495005607605
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.7167202984148129 	train_auc	 0.7258568492512623
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5322338938713074 	train_loss	 0.5112210512161255
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.7167404788861048 	train_auc	 0.7262172917041225
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5372564792633057 	train_loss	 0.5148925185203552
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.7170117158639379 	train_auc	 0.7264729621475342
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5309438109397888 	train_loss	 0.5126048922538757
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.7158710625895117 	train_auc	 0.7248613433678418
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5300118327140808 	train_loss	 0.5110886693000793
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.7145635187981365 	train_auc	 0.7234900151783465
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5305538177490234 	train_loss	 0.5147136449813843
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.7131228103047031 	train_auc	 0.7219330108816827
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5299785137176514 	train_loss	 0.5086926221847534
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.7129221939728635 	train_auc	 0.7213859175568302
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.528362512588501 	train_loss	 0.5125791430473328
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.7120013691910598 	train_auc	 0.7204154292545722
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5255438089370728 	train_loss	 0.5060223340988159
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.710696169151258 	train_auc	 0.7188638774190179
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5234750509262085 	train_loss	 0.5037307143211365
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.7098261256535394 	train_auc	 0.7177304035989833
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5199927091598511 	train_loss	 0.5028709769248962
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.7098481217070359 	train_auc	 0.7175653613965609
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5201414823532104 	train_loss	 0.5038579106330872
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.7091036559784663 	train_auc	 0.7165670238558938
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.517906904220581 	train_loss	 0.5021347999572754
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.7113136596625576 	train_auc	 0.7187538852328432
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5545618534088135 	train_loss	 0.5447968244552612
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.7119793291234493 	train_auc	 0.7197988580114364
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.522293746471405 	train_loss	 0.5018953680992126
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.710528722956119 	train_auc	 0.7179204364209879
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5167558789253235 	train_loss	 0.49943575263023376
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.7094054002391001 	train_auc	 0.7165364964338485
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860160121997712
valid_loss	 0.5134117007255554 	train_loss	 0.4977589547634125
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.7098162719937566 	train_auc	 0.7166165806230005
valid_accuracy	 0.7728354787515429 	train_accuracy	 0.7872359893252001
valid_loss	 0.5248498916625977 	train_loss	 0.5123270750045776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.7117251696218678 	train_auc	 0.7181306033215207
valid_accuracy	 0.7725268912008464 	train_accuracy	 0.7871292413267251
valid_loss	 0.515279233455658 	train_loss	 0.5017394423484802
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.7146342879917646 	train_auc	 0.7207386882316834
valid_accuracy	 0.7744225004408394 	train_accuracy	 0.7881662218833397
valid_loss	 0.5259718894958496 	train_loss	 0.514000415802002
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.7172048938105031 	train_auc	 0.7235147624523841
valid_accuracy	 0.7710280373831776 	train_accuracy	 0.7860617613419748
valid_loss	 0.5030191540718079 	train_loss	 0.4861484467983246
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.7165345643552864 	train_auc	 0.7227434151469904
valid_accuracy	 0.7713366249338741 	train_accuracy	 0.7861837590545178
valid_loss	 0.5001696348190308 	train_loss	 0.48291656374931335
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.7167239956003931 	train_auc	 0.7226216020361916
valid_accuracy	 0.7726591430082878 	train_accuracy	 0.7867632481890965
valid_loss	 0.500690221786499 	train_loss	 0.4854961931705475
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.7172599774742366 	train_auc	 0.723231461919818
valid_accuracy	 0.7708957855757362 	train_accuracy	 0.7860007624857034
valid_loss	 0.526517927646637 	train_loss	 0.5032105445861816
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.7184575905140078 	train_auc	 0.7237672044193941
valid_accuracy	 0.7742461646975842 	train_accuracy	 0.7865497521921464
valid_loss	 0.5268449783325195 	train_loss	 0.5150712132453918
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.7186746131068596 	train_auc	 0.7240708637103236
valid_accuracy	 0.7739816610827015 	train_accuracy	 0.7862295081967213
valid_loss	 0.5075536966323853 	train_loss	 0.4939304292201996
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.720364876125192 	train_auc	 0.7260695636754655
valid_accuracy	 0.7721742197143361 	train_accuracy	 0.7864430041936714
valid_loss	 0.5053182244300842 	train_loss	 0.48479893803596497


Start testing ......................
 Best epoch: 95
===== 设备: cuda =====
训练总段数: 150
实际用段数: 150
实际元素数: 23039
最后一次所用q.shpe: torch.Size([6, 200])
===== 数据来自Test=====

test_auc	 0.7318851656688392
test_accuracy	 0.7894873909457876
test_loss	 0.5126863718032837
@ 使用预设Q-matrix:  qm_fold4_trained_0.99.json


===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.6766015214864965 	train_auc	 0.6863024302078895
valid_accuracy	 0.7737612414036326 	train_accuracy	 0.7881357224552039
valid_loss	 0.5395507216453552 	train_loss	 0.5085322260856628
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.7045805620534142 	train_auc	 0.7151075043374685
valid_accuracy	 0.7753482630929289 	train_accuracy	 0.7924818909645445
valid_loss	 0.5008906126022339 	train_loss	 0.4745020568370819
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.7203663671033054 	train_auc	 0.730217627681361
valid_accuracy	 0.7766707811673427 	train_accuracy	 0.7940221120853984
valid_loss	 0.494936466217041 	train_loss	 0.4688320755958557
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.7306138431717036 	train_auc	 0.7401563961905272
valid_accuracy	 0.7805942514547699 	train_accuracy	 0.7970415554708349
valid_loss	 0.4889904260635376 	train_loss	 0.4636220335960388
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.7371523268738109 	train_auc	 0.7463891606892704
valid_accuracy	 0.7811232586845354 	train_accuracy	 0.7980632863133816
valid_loss	 0.479885071516037 	train_loss	 0.45622482895851135
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.741674391968947 	train_auc	 0.7507133460330948
valid_accuracy	 0.7825780285663904 	train_accuracy	 0.7986580251620282
valid_loss	 0.47705310583114624 	train_loss	 0.4538179039955139
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.7454470287441544 	train_auc	 0.7545095994397388
valid_accuracy	 0.7827984482454593 	train_accuracy	 0.7987342737323675
valid_loss	 0.4726671874523163 	train_loss	 0.44992512464523315
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.7488766580268061 	train_auc	 0.7581745651597627
valid_accuracy	 0.7844736378063834 	train_accuracy	 0.7995882577201677
valid_loss	 0.4702887237071991 	train_loss	 0.44745123386383057
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.7515606387015731 	train_auc	 0.7612091753559277
valid_accuracy	 0.7854875683301005 	train_accuracy	 0.8010674799847503
valid_loss	 0.4696981906890869 	train_loss	 0.4463195204734802
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.7545779107532191 	train_auc	 0.764280287383788
valid_accuracy	 0.7858843237524246 	train_accuracy	 0.8015707205489897
valid_loss	 0.4645448923110962 	train_loss	 0.44182097911834717
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.7566036988647186 	train_auc	 0.7666017312907263
valid_accuracy	 0.7872068418268383 	train_accuracy	 0.8027296988181472
valid_loss	 0.464511901140213 	train_loss	 0.4411848783493042
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.7585487595892862 	train_auc	 0.7686594266500226
valid_accuracy	 0.7873831775700935 	train_accuracy	 0.8041174227983225
valid_loss	 0.46475204825401306 	train_loss	 0.44094118475914
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.7609635664478164 	train_auc	 0.7710229638056023
valid_accuracy	 0.7891024510668313 	train_accuracy	 0.8046054136484941
valid_loss	 0.4610648453235626 	train_loss	 0.4376582205295563
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.7630387659041012 	train_auc	 0.7732494483356502
valid_accuracy	 0.7903808852054311 	train_accuracy	 0.8059016393442623
valid_loss	 0.4590795040130615 	train_loss	 0.4356405735015869
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.7645288637352627 	train_auc	 0.7750117540045993
valid_accuracy	 0.7909539763710104 	train_accuracy	 0.8062981319100266
valid_loss	 0.4580996334552765 	train_loss	 0.4343734383583069
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.7662281221381542 	train_auc	 0.7770535323530445
valid_accuracy	 0.7917034032798448 	train_accuracy	 0.8070453678993519
valid_loss	 0.45776763558387756 	train_loss	 0.43354398012161255
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.7680626194082283 	train_auc	 0.7790530148953356
valid_accuracy	 0.7924087462528655 	train_accuracy	 0.8077468547464735
valid_loss	 0.45485565066337585 	train_loss	 0.4308794438838959
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.7698334942764432 	train_auc	 0.7809319888525176
valid_accuracy	 0.793334508904955 	train_accuracy	 0.8080975981700343
valid_loss	 0.4532034397125244 	train_loss	 0.4292895793914795
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.7709814924061513 	train_auc	 0.7824220150533111
valid_accuracy	 0.7935108446482102 	train_accuracy	 0.8086923370186809
valid_loss	 0.4539625942707062 	train_loss	 0.4293226897716522
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.7725349540562522 	train_auc	 0.7842506752451722
valid_accuracy	 0.793554928584024 	train_accuracy	 0.8090583301563096
valid_loss	 0.4529455304145813 	train_loss	 0.4280272424221039
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.7739504809746847 	train_auc	 0.7859700857312991
valid_accuracy	 0.7946129430435549 	train_accuracy	 0.8095920701486847
valid_loss	 0.45137661695480347 	train_loss	 0.42637038230895996
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.7753660023913529 	train_auc	 0.7876406653390177
valid_accuracy	 0.7953623699523894 	train_accuracy	 0.809775066717499
valid_loss	 0.45040422677993774 	train_loss	 0.42519551515579224
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.7769220553724183 	train_auc	 0.7892570037778953
valid_accuracy	 0.7964203844119203 	train_accuracy	 0.8099733130003812
valid_loss	 0.44824787974357605 	train_loss	 0.423348069190979
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.7785073007146275 	train_auc	 0.791067888683837
valid_accuracy	 0.7961999647328514 	train_accuracy	 0.8105680518490278
valid_loss	 0.44758039712905884 	train_loss	 0.4223310351371765
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.7790150750431291 	train_auc	 0.7916216187053614
valid_accuracy	 0.7958032093105273 	train_accuracy	 0.8104918032786885
valid_loss	 0.4508007764816284 	train_loss	 0.42465946078300476
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.7805903621920345 	train_auc	 0.7935800636485757
valid_accuracy	 0.7958032093105273 	train_accuracy	 0.8107052992756386
valid_loss	 0.4493614733219147 	train_loss	 0.42294129729270935
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.7822261357371729 	train_auc	 0.7951086352305813
valid_accuracy	 0.7980074061012167 	train_accuracy	 0.8116202821197103
valid_loss	 0.44515204429626465 	train_loss	 0.41954511404037476
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.7832085857804107 	train_auc	 0.7963675999974869
valid_accuracy	 0.7969934755774996 	train_accuracy	 0.8116050324056424
valid_loss	 0.4462416172027588 	train_loss	 0.4199120104312897
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.7842916630918954 	train_auc	 0.7978034762840187
valid_accuracy	 0.7980074061012167 	train_accuracy	 0.812306519252764
valid_loss	 0.4449397325515747 	train_loss	 0.4184376895427704
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.7857851830204243 	train_auc	 0.7992189592460588
valid_accuracy	 0.7986686651384236 	train_accuracy	 0.8126115135341212
valid_loss	 0.4429134428501129 	train_loss	 0.4167812764644623
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.7867741471525416 	train_auc	 0.800505367445025
valid_accuracy	 0.7989331687533063 	train_accuracy	 0.8132215020968356
valid_loss	 0.4423999786376953 	train_loss	 0.41594913601875305
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.7879252757861116 	train_auc	 0.801825522555245
valid_accuracy	 0.7995503438546994 	train_accuracy	 0.8134807472359893
valid_loss	 0.44049257040023804 	train_loss	 0.41428494453430176
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.7889289571376142 	train_auc	 0.8030429568100815
valid_accuracy	 0.8005642743784165 	train_accuracy	 0.8140907357987037
valid_loss	 0.4393876791000366 	train_loss	 0.4131845533847809
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.7900822369610085 	train_auc	 0.8042349054583755
valid_accuracy	 0.8014459530946922 	train_accuracy	 0.8141212352268395
valid_loss	 0.4381992816925049 	train_loss	 0.4122365117073059
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.7910651766612652 	train_auc	 0.8054602062727357
valid_accuracy	 0.8005642743784165 	train_accuracy	 0.8145177277926039
valid_loss	 0.43842747807502747 	train_loss	 0.41166940331459045
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.7920981439039039 	train_auc	 0.8064972558033543
valid_accuracy	 0.801490037030506 	train_accuracy	 0.8147769729317575
valid_loss	 0.43666723370552063 	train_loss	 0.41038909554481506
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.7926969339184966 	train_auc	 0.8074869476639612
valid_accuracy	 0.8007406101216716 	train_accuracy	 0.814395730080061
valid_loss	 0.4371386766433716 	train_loss	 0.41014230251312256
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.7937712414177567 	train_auc	 0.8087849085543944
valid_accuracy	 0.8011814494798095 	train_accuracy	 0.8148227220739611
valid_loss	 0.4372689425945282 	train_loss	 0.40978381037712097
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.7943905805218465 	train_auc	 0.8091237533988459
valid_accuracy	 0.802768471169106 	train_accuracy	 0.8150362180709112
valid_loss	 0.43569400906562805 	train_loss	 0.40877416729927063
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.7952293519915324 	train_auc	 0.8104762250739224
valid_accuracy	 0.802151296067713 	train_accuracy	 0.8156614563476935
valid_loss	 0.43491247296333313 	train_loss	 0.40763700008392334
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.7958949169189034 	train_auc	 0.81147800056173
valid_accuracy	 0.8018867924528302 	train_accuracy	 0.8153259626382006
valid_loss	 0.4345070421695709 	train_loss	 0.4069213271141052
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.7966054202567192 	train_auc	 0.8121767672931466
valid_accuracy	 0.8030329747839887 	train_accuracy	 0.815935951200915
valid_loss	 0.43486762046813965 	train_loss	 0.4068455398082733
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.7970390528101037 	train_auc	 0.8127526694121354
valid_accuracy	 0.8014018691588785 	train_accuracy	 0.8155852077773542
valid_loss	 0.4368739426136017 	train_loss	 0.40811845660209656
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.7982731260416009 	train_auc	 0.8141394977449721
valid_accuracy	 0.8012255334156233 	train_accuracy	 0.8146397255051467
valid_loss	 0.432525098323822 	train_loss	 0.40557488799095154
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.7988393841241466 	train_auc	 0.8150145655581855
valid_accuracy	 0.8032533944630577 	train_accuracy	 0.8160731986275257
valid_loss	 0.4332175850868225 	train_loss	 0.4046294689178467
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.7997386915059439 	train_auc	 0.8157318154898332
valid_accuracy	 0.803385646270499 	train_accuracy	 0.8163324437666793
valid_loss	 0.4335435628890991 	train_loss	 0.4048384130001068
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.8003968400550973 	train_auc	 0.8167360417161516
valid_accuracy	 0.8037824016928231 	train_accuracy	 0.8163324437666793
valid_loss	 0.4303644001483917 	train_loss	 0.40248242020606995
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.8004596096834968 	train_auc	 0.8169709178679807
valid_accuracy	 0.8037824016928231 	train_accuracy	 0.8165154403354937
valid_loss	 0.43361276388168335 	train_loss	 0.40419143438339233
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.8015660254789563 	train_auc	 0.8184138933459838
valid_accuracy	 0.8035619820137542 	train_accuracy	 0.8168661837590545
valid_loss	 0.4324600398540497 	train_loss	 0.4028315246105194
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.8016350726203723 	train_auc	 0.8184542092042975
valid_accuracy	 0.8040469053077058 	train_accuracy	 0.8166069386199009
valid_loss	 0.4297020435333252 	train_loss	 0.401296466588974
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.8019635224447058 	train_auc	 0.8193078570790027
valid_accuracy	 0.8047522482807266 	train_accuracy	 0.8173846740373618
valid_loss	 0.4308868944644928 	train_loss	 0.40122127532958984
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.8027663783973271 	train_auc	 0.8202938510551828
valid_accuracy	 0.8048404161523541 	train_accuracy	 0.8176134197483798
valid_loss	 0.4290163516998291 	train_loss	 0.39976567029953003
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.8032456150746315 	train_auc	 0.8209446455308229
valid_accuracy	 0.8035619820137542 	train_accuracy	 0.8175981700343119
valid_loss	 0.42850667238235474 	train_loss	 0.3992387056350708
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.803628576379216 	train_auc	 0.8213151294440123
valid_accuracy	 0.8043114089225886 	train_accuracy	 0.818131910026687
valid_loss	 0.4311746060848236 	train_loss	 0.4005383253097534
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.8043857071691036 	train_auc	 0.822169400200353
valid_accuracy	 0.8025039675542233 	train_accuracy	 0.8170491803278689
valid_loss	 0.4273661971092224 	train_loss	 0.3985707461833954
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.8046523721808396 	train_auc	 0.8226753791893235
valid_accuracy	 0.8042673249867748 	train_accuracy	 0.818574151734655
valid_loss	 0.42813464999198914 	train_loss	 0.3979617655277252
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.8049872645711174 	train_auc	 0.8230034228099415
valid_accuracy	 0.8043995767942161 	train_accuracy	 0.8185589020205871
valid_loss	 0.4285884201526642 	train_loss	 0.39806458353996277
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.8053739175595178 	train_auc	 0.8235389945528427
valid_accuracy	 0.8034297302063128 	train_accuracy	 0.8175524208921082
valid_loss	 0.4268779754638672 	train_loss	 0.3971835970878601
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.8055309049008055 	train_auc	 0.8239534970480304
valid_accuracy	 0.8045759125374713 	train_accuracy	 0.819001143728555
valid_loss	 0.42714932560920715 	train_loss	 0.39672765135765076
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.8061773016815075 	train_auc	 0.8250046550896573
valid_accuracy	 0.8042673249867748 	train_accuracy	 0.8195196340068623
valid_loss	 0.4277711510658264 	train_loss	 0.39640071988105774
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.8065568353869603 	train_auc	 0.8254353352243051
valid_accuracy	 0.8046199964732851 	train_accuracy	 0.8196416317194053
valid_loss	 0.426615446805954 	train_loss	 0.39557206630706787
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.8068187413726148 	train_auc	 0.8257528824943432
valid_accuracy	 0.8041350731793334 	train_accuracy	 0.8198093785741517
valid_loss	 0.427676260471344 	train_loss	 0.39597246050834656
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.807238949621214 	train_auc	 0.8266516364014496
valid_accuracy	 0.8046640804090989 	train_accuracy	 0.8190926420129623
valid_loss	 0.4259425103664398 	train_loss	 0.3944912850856781
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.8072970867641097 	train_auc	 0.8267001783070234
valid_accuracy	 0.805281255510492 	train_accuracy	 0.8198856271444911
valid_loss	 0.42837560176849365 	train_loss	 0.395999014377594
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.8073488528639967 	train_auc	 0.8272544268204751
valid_accuracy	 0.8035178980779404 	train_accuracy	 0.8190468928707587
valid_loss	 0.4261724054813385 	train_loss	 0.3941330909729004
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.8081579148066991 	train_auc	 0.8277724078605833
valid_accuracy	 0.8044436607300299 	train_accuracy	 0.8196263820053374
valid_loss	 0.42558613419532776 	train_loss	 0.393598735332489
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.808131764921189 	train_auc	 0.8280216469301263
valid_accuracy	 0.8053694233821196 	train_accuracy	 0.8199771254288982
valid_loss	 0.4276544749736786 	train_loss	 0.3944835066795349
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.8090220329043134 	train_auc	 0.8290567828798711
valid_accuracy	 0.805281255510492 	train_accuracy	 0.8204803659931377
valid_loss	 0.42611953616142273 	train_loss	 0.39335954189300537
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.8090550324863224 	train_auc	 0.8292159758020288
valid_accuracy	 0.8056339269970023 	train_accuracy	 0.8206786122760198
valid_loss	 0.4260776937007904 	train_loss	 0.392930805683136
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.809272434700908 	train_auc	 0.829765707905131
valid_accuracy	 0.805898430611885 	train_accuracy	 0.8207548608463592
valid_loss	 0.42698442935943604 	train_loss	 0.3932456076145172
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.8093630487582084 	train_auc	 0.8299893383127142
valid_accuracy	 0.8048404161523541 	train_accuracy	 0.8203431185665269
valid_loss	 0.4245821237564087 	train_loss	 0.39167091250419617
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.8099832131269367 	train_auc	 0.8306297242357408
valid_accuracy	 0.8049285840239817 	train_accuracy	 0.8211208539839878
valid_loss	 0.4241187572479248 	train_loss	 0.39105379581451416
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.809624316539209 	train_auc	 0.8303550928882021
valid_accuracy	 0.8029007229765474 	train_accuracy	 0.8195806328631338
valid_loss	 0.424275279045105 	train_loss	 0.3916901648044586
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.8098994377626068 	train_auc	 0.8312387407058317
valid_accuracy	 0.8045318286016575 	train_accuracy	 0.8204498665650019
valid_loss	 0.4239167273044586 	train_loss	 0.39049267768859863
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.8102865088850906 	train_auc	 0.8320732182056713
valid_accuracy	 0.8057220948686299 	train_accuracy	 0.8210293556995807
valid_loss	 0.4289909899234772 	train_loss	 0.3931409418582916
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.8100819257812222 	train_auc	 0.8317440774561348
valid_accuracy	 0.8043114089225886 	train_accuracy	 0.8199923751429661
valid_loss	 0.4236677289009094 	train_loss	 0.39004966616630554
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.8108353868943508 	train_auc	 0.832577618213892
valid_accuracy	 0.8047963322165403 	train_accuracy	 0.8213495996950058
valid_loss	 0.4244994521141052 	train_loss	 0.38975927233695984
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.8108228263665539 	train_auc	 0.8329152186777173
valid_accuracy	 0.8046199964732851 	train_accuracy	 0.8206633625619519
valid_loss	 0.4235199987888336 	train_loss	 0.3890291154384613
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.8112990150664604 	train_auc	 0.8337253422660615
valid_accuracy	 0.8056780109328161 	train_accuracy	 0.8216850934044987
valid_loss	 0.42353659868240356 	train_loss	 0.38840407133102417
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.8114884298062743 	train_auc	 0.8339668558058853
valid_accuracy	 0.8035178980779404 	train_accuracy	 0.82110560426992
valid_loss	 0.4233325719833374 	train_loss	 0.38823235034942627
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.8113983274130497 	train_auc	 0.8339036772188596
valid_accuracy	 0.8059425145476988 	train_accuracy	 0.8221578345406023
valid_loss	 0.42348432540893555 	train_loss	 0.38823020458221436
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.811909050687193 	train_auc	 0.83471556713637
valid_accuracy	 0.8051930876388644 	train_accuracy	 0.8219443385436523
valid_loss	 0.42329275608062744 	train_loss	 0.38756856322288513
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.8119795557961367 	train_auc	 0.8347211094694136
valid_accuracy	 0.8043114089225886 	train_accuracy	 0.8213038505528021
valid_loss	 0.42250174283981323 	train_loss	 0.38729190826416016
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.8122185854460136 	train_auc	 0.8352304835435252
valid_accuracy	 0.8050608358314231 	train_accuracy	 0.822081585970263
valid_loss	 0.4240807592868805 	train_loss	 0.38754042983055115
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.8122217049463469 	train_auc	 0.8355608237377208
valid_accuracy	 0.8063833539058367 	train_accuracy	 0.8228440716736561
valid_loss	 0.42460906505584717 	train_loss	 0.38762205839157104
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.8123630507718541 	train_auc	 0.835642851234617
valid_accuracy	 0.8051490037030506 	train_accuracy	 0.8228745711017919
valid_loss	 0.42248985171318054 	train_loss	 0.38641107082366943
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.8124732786187279 	train_auc	 0.8358452552740113
valid_accuracy	 0.8016222888379475 	train_accuracy	 0.8208921082729699
valid_loss	 0.42209041118621826 	train_loss	 0.38671985268592834
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.8130955061490523 	train_auc	 0.836459868691629
valid_accuracy	 0.8064715217774643 	train_accuracy	 0.8226763248189096
valid_loss	 0.426131933927536 	train_loss	 0.38835012912750244
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.8131456217196624 	train_auc	 0.8366207926855018
valid_accuracy	 0.8025039675542233 	train_accuracy	 0.8207243614182234
valid_loss	 0.4215778112411499 	train_loss	 0.38619863986968994
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.8133418366400972 	train_auc	 0.8371110330248441
valid_accuracy	 0.8070886968788573 	train_accuracy	 0.8233168128097598
valid_loss	 0.4247937500476837 	train_loss	 0.38695552945137024
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.813130304807973 	train_auc	 0.8369275753718027
valid_accuracy	 0.8024598836184095 	train_accuracy	 0.8217155928326344
valid_loss	 0.42166659235954285 	train_loss	 0.3856339752674103
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.8135914901967529 	train_auc	 0.8380120427174964
valid_accuracy	 0.8041791571151472 	train_accuracy	 0.8228745711017919
valid_loss	 0.421485960483551 	train_loss	 0.38423338532447815
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.8133769488995806 	train_auc	 0.8380362645863808
valid_accuracy	 0.8043554928584024 	train_accuracy	 0.8234693099504384
valid_loss	 0.4215974509716034 	train_loss	 0.38412949442863464
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.8132498361382043 	train_auc	 0.8381213968129388
valid_accuracy	 0.8049726679597955 	train_accuracy	 0.8234845596645063
valid_loss	 0.4217391014099121 	train_loss	 0.3840140402317047
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.8134125233072615 	train_auc	 0.8389154430035954
valid_accuracy	 0.8036501498853817 	train_accuracy	 0.8233930613800992
valid_loss	 0.4219624400138855 	train_loss	 0.3834216296672821
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.813897107699423 	train_auc	 0.839217097459072
valid_accuracy	 0.8040909892435196 	train_accuracy	 0.8233625619519634
valid_loss	 0.42129507660865784 	train_loss	 0.38308438658714294
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.8138683169670702 	train_auc	 0.8393419537718239
valid_accuracy	 0.8063392699700229 	train_accuracy	 0.8242012962256958
valid_loss	 0.4233815670013428 	train_loss	 0.38379359245300293
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.8145891966322731 	train_auc	 0.8402444269943568
valid_accuracy	 0.8052371715746782 	train_accuracy	 0.8240335493709493
valid_loss	 0.4208977520465851 	train_loss	 0.38203543424606323
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.8143807622934254 	train_auc	 0.8398637336294539
valid_accuracy	 0.8057220948686299 	train_accuracy	 0.8236828059473885
valid_loss	 0.42109182476997375 	train_loss	 0.38239529728889465
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.8146133603808867 	train_auc	 0.8408666995747271
valid_accuracy	 0.8065596896490919 	train_accuracy	 0.8243232939382387
valid_loss	 0.4214458763599396 	train_loss	 0.38171911239624023
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.8146675582605749 	train_auc	 0.8406437335281337
valid_accuracy	 0.8028566390407336 	train_accuracy	 0.8236980556614564
valid_loss	 0.4208328425884247 	train_loss	 0.38183608651161194
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.8144601252428216 	train_auc	 0.8413738213199058
valid_accuracy	 0.8051930876388644 	train_accuracy	 0.8248265345024781
valid_loss	 0.4210755527019501 	train_loss	 0.38092318177223206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.8146905501334019 	train_auc	 0.840918427786026
valid_accuracy	 0.8016663727737613 	train_accuracy	 0.8234693099504384
valid_loss	 0.4210875630378723 	train_loss	 0.38173961639404297
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.8147564227568418 	train_auc	 0.8415917337985127
valid_accuracy	 0.8033415623346852 	train_accuracy	 0.8239420510865422
valid_loss	 0.42015767097473145 	train_loss	 0.38084474205970764
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.8148752058471342 	train_auc	 0.8420873650712556
valid_accuracy	 0.8041791571151472 	train_accuracy	 0.824506290507053
valid_loss	 0.42076238989830017 	train_loss	 0.38032421469688416
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.815071998452816 	train_auc	 0.8425951366596501
valid_accuracy	 0.8064274378416505 	train_accuracy	 0.8249637819290888
valid_loss	 0.4211443364620209 	train_loss	 0.38002052903175354
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.8151490176506391 	train_auc	 0.8424662921069921
valid_accuracy	 0.8029448069123611 	train_accuracy	 0.8246892870758673
valid_loss	 0.42128047347068787 	train_loss	 0.38021859526634216
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.8154065057195955 	train_auc	 0.843094724371461
valid_accuracy	 0.8079703755951332 	train_accuracy	 0.8249790316431567
valid_loss	 0.4233965277671814 	train_loss	 0.3809678554534912
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.8151327159231477 	train_auc	 0.8427659603927251
valid_accuracy	 0.8012696173514371 	train_accuracy	 0.8245825390773923
valid_loss	 0.4207664430141449 	train_loss	 0.38035455346107483
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.8153819898580699 	train_auc	 0.84353136578063
valid_accuracy	 0.8065596896490919 	train_accuracy	 0.825604269919939
valid_loss	 0.4217083156108856 	train_loss	 0.3793351650238037
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.8152849222312969 	train_auc	 0.8435034073132548
valid_accuracy	 0.8047963322165403 	train_accuracy	 0.8253450247807853
valid_loss	 0.42082610726356506 	train_loss	 0.3788485825061798
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.8153899949250626 	train_auc	 0.8443305035620146
valid_accuracy	 0.8045318286016575 	train_accuracy	 0.826473503621807
valid_loss	 0.41963258385658264 	train_loss	 0.37776869535446167
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.8159021376543838 	train_auc	 0.8443352128513615
valid_accuracy	 0.8045318286016575 	train_accuracy	 0.8259702630575677
valid_loss	 0.42088761925697327 	train_loss	 0.3782716393470764
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.8149738854908342 	train_auc	 0.8436958756646734
valid_accuracy	 0.8023717157467819 	train_accuracy	 0.8248112847884103
valid_loss	 0.42126527428627014 	train_loss	 0.37931355834007263
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.8157910185217003 	train_auc	 0.8453923045146062
valid_accuracy	 0.8070446129430435 	train_accuracy	 0.8265650019062143
valid_loss	 0.4226520359516144 	train_loss	 0.37806636095046997
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.8154554439126549 	train_auc	 0.8449414737096885
valid_accuracy	 0.8034297302063128 	train_accuracy	 0.8257872664887533
valid_loss	 0.4203353226184845 	train_loss	 0.3775865435600281
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.8159978243383285 	train_auc	 0.8456938836159227
valid_accuracy	 0.8047081643449128 	train_accuracy	 0.8264125047655356
valid_loss	 0.42022714018821716 	train_loss	 0.3765546977519989
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.8160999921005669 	train_auc	 0.8461103169750485
valid_accuracy	 0.8047522482807266 	train_accuracy	 0.8264277544796035
valid_loss	 0.4199657142162323 	train_loss	 0.37612050771713257
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.8162708879018943 	train_auc	 0.8467329442038973
valid_accuracy	 0.8070005290072297 	train_accuracy	 0.8269004956157072
valid_loss	 0.42244425415992737 	train_loss	 0.3768850564956665
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.8158192810846846 	train_auc	 0.846170101859578
valid_accuracy	 0.8049285840239817 	train_accuracy	 0.8264277544796035
valid_loss	 0.4201689064502716 	train_loss	 0.37608426809310913
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.8160556973965399 	train_auc	 0.8469135169678543
valid_accuracy	 0.8058543466760713 	train_accuracy	 0.8272969881814716
valid_loss	 0.42104068398475647 	train_loss	 0.3757428824901581
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.8150636247676178 	train_auc	 0.8458735320816038
valid_accuracy	 0.7997266795979545 	train_accuracy	 0.8238353030880671
valid_loss	 0.4218706488609314 	train_loss	 0.3779781460762024
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.8161064676770964 	train_auc	 0.8479960990768997
valid_accuracy	 0.8051930876388644 	train_accuracy	 0.8276019824628288
valid_loss	 0.42049461603164673 	train_loss	 0.3743759095668793
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.8161756963767329 	train_auc	 0.8473882163758233
valid_accuracy	 0.804002821371892 	train_accuracy	 0.8269614944719786
valid_loss	 0.42022085189819336 	train_loss	 0.3752972185611725
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.8166087457431062 	train_auc	 0.8480840104201889
valid_accuracy	 0.8040469053077058 	train_accuracy	 0.8276172321768966
valid_loss	 0.4203813672065735 	train_loss	 0.3743521571159363
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.816531126852979 	train_auc	 0.8481053204384087
valid_accuracy	 0.8066037735849056 	train_accuracy	 0.827800228745711
valid_loss	 0.42141005396842957 	train_loss	 0.3747081756591797
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.816605307140446 	train_auc	 0.8486854603647516
valid_accuracy	 0.8052371715746782 	train_accuracy	 0.8281662218833397
valid_loss	 0.42025232315063477 	train_loss	 0.37368518114089966
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.816480219028316 	train_auc	 0.8491418583903254
valid_accuracy	 0.8052371715746782 	train_accuracy	 0.8285017155928326
valid_loss	 0.42044034600257874 	train_loss	 0.37321481108665466
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.8157780123509986 	train_auc	 0.8477224058540884
valid_accuracy	 0.8023717157467819 	train_accuracy	 0.8268089973313001
valid_loss	 0.42183372378349304 	train_loss	 0.37522992491722107
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.8164362104160303 	train_auc	 0.8494860167400498
valid_accuracy	 0.8046199964732851 	train_accuracy	 0.8285322150209684
valid_loss	 0.4201275706291199 	train_loss	 0.3728587329387665
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.8164604016734649 	train_auc	 0.8496791300954263
valid_accuracy	 0.8048845000881679 	train_accuracy	 0.8288067098741898
valid_loss	 0.4205290675163269 	train_loss	 0.37260380387306213
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.8164215427125232 	train_auc	 0.8499652208058849
valid_accuracy	 0.803385646270499 	train_accuracy	 0.8277849790316432
valid_loss	 0.42057350277900696 	train_loss	 0.3725600838661194
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.8162703432272331 	train_auc	 0.8501782449425993
valid_accuracy	 0.8054135073179334 	train_accuracy	 0.8288372093023256
valid_loss	 0.4218950569629669 	train_loss	 0.37256067991256714
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.8166130041086406 	train_auc	 0.8503544914099133
valid_accuracy	 0.8047081643449128 	train_accuracy	 0.828349218452154
valid_loss	 0.4207495152950287 	train_loss	 0.37202373147010803
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.8161305654045388 	train_auc	 0.8508797907907472
valid_accuracy	 0.8017104567095751 	train_accuracy	 0.8265040030499428
valid_loss	 0.4201412498950958 	train_loss	 0.3729443848133087
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.8168832617724358 	train_auc	 0.8503124444798844
valid_accuracy	 0.8043995767942161 	train_accuracy	 0.8283034693099505
valid_loss	 0.4211645722389221 	train_loss	 0.37226614356040955
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.8167816001725089 	train_auc	 0.8516952548459445
valid_accuracy	 0.8061629342267678 	train_accuracy	 0.8295386961494472
valid_loss	 0.4210391342639923 	train_loss	 0.3708536922931671
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.8167554392834705 	train_auc	 0.851948005834143
valid_accuracy	 0.8070446129430435 	train_accuracy	 0.8301334349980938
valid_loss	 0.4222896695137024 	train_loss	 0.3715154826641083
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.8167826345041891 	train_auc	 0.8512836047476804
valid_accuracy	 0.8034297302063128 	train_accuracy	 0.828577964163172
valid_loss	 0.42101946473121643 	train_loss	 0.37143808603286743
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.8169521273556314 	train_auc	 0.8519902442605238
valid_accuracy	 0.8060747663551402 	train_accuracy	 0.8300571864277545
valid_loss	 0.421622633934021 	train_loss	 0.3706532418727875
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.8165771105986328 	train_auc	 0.8525903246950755
valid_accuracy	 0.806118850290954 	train_accuracy	 0.830438429279451
valid_loss	 0.41947445273399353 	train_loss	 0.36927905678749084
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.8169405571454005 	train_auc	 0.8517334227650332
valid_accuracy	 0.8054135073179334 	train_accuracy	 0.8294624475791079
valid_loss	 0.42339250445365906 	train_loss	 0.37147486209869385
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.816373231720589 	train_auc	 0.853761367748853
valid_accuracy	 0.8050608358314231 	train_accuracy	 0.8304689287075867
valid_loss	 0.4198269546031952 	train_loss	 0.3680669367313385
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.816544523648943 	train_auc	 0.8525492891699663
valid_accuracy	 0.8024157996825957 	train_accuracy	 0.8290659550133435
valid_loss	 0.42104682326316833 	train_loss	 0.3699165880680084
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.8171880154981179 	train_auc	 0.8539177255571513
valid_accuracy	 0.8057661788044437 	train_accuracy	 0.8307586732748761
valid_loss	 0.4213908910751343 	train_loss	 0.3685217499732971
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.817196521225658 	train_auc	 0.8541824253646494
valid_accuracy	 0.8044436607300299 	train_accuracy	 0.830880670987419
valid_loss	 0.42077699303627014 	train_loss	 0.36799320578575134
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.816643714956719 	train_auc	 0.8541721163624859
valid_accuracy	 0.8034738141421266 	train_accuracy	 0.8293709492947007
valid_loss	 0.42022421956062317 	train_loss	 0.3683466613292694
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.8171937648417655 	train_auc	 0.8542514483926816
valid_accuracy	 0.8077058719802503 	train_accuracy	 0.8311094166984369
valid_loss	 0.42374879121780396 	train_loss	 0.36938992142677307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.8170183300849266 	train_auc	 0.8552125900137935
valid_accuracy	 0.8035178980779404 	train_accuracy	 0.8306824247045368
valid_loss	 0.4199216663837433 	train_loss	 0.3673539459705353
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.8168588669497235 	train_auc	 0.8555943023881645
valid_accuracy	 0.8071768647504849 	train_accuracy	 0.8317499046892871
valid_loss	 0.42135581374168396 	train_loss	 0.36674803495407104
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.8174528759311777 	train_auc	 0.8559156823505305
valid_accuracy	 0.8056339269970023 	train_accuracy	 0.8320548989706443
valid_loss	 0.42002880573272705 	train_loss	 0.3659738004207611
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 152
valid_auc	 0.817049084947119 	train_auc	 0.8559418330093851
valid_accuracy	 0.8049726679597955 	train_accuracy	 0.8318261532596264
valid_loss	 0.4206768870353699 	train_loss	 0.3659590780735016
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.8171843733301802 	train_auc	 0.8563881149117925
valid_accuracy	 0.8072650326221125 	train_accuracy	 0.8325123903926801
valid_loss	 0.42127904295921326 	train_loss	 0.36574000120162964
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.8172388352945525 	train_auc	 0.8558457066799967
valid_accuracy	 0.8021953800035267 	train_accuracy	 0.8308654212733512
valid_loss	 0.4213345944881439 	train_loss	 0.3666693866252899
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.8168486831840853 	train_auc	 0.8569198892198167
valid_accuracy	 0.8068682771997884 	train_accuracy	 0.8327716355318338
valid_loss	 0.4212215840816498 	train_loss	 0.36511141061782837
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.8176107270494537 	train_auc	 0.857252494878074
valid_accuracy	 0.8072209486862987 	train_accuracy	 0.8328783835303089
valid_loss	 0.42254918813705444 	train_loss	 0.3654501140117645
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.8173196562114771 	train_auc	 0.8572674965778426
valid_accuracy	 0.8048404161523541 	train_accuracy	 0.8319939001143729
valid_loss	 0.42053574323654175 	train_loss	 0.3646692931652069
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.8174943977460196 	train_auc	 0.8577327449149575
valid_accuracy	 0.8059425145476988 	train_accuracy	 0.8327563858177659
valid_loss	 0.42065131664276123 	train_loss	 0.36407485604286194
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.8164624428280041 	train_auc	 0.8583134302948081
valid_accuracy	 0.8041791571151472 	train_accuracy	 0.832741136103698
valid_loss	 0.41940629482269287 	train_loss	 0.3635574281215668
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.8173593569423501 	train_auc	 0.8576599306739514
valid_accuracy	 0.8046199964732851 	train_accuracy	 0.832527640106748
valid_loss	 0.42161843180656433 	train_loss	 0.36430010199546814
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.8173240851317034 	train_auc	 0.8582742399096384
valid_accuracy	 0.8044436607300299 	train_accuracy	 0.8327106366755623
valid_loss	 0.4208948314189911 	train_loss	 0.36374083161354065
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.8173680277228179 	train_auc	 0.859072406382812
valid_accuracy	 0.8058543466760713 	train_accuracy	 0.8339001143728555
valid_loss	 0.42071861028671265 	train_loss	 0.3625697195529938
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.8175969836423417 	train_auc	 0.8591065120904795
valid_accuracy	 0.805281255510492 	train_accuracy	 0.8336103698055661
valid_loss	 0.42147472500801086 	train_loss	 0.36270204186439514
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.8173167622834783 	train_auc	 0.8596928690806942
valid_accuracy	 0.8051049197672369 	train_accuracy	 0.8338238658025162
valid_loss	 0.4204169511795044 	train_loss	 0.3618210554122925
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.8167022592301696 	train_auc	 0.8589843429485573
valid_accuracy	 0.8063392699700229 	train_accuracy	 0.8335798703774304
valid_loss	 0.4224182963371277 	train_loss	 0.3628597557544708
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.8169859962163927 	train_auc	 0.8598015947639206
valid_accuracy	 0.8048404161523541 	train_accuracy	 0.8338543652306519
valid_loss	 0.42117053270339966 	train_loss	 0.3617565929889679
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.8167257957776579 	train_auc	 0.8608274635346148
valid_accuracy	 0.8030770587198025 	train_accuracy	 0.8336103698055661
valid_loss	 0.42048200964927673 	train_loss	 0.3614107370376587
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.8171577227841229 	train_auc	 0.8596985240993167
valid_accuracy	 0.8041350731793334 	train_accuracy	 0.8333663743804803
valid_loss	 0.4224925637245178 	train_loss	 0.3622891306877136
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.8169605175461221 	train_auc	 0.8604728067603427
valid_accuracy	 0.8032533944630577 	train_accuracy	 0.8334273732367518
valid_loss	 0.4212234616279602 	train_loss	 0.3614884316921234
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 170
valid_auc	 0.8175410086927986 	train_auc	 0.861512337447665
valid_accuracy	 0.8066037735849056 	train_accuracy	 0.8355928326343881
valid_loss	 0.42281535267829895 	train_loss	 0.3606216609477997
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.8172653593000321 	train_auc	 0.8607880125208361
valid_accuracy	 0.8056339269970023 	train_accuracy	 0.835059092642013
valid_loss	 0.42319053411483765 	train_loss	 0.3610188663005829
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.8171720108658964 	train_auc	 0.8617794326878679
valid_accuracy	 0.8043554928584024 	train_accuracy	 0.8348455966450629
valid_loss	 0.420310378074646 	train_loss	 0.3595792353153229
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.8168859301281 	train_auc	 0.8615350473940888
valid_accuracy	 0.8049726679597955 	train_accuracy	 0.8351505909264201
valid_loss	 0.42283377051353455 	train_loss	 0.3599920868873596
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.8169176918131514 	train_auc	 0.8616680433387796
valid_accuracy	 0.8030329747839887 	train_accuracy	 0.8346930995043843
valid_loss	 0.4223042130470276 	train_loss	 0.3602302670478821
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.8170166355415358 	train_auc	 0.863250386681601
valid_accuracy	 0.8070446129430435 	train_accuracy	 0.8363095691955775
valid_loss	 0.42287179827690125 	train_loss	 0.3587900996208191
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.8167369588573338 	train_auc	 0.8633203948442953
valid_accuracy	 0.8040909892435196 	train_accuracy	 0.8355318337781167
valid_loss	 0.42084333300590515 	train_loss	 0.3582353889942169
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.8171624598031475 	train_auc	 0.863473253869067
valid_accuracy	 0.8048404161523541 	train_accuracy	 0.8360808234845597
valid_loss	 0.420840322971344 	train_loss	 0.35773518681526184
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.817101384718139 	train_auc	 0.8635250415341068
valid_accuracy	 0.8053694233821196 	train_accuracy	 0.8364925657643919
valid_loss	 0.42158594727516174 	train_loss	 0.3575610816478729
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.8174830145957734 	train_auc	 0.8642830850279641
valid_accuracy	 0.8069123611356022 	train_accuracy	 0.8373770491803278
valid_loss	 0.4221670627593994 	train_loss	 0.35705870389938354
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.8172284974795152 	train_auc	 0.8635973435050887
valid_accuracy	 0.8031652265914301 	train_accuracy	 0.8355928326343881
valid_loss	 0.4217883050441742 	train_loss	 0.35832804441452026
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.8170012030927969 	train_auc	 0.8646163011240507
valid_accuracy	 0.8051049197672369 	train_accuracy	 0.8371178040411742
valid_loss	 0.4217895567417145 	train_loss	 0.35633012652397156
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 182
valid_auc	 0.8174371848995189 	train_auc	 0.8648474365294536
valid_accuracy	 0.8066919414565332 	train_accuracy	 0.8379260388867709
valid_loss	 0.4228503108024597 	train_loss	 0.3565579652786255
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.8174370638607054 	train_auc	 0.8645865777101542
valid_accuracy	 0.8043554928584024 	train_accuracy	 0.8366298131910027
valid_loss	 0.4222445487976074 	train_loss	 0.3565704822540283
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.8169940618027923 	train_auc	 0.8660190416284808
valid_accuracy	 0.8061629342267678 	train_accuracy	 0.8379260388867709
valid_loss	 0.421588659286499 	train_loss	 0.35480013489723206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.8170761701325526 	train_auc	 0.8653028107063013
valid_accuracy	 0.8051049197672369 	train_accuracy	 0.8375905451772779
valid_loss	 0.42256587743759155 	train_loss	 0.35559460520744324
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.8165082945313157 	train_auc	 0.8653747974341911
valid_accuracy	 0.8023276318109681 	train_accuracy	 0.8365078154784598
valid_loss	 0.4225998520851135 	train_loss	 0.35615110397338867
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.8170228085210313 	train_auc	 0.8664849895840364
valid_accuracy	 0.8048845000881679 	train_accuracy	 0.8380785360274495
valid_loss	 0.4221873879432678 	train_loss	 0.35425519943237305
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.8172083775276302 	train_auc	 0.8655852311852359
valid_accuracy	 0.8044436607300299 	train_accuracy	 0.8373313000381243
valid_loss	 0.42376914620399475 	train_loss	 0.3554737865924835
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.8170062207017987 	train_auc	 0.8674118236312902
valid_accuracy	 0.8066037735849056 	train_accuracy	 0.8388257720167747
valid_loss	 0.4222218692302704 	train_loss	 0.3533349931240082
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.8168406120959214 	train_auc	 0.8664695675601451
valid_accuracy	 0.8038705695644507 	train_accuracy	 0.8379717880289744
valid_loss	 0.4234755337238312 	train_loss	 0.35428354144096375
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.8161150724363933 	train_auc	 0.8663902770093037
valid_accuracy	 0.8020190442602716 	train_accuracy	 0.8378192908882959
valid_loss	 0.42299598455429077 	train_loss	 0.35453665256500244
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.8165287555925846 	train_auc	 0.8675227518682245
valid_accuracy	 0.8026803032974784 	train_accuracy	 0.8382615325962638
valid_loss	 0.4226364493370056 	train_loss	 0.35335707664489746
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.8171480451807961 	train_auc	 0.8684829788695763
valid_accuracy	 0.8071768647504849 	train_accuracy	 0.8391460160121997
valid_loss	 0.4235258102416992 	train_loss	 0.3524099588394165
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.8167024627954471 	train_auc	 0.8677675070195788
valid_accuracy	 0.8017104567095751 	train_accuracy	 0.8385970263057567
valid_loss	 0.423572838306427 	train_loss	 0.35323166847229004
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 195
valid_auc	 0.8166959266995106 	train_auc	 0.8683295024937498
valid_accuracy	 0.8027243872332922 	train_accuracy	 0.8386427754479604
valid_loss	 0.4228494167327881 	train_loss	 0.3525632917881012
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.8172511647482509 	train_auc	 0.8694382850368749
valid_accuracy	 0.8065596896490919 	train_accuracy	 0.8398170034311857
valid_loss	 0.4229012429714203 	train_loss	 0.35094892978668213
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.8172296748570661 	train_auc	 0.8686261759701098
valid_accuracy	 0.8050167518956093 	train_accuracy	 0.839451010293557
valid_loss	 0.42467474937438965 	train_loss	 0.35223689675331116
===== 设备: cuda =====
训练总段数: 19
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 435
实际用段数: 435
实际元素数: 65575
最后一次所用q.shpe: torch.Size([3, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 151
实际用段数: 151
实际元素数: 22684
最后一次所用q.shpe: torch.Size([7, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.8165912776415927 	train_auc	 0.8683938003320163
valid_accuracy	 0.8018427085170164 	train_accuracy	 0.8384292794510103
valid_loss	 0.42387574911117554 	train_loss	 0.3529506325721741


Start testing ......................
 Best epoch: 156
@ 使用预设Q-matrix:  qm_fold4_trained_0.99.json
===== 设备: cuda =====
训练总段数: 150
实际用段数: 150
实际元素数: 23039
最后一次所用q.shpe: torch.Size([6, 200])
===== 数据来自Test=====

test_auc	 0.821401317098303
test_accuracy	 0.8178306350102001
test_loss	 0.4024712145328522
=====第 5 次实验=====


train_data length:  442
valid_data length:  142




===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.7120345796743284 	train_auc	 0.7226520836683068
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.551969051361084 	train_loss	 0.5469855070114136
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.70877943293335 	train_auc	 0.7213471384418131
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.522555947303772 	train_loss	 0.5191879272460938
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.6996768571762619 	train_auc	 0.7133037898643824
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5255535840988159 	train_loss	 0.5216920375823975
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.6998964712122528 	train_auc	 0.7134139600175673
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5233384370803833 	train_loss	 0.5197126269340515
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.6987375963891025 	train_auc	 0.7118111410925592
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5238449573516846 	train_loss	 0.520143985748291
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.6991759797659309 	train_auc	 0.710814523594282
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5234506130218506 	train_loss	 0.5197991132736206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.7002533549146241 	train_auc	 0.7114681537975047
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5227921009063721 	train_loss	 0.5192517638206482
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.6993138460820625 	train_auc	 0.7106991674380052
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5226858854293823 	train_loss	 0.5191652178764343
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.7017806844229633 	train_auc	 0.7122236823466847
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5245381593704224 	train_loss	 0.5207498073577881
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.7083028706763674 	train_auc	 0.7177778519693729
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5227445960044861 	train_loss	 0.5191999077796936
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.6989004616594211 	train_auc	 0.7093230767315937
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5226818919181824 	train_loss	 0.519146740436554
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.7022341382339596 	train_auc	 0.7132893404955635
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5223944187164307 	train_loss	 0.5189518928527832
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.7071498282721345 	train_auc	 0.7189724709334052
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5234496593475342 	train_loss	 0.5197765827178955
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.7067424706823743 	train_auc	 0.7195344206720179
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.522719144821167 	train_loss	 0.5191665887832642
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.702258258973344 	train_auc	 0.7139976823699263
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5224811434745789 	train_loss	 0.5189908146858215
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.6962002528186002 	train_auc	 0.7082209048874756
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5223283767700195 	train_loss	 0.5188966989517212
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.6928162364352685 	train_auc	 0.704105879566445
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5223202705383301 	train_loss	 0.5188990831375122
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.6901203114055835 	train_auc	 0.7018045900329085
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5224019885063171 	train_loss	 0.5189319849014282
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.6831987586467287 	train_auc	 0.6978626892383113
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5224608182907104 	train_loss	 0.5192087888717651
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.679863265307217 	train_auc	 0.6940525731169284
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5227042436599731 	train_loss	 0.5191406607627869
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.6900022082744728 	train_auc	 0.7048470328325644
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5226624608039856 	train_loss	 0.5194663405418396
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.6938033029457604 	train_auc	 0.7088011101507481
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5226348042488098 	train_loss	 0.5190812945365906
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.7018709260218665 	train_auc	 0.7159253587465266
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.522262454032898 	train_loss	 0.5188468098640442
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.7044029265603262 	train_auc	 0.7172191593582125
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5227367281913757 	train_loss	 0.5191599726676941
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.7066431050350267 	train_auc	 0.7197405437890437
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222522616386414 	train_loss	 0.5188286304473877
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.704970823156768 	train_auc	 0.7178526435269749
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222396850585938 	train_loss	 0.5189000964164734
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.7056463245302691 	train_auc	 0.7194545846680412
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5226578712463379 	train_loss	 0.5190760493278503
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.7033130485825747 	train_auc	 0.7172430334938751
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5223366022109985 	train_loss	 0.5188509225845337
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.7060665603691559 	train_auc	 0.7196478248008553
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222039222717285 	train_loss	 0.5188324451446533
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.7099581044611704 	train_auc	 0.7220193052986896
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222650766372681 	train_loss	 0.5189593434333801
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.7124615998901628 	train_auc	 0.7213309553339502
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5226016640663147 	train_loss	 0.5190393924713135
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.7158528297019486 	train_auc	 0.726343188956489
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5221879482269287 	train_loss	 0.5188013911247253
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.7103517055870014 	train_auc	 0.720475465252213
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222305059432983 	train_loss	 0.518797755241394
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.7113695900627381 	train_auc	 0.7222007161849102
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222815275192261 	train_loss	 0.5188150405883789
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.704376016986149 	train_auc	 0.7170598471953715
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.522222101688385 	train_loss	 0.5189080834388733
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.7132912782409746 	train_auc	 0.7253323271481885
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5223411321640015 	train_loss	 0.5188340544700623
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.7056327222567251 	train_auc	 0.7192917653383133
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222128629684448 	train_loss	 0.5188998579978943
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.698982350161806 	train_auc	 0.7125239208361496
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5221808552742004 	train_loss	 0.5187466740608215
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.7013157333723771 	train_auc	 0.7139778697213791
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5221870541572571 	train_loss	 0.5187408328056335
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.6979005370115918 	train_auc	 0.7096985837057308
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5221294164657593 	train_loss	 0.5187397003173828
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.7018279672397723 	train_auc	 0.7131825782872676
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5225590467453003 	train_loss	 0.5189845561981201
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.6983740556844498 	train_auc	 0.7107976029362345
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5221769213676453 	train_loss	 0.5187287330627441
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.6978311714500546 	train_auc	 0.7108247110475497
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5221486687660217 	train_loss	 0.5186923146247864
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.7014580175782401 	train_auc	 0.7145383807410218
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5221050381660461 	train_loss	 0.5186591148376465
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.6990079926932529 	train_auc	 0.7116441253337987
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5220758318901062 	train_loss	 0.5187082886695862
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.7056001411579458 	train_auc	 0.717808283356139
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5220963358879089 	train_loss	 0.5186259150505066
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.7081826289916539 	train_auc	 0.721103734312764
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5220375657081604 	train_loss	 0.5186095237731934
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.7062235932205572 	train_auc	 0.7186261160437408
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5221284031867981 	train_loss	 0.5188214182853699
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.7087689479871586 	train_auc	 0.720852786004472
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5220794677734375 	train_loss	 0.5185902714729309
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.7078627777974427 	train_auc	 0.7203385739535048
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5220214128494263 	train_loss	 0.5185654163360596
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.7126323221661953 	train_auc	 0.7252817305440427
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5219941735267639 	train_loss	 0.518525242805481
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.7140599106071186 	train_auc	 0.7267861311693009
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5219475030899048 	train_loss	 0.5186015367507935
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.7191366558545687 	train_auc	 0.7314261056844351
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5218880772590637 	train_loss	 0.518500804901123
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.7232471435895951 	train_auc	 0.7356441730503189
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.521946132183075 	train_loss	 0.5184649229049683
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.7204207600861965 	train_auc	 0.732765746859166
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5219013690948486 	train_loss	 0.518441915512085
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.7245757820268179 	train_auc	 0.7362061505710911
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5218440890312195 	train_loss	 0.5184432864189148
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.7248477269387497 	train_auc	 0.7367788751571994
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5218185186386108 	train_loss	 0.5184410214424133
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.7237094801075633 	train_auc	 0.735195034092996
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5218926668167114 	train_loss	 0.5185459852218628
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.7247068773738614 	train_auc	 0.7354520131143223
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5223192572593689 	train_loss	 0.5186971426010132
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.7224066316882425 	train_auc	 0.7346959018012745
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5218365788459778 	train_loss	 0.5184956192970276
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.7266162303212845 	train_auc	 0.7378459085229696
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5225381851196289 	train_loss	 0.5188561677932739
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.7236856275253704 	train_auc	 0.7358440564266348
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222305059432983 	train_loss	 0.5190072059631348
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.7254996841108283 	train_auc	 0.7363936126762257
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5216975212097168 	train_loss	 0.5183084011077881
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.7242267151065818 	train_auc	 0.7355589803814138
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5216420888900757 	train_loss	 0.5182161927223206
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.7254282939624945 	train_auc	 0.7361888839590108
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5216288566589355 	train_loss	 0.5181716084480286
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.7243105075250271 	train_auc	 0.7350216720952477
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5216795206069946 	train_loss	 0.5181517004966736
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.725369882622234 	train_auc	 0.7363634743250935
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5216244459152222 	train_loss	 0.5180969834327698
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.7278073711585141 	train_auc	 0.738091459816054
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222532153129578 	train_loss	 0.5185454487800598
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.7256983818858745 	train_auc	 0.7360216803399343
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5216745138168335 	train_loss	 0.5183457136154175
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.7285554224602028 	train_auc	 0.739286233566403
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5215360522270203 	train_loss	 0.5179872512817383
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.7262957958851814 	train_auc	 0.7378374164429066
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5215287208557129 	train_loss	 0.5181823372840881
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.725350253515809 	train_auc	 0.7371217374325365
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.522255003452301 	train_loss	 0.519065260887146
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.7263626675848369 	train_auc	 0.7382344400380352
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5214336514472961 	train_loss	 0.5178660154342651
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.7264800399876004 	train_auc	 0.7386277566993212
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.521442174911499 	train_loss	 0.5180928111076355
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.7284604478868677 	train_auc	 0.7397057210218636
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5217900276184082 	train_loss	 0.5185337066650391
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.7300142579178774 	train_auc	 0.7406566037938935
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.521391749382019 	train_loss	 0.5178061127662659
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.731420031771264 	train_auc	 0.7417091368568858
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.521041750907898 	train_loss	 0.517558217048645
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.7315332343296982 	train_auc	 0.7419956582358767
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5215922594070435 	train_loss	 0.5183354616165161
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.7325457221419538 	train_auc	 0.7430064261140191
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.521546483039856 	train_loss	 0.5178244113922119
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.7312158904052284 	train_auc	 0.7418161186765371
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5218245387077332 	train_loss	 0.5180656909942627
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.7304901229661618 	train_auc	 0.7413675247787228
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5217645168304443 	train_loss	 0.5185351371765137
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.7329342282811445 	train_auc	 0.7432192963269043
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5209678411483765 	train_loss	 0.5173835754394531
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.7329369232609201 	train_auc	 0.7432299355710027
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5208215117454529 	train_loss	 0.5172916650772095
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.7341232305647712 	train_auc	 0.7439416185807759
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5207253098487854 	train_loss	 0.5172896981239319
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.7343886592569471 	train_auc	 0.7441761879831291
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5212540030479431 	train_loss	 0.517479419708252
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.733415107868912 	train_auc	 0.7435816874758745
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5205000638961792 	train_loss	 0.5169137120246887
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.733825535858516 	train_auc	 0.7439080471485153
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5212664604187012 	train_loss	 0.5180140137672424
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.7352949300056097 	train_auc	 0.7446565064610825
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5206984877586365 	train_loss	 0.516963541507721
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.7347287764309136 	train_auc	 0.744479843678203
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5220509171485901 	train_loss	 0.5189239978790283
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.7349523524894104 	train_auc	 0.7445330670193742
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5222964286804199 	train_loss	 0.5191954970359802
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.7351624201293805 	train_auc	 0.7445745709196294
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.520261824131012 	train_loss	 0.5165982842445374
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.7344679332267139 	train_auc	 0.744010741916376
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5203424692153931 	train_loss	 0.5165935754776001
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.7349850475549963 	train_auc	 0.7444774762413323
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.522188127040863 	train_loss	 0.519092857837677
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.7351940760858489 	train_auc	 0.7441746235829618
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5211682915687561 	train_loss	 0.5172622799873352
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.7349351367977097 	train_auc	 0.7439103887876666
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.519831120967865 	train_loss	 0.5161163210868835
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.7339846670399415 	train_auc	 0.7431255976868564
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.519660472869873 	train_loss	 0.5162413120269775
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.7348233487684613 	train_auc	 0.7438444775988797
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5205403566360474 	train_loss	 0.5173095464706421
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.7349870319182142 	train_auc	 0.7436484116235644
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5194284915924072 	train_loss	 0.5156958699226379
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.7351787911259277 	train_auc	 0.7438124441075871
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5190463066101074 	train_loss	 0.5155924558639526
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.7351721676432952 	train_auc	 0.7437094596114926
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5220233201980591 	train_loss	 0.5189815759658813
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.7356812975911976 	train_auc	 0.7438666927427369
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5186471939086914 	train_loss	 0.5151404142379761
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.7353060987526401 	train_auc	 0.7435056252152191
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5191889405250549 	train_loss	 0.5158722400665283
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.7354224186384264 	train_auc	 0.7434025110690473
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5214634537696838 	train_loss	 0.5184193849563599
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.734859657252204 	train_auc	 0.7432318333570831
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.523227334022522 	train_loss	 0.5203021764755249
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.7348949869621973 	train_auc	 0.7430192111991928
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5187693238258362 	train_loss	 0.5154009461402893
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.734430418035609 	train_auc	 0.7425516473783336
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5185565948486328 	train_loss	 0.5148611664772034
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.7340407923401435 	train_auc	 0.7419567863644866
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5195539593696594 	train_loss	 0.5156450867652893
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.7339794044550563 	train_auc	 0.7422532034840712
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5184687972068787 	train_loss	 0.5151036381721497
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.7344990595727291 	train_auc	 0.7421343639741871
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5171486139297485 	train_loss	 0.5136380195617676
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.7344955601213787 	train_auc	 0.7420269548384647
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5202322006225586 	train_loss	 0.5171895623207092
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.7334345224495837 	train_auc	 0.7404809200013936
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5153419971466064 	train_loss	 0.5116685032844543
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.7334209335838995 	train_auc	 0.7402069740184208
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5153688192367554 	train_loss	 0.5120739340782166
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.731994337324585 	train_auc	 0.7382896630332046
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5137079358100891 	train_loss	 0.5104157328605652
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.731372782474104 	train_auc	 0.737593500328348
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5224251747131348 	train_loss	 0.5198233723640442
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.7301244235961166 	train_auc	 0.7360285233503916
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5152525901794434 	train_loss	 0.5123239159584045
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.7287282698819788 	train_auc	 0.734112102055757
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5096508860588074 	train_loss	 0.506396472454071
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.7283346084207794 	train_auc	 0.7336606227822429
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5229586958885193 	train_loss	 0.5206141471862793
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.7287463704924118 	train_auc	 0.7330495594776132
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5109273195266724 	train_loss	 0.5068930983543396
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.7272538410836125 	train_auc	 0.7319526133253862
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5122154951095581 	train_loss	 0.5096237063407898
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.7265245607853359 	train_auc	 0.7307663382699002
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5037157535552979 	train_loss	 0.5008588433265686
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.7264411974183971 	train_auc	 0.7299624098916088
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.49931323528289795 	train_loss	 0.49595293402671814
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.7270231655634679 	train_auc	 0.7309029272722547
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.49986228346824646 	train_loss	 0.4969852864742279
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.7261217484599733 	train_auc	 0.7298272146275853
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5074025988578796 	train_loss	 0.5053698420524597
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.7267284474020395 	train_auc	 0.7305404898196854
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.5133355259895325 	train_loss	 0.5113978981971741
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.7264592242856025 	train_auc	 0.7299666777604799
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.49773281812667847 	train_loss	 0.4950399696826935
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.7262915321858352 	train_auc	 0.7292670118576161
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860871640366316
valid_loss	 0.4912935197353363 	train_loss	 0.4884450137615204
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.727183302334362 	train_auc	 0.7299669853486734
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860722489037377
valid_loss	 0.4858960211277008 	train_loss	 0.48312681913375854
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.7266389901629215 	train_auc	 0.7298883102420725
valid_accuracy	 0.7876287676459367 	train_accuracy	 0.7877278286549533
valid_loss	 0.5415363311767578 	train_loss	 0.5409519076347351
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.7276795875527867 	train_auc	 0.730808686880098
valid_accuracy	 0.7868657001144601 	train_accuracy	 0.787936640515467
valid_loss	 0.49828040599823 	train_loss	 0.49660128355026245
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.7291780633473096 	train_auc	 0.7321829948979466
valid_accuracy	 0.7877241510873713 	train_accuracy	 0.7886376517614772
valid_loss	 0.4913185238838196 	train_loss	 0.48966875672340393
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.732553954567736 	train_auc	 0.7357060816237092
valid_accuracy	 0.7843857306371614 	train_accuracy	 0.7864898726247651
valid_loss	 0.4804307818412781 	train_loss	 0.4777674674987793
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.7312954794596954 	train_auc	 0.7343805828910837
valid_accuracy	 0.788868752384586 	train_accuracy	 0.7896667959311517
valid_loss	 0.4852360486984253 	train_loss	 0.48355376720428467
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.7335511909397193 	train_auc	 0.7366894086661033
valid_accuracy	 0.7875333842045021 	train_accuracy	 0.7875339319273335
valid_loss	 0.4731246829032898 	train_loss	 0.47064894437789917
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.7326568934096616 	train_auc	 0.7359558247154663
valid_accuracy	 0.7886779855017169 	train_accuracy	 0.7905169585061003
valid_loss	 0.49758124351501465 	train_loss	 0.49629124999046326
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.7333024349209312 	train_auc	 0.7364920170848956
valid_accuracy	 0.783479587943533 	train_accuracy	 0.7860722489037377
valid_loss	 0.49526888132095337 	train_loss	 0.4918438792228699
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.7323112723093376 	train_auc	 0.7356456785787676
valid_accuracy	 0.7873903090423503 	train_accuracy	 0.7880857918444053
valid_loss	 0.4975135028362274 	train_loss	 0.49580466747283936
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.7301765064266552 	train_auc	 0.7332156021993141
valid_accuracy	 0.7884872186188477 	train_accuracy	 0.7903827223100558
valid_loss	 0.5058560967445374 	train_loss	 0.504738986492157
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.7299518242197429 	train_auc	 0.7329877038226219
valid_accuracy	 0.7756581457458985 	train_accuracy	 0.7742594636518212
valid_loss	 0.5316651463508606 	train_loss	 0.5312626957893372
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.7315884478954487 	train_auc	 0.7345787060691561
valid_accuracy	 0.7888210606638687 	train_accuracy	 0.7896071353995764
valid_loss	 0.48812034726142883 	train_loss	 0.48673704266548157
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.7329286103879806 	train_auc	 0.73591004831598
valid_accuracy	 0.7884395268981305 	train_accuracy	 0.7901739104495421
valid_loss	 0.46956929564476013 	train_loss	 0.46745654940605164
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.7335735351377094 	train_auc	 0.737096222826508
valid_accuracy	 0.754196871423121 	train_accuracy	 0.7486800107388957
valid_loss	 0.5478224754333496 	train_loss	 0.5475769639015198
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.7360837546082815 	train_auc	 0.7398108361449938
valid_accuracy	 0.7860549408622663 	train_accuracy	 0.7854010679235152
valid_loss	 0.4926659166812897 	train_loss	 0.4911821186542511
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.736404101893297 	train_auc	 0.7400617467489263
valid_accuracy	 0.789536436474628 	train_accuracy	 0.7896220505324703
valid_loss	 0.470774382352829 	train_loss	 0.4685424268245697
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.7370645797601387 	train_auc	 0.7409106392292811
valid_accuracy	 0.7887733689431514 	train_accuracy	 0.7905020433732065
valid_loss	 0.4628547728061676 	train_loss	 0.45977476239204407
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.737430533879516 	train_auc	 0.7417256526891818
valid_accuracy	 0.7689336131247615 	train_accuracy	 0.7663395280851952
valid_loss	 0.5151232481002808 	train_loss	 0.5137732625007629
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.7378858379751343 	train_auc	 0.741868728825761
valid_accuracy	 0.7890118275467379 	train_accuracy	 0.7912776302836858
valid_loss	 0.46200326085090637 	train_loss	 0.45895665884017944
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.7370541618532451 	train_auc	 0.7414077163026854
valid_accuracy	 0.7360740175505532 	train_accuracy	 0.7322733645556782
valid_loss	 0.5512193441390991 	train_loss	 0.5504207611083984
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.737752020832596 	train_auc	 0.741893693080441
valid_accuracy	 0.7856257153758107 	train_accuracy	 0.7864302120931898
valid_loss	 0.4735333323478699 	train_loss	 0.47098615765571594
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.7379646225580265 	train_auc	 0.742535212246596
valid_accuracy	 0.7262018313620755 	train_accuracy	 0.7243534289890523
valid_loss	 0.557393491268158 	train_loss	 0.5564961433410645
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.7389267906732784 	train_auc	 0.7432120372455355
valid_accuracy	 0.7902041205646699 	train_accuracy	 0.7914118664797304
valid_loss	 0.46340489387512207 	train_loss	 0.46033409237861633
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.7386415317567836 	train_auc	 0.7430222169642501
valid_accuracy	 0.774561236169401 	train_accuracy	 0.7710825403454344
valid_loss	 0.4917272627353668 	train_loss	 0.48949018120765686
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 152
valid_auc	 0.7395930875511778 	train_auc	 0.7441039021117151
valid_accuracy	 0.7841472720335749 	train_accuracy	 0.7822539748829163
valid_loss	 0.47479817271232605 	train_loss	 0.4718463122844696
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.7403394025350509 	train_auc	 0.7450246802680922
valid_accuracy	 0.7903471957268218 	train_accuracy	 0.7926199922441309
valid_loss	 0.4595943093299866 	train_loss	 0.4558447301387787
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.7403708037421872 	train_auc	 0.7451842934043269
valid_accuracy	 0.7769935139259825 	train_accuracy	 0.7741252274557766
valid_loss	 0.4929046034812927 	train_loss	 0.49051433801651
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.7407115846052029 	train_auc	 0.7453806715981959
valid_accuracy	 0.7902041205646699 	train_accuracy	 0.7923813501178295
valid_loss	 0.4630875289440155 	train_loss	 0.458564430475235
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.7412973538784647 	train_auc	 0.7463144782643816
valid_accuracy	 0.7646413582602061 	train_accuracy	 0.761954479014408
valid_loss	 0.5044925808906555 	train_loss	 0.5021554231643677
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.7423000204335779 	train_auc	 0.7473257587895132
valid_accuracy	 0.7902518122853872 	train_accuracy	 0.790546788771888
valid_loss	 0.46193328499794006 	train_loss	 0.4580190181732178
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.7422472336904113 	train_auc	 0.747252376845762
valid_accuracy	 0.7916825639069057 	train_accuracy	 0.7926050771112371
valid_loss	 0.45849162340164185 	train_loss	 0.454184353351593
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.7420731795612734 	train_auc	 0.7469727547030274
valid_accuracy	 0.7889164441053034 	train_accuracy	 0.7889806998180354
valid_loss	 0.46123185753822327 	train_loss	 0.4567861557006836
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.7428927752016811 	train_auc	 0.7481048697616818
valid_accuracy	 0.7836703548264021 	train_accuracy	 0.7815827939026937
valid_loss	 0.47064685821533203 	train_loss	 0.46689125895500183
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.7437054657944049 	train_auc	 0.7490739187585733
valid_accuracy	 0.78634109118657 	train_accuracy	 0.7868478358142171
valid_loss	 0.46401095390319824 	train_loss	 0.45961326360702515
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.7437200669534876 	train_auc	 0.74907551689422
valid_accuracy	 0.7916825639069057 	train_accuracy	 0.7928884646362199
valid_loss	 0.4584157168865204 	train_loss	 0.45349815487861633
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.7444589875028023 	train_auc	 0.7499924935251164
valid_accuracy	 0.7851964898893552 	train_accuracy	 0.7843122632222653
valid_loss	 0.46857917308807373 	train_loss	 0.46456044912338257
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.7448064186641696 	train_auc	 0.7507211950919752
valid_accuracy	 0.7520984357115604 	train_accuracy	 0.7497091549085703
valid_loss	 0.5131655931472778 	train_loss	 0.510534405708313
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.7446544875033385 	train_auc	 0.7500317708837381
valid_accuracy	 0.7901087371232354 	train_accuracy	 0.7906810249679325
valid_loss	 0.45924434065818787 	train_loss	 0.4546853303909302
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.7451630006897003 	train_auc	 0.75060960540274
valid_accuracy	 0.7898225867989317 	train_accuracy	 0.7898905229245593
valid_loss	 0.4594631493091583 	train_loss	 0.45463377237319946
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.7455387291387113 	train_auc	 0.7511047588923443
valid_accuracy	 0.792731781762686 	train_accuracy	 0.7949765832413567
valid_loss	 0.4607641100883484 	train_loss	 0.45490556955337524
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.7466686295773093 	train_auc	 0.7526813150774594
valid_accuracy	 0.7634013735215567 	train_accuracy	 0.7619992244130895
valid_loss	 0.49597036838531494 	train_loss	 0.49268418550491333
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.7464968547842997 	train_auc	 0.75232944609063
valid_accuracy	 0.7835749713849676 	train_accuracy	 0.7820302478895087
valid_loss	 0.4678805470466614 	train_loss	 0.46349456906318665
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 170
valid_auc	 0.7474719212604675 	train_auc	 0.753734792072392
valid_accuracy	 0.7472815719191148 	train_accuracy	 0.744697670256242
valid_loss	 0.5117321014404297 	train_loss	 0.508759617805481
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.7471596924344276 	train_auc	 0.7531296000641201
valid_accuracy	 0.7935902327355971 	train_accuracy	 0.7969453807833428
valid_loss	 0.4565328061580658 	train_loss	 0.4506010115146637
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.7474243233589585 	train_auc	 0.7533572285569778
valid_accuracy	 0.790537962609691 	train_accuracy	 0.7917549145362885
valid_loss	 0.45735862851142883 	train_loss	 0.45193734765052795
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.7478720184942652 	train_auc	 0.7538671092369955
valid_accuracy	 0.7861980160244182 	train_accuracy	 0.7863854666945083
valid_loss	 0.4625711739063263 	train_loss	 0.457338809967041
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.7490606252460342 	train_auc	 0.7555901825775782
valid_accuracy	 0.7545784051888592 	train_accuracy	 0.7515735465202995
valid_loss	 0.5036330223083496 	train_loss	 0.5002134442329407
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.7493287891415645 	train_auc	 0.7557061188518028
valid_accuracy	 0.7867226249523083 	train_accuracy	 0.7865644482892342
valid_loss	 0.462643563747406 	train_loss	 0.4574201703071594
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.7505065020074247 	train_auc	 0.7573080818217087
valid_accuracy	 0.7554368561617704 	train_accuracy	 0.753318617068878
valid_loss	 0.5057005286216736 	train_loss	 0.5020889639854431
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.7495204880139098 	train_auc	 0.7559471859720606
valid_accuracy	 0.7903471957268218 	train_accuracy	 0.7925603317125556
valid_loss	 0.45682623982429504 	train_loss	 0.450924813747406
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.750422655957541 	train_auc	 0.7570788128584851
valid_accuracy	 0.7718904998092331 	train_accuracy	 0.7708438982191331
valid_loss	 0.4810919463634491 	train_loss	 0.4767375588417053
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.7498793091519904 	train_auc	 0.7563251642354261
valid_accuracy	 0.7951640595192675 	train_accuracy	 0.7960504728097128
valid_loss	 0.4579947590827942 	train_loss	 0.45101383328437805
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.751863571810887 	train_auc	 0.7587471189636088
valid_accuracy	 0.7618752384586036 	train_accuracy	 0.7603287295289801
valid_loss	 0.4955054819583893 	train_loss	 0.4916333556175232
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.752409010242532 	train_auc	 0.7593732838563236
valid_accuracy	 0.7645459748187715 	train_accuracy	 0.7642364943471647
valid_loss	 0.4961850345134735 	train_loss	 0.49245619773864746
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

epoch 182
valid_auc	 0.7515493116941206 	train_auc	 0.7582102128572743
valid_accuracy	 0.7869133918351774 	train_accuracy	 0.7883542642364944
valid_loss	 0.46078234910964966 	train_loss	 0.45478856563568115
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.7525194574858225 	train_auc	 0.7593612171384152
valid_accuracy	 0.7837657382678367 	train_accuracy	 0.7841034513617516
valid_loss	 0.46502748131752014 	train_loss	 0.4596306383609772
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.7518203180558818 	train_auc	 0.7585943223786321
valid_accuracy	 0.7960702022128958 	train_accuracy	 0.7974226650359455
valid_loss	 0.45940861105918884 	train_loss	 0.45169636607170105
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.7536579925859899 	train_auc	 0.7607214911968762
valid_accuracy	 0.7769458222052652 	train_accuracy	 0.7764967335858962
valid_loss	 0.4748123586177826 	train_loss	 0.4700016975402832
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.7533485458908128 	train_auc	 0.7604000800560122
valid_accuracy	 0.788534910339565 	train_accuracy	 0.7905766190376756
valid_loss	 0.45796701312065125 	train_loss	 0.4516942799091339
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.7537470341814609 	train_auc	 0.7608877403003327
valid_accuracy	 0.7890595192674552 	train_accuracy	 0.7916803388718193
valid_loss	 0.45732784271240234 	train_loss	 0.45061489939689636
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.7533237279427302 	train_auc	 0.7603628605616276
valid_accuracy	 0.7950686760778329 	train_accuracy	 0.7974972407004146
valid_loss	 0.4585961699485779 	train_loss	 0.4506074786186218
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.7541490956666871 	train_auc	 0.7613859875318325
valid_accuracy	 0.7894410530331935 	train_accuracy	 0.7926498225099186
valid_loss	 0.4554639458656311 	train_loss	 0.4487840235233307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.7546221383605298 	train_auc	 0.76197699476328
valid_accuracy	 0.7891549027088898 	train_accuracy	 0.7923067744533604
valid_loss	 0.45641815662384033 	train_loss	 0.449563205242157
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.7546652580369393 	train_auc	 0.7619847287872789
valid_accuracy	 0.7955455932850057 	train_accuracy	 0.7978999492885481
valid_loss	 0.4565016031265259 	train_loss	 0.44828885793685913
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.7559909400411245 	train_auc	 0.7636525090158135
valid_accuracy	 0.7790919496375429 	train_accuracy	 0.7798824687527965
valid_loss	 0.4683128893375397 	train_loss	 0.4626089036464691
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.7553847170780734 	train_auc	 0.7628045637747989
valid_accuracy	 0.7886302937809996 	train_accuracy	 0.7923813501178295
valid_loss	 0.455637663602829 	train_loss	 0.44873082637786865
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.7555106168795298 	train_auc	 0.7629994767904983
valid_accuracy	 0.7900610454025181 	train_accuracy	 0.7932315126927781
valid_loss	 0.45517584681510925 	train_loss	 0.44792842864990234
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 195
valid_auc	 0.7560751346953574 	train_auc	 0.763741715545275
valid_accuracy	 0.7869610835558947 	train_accuracy	 0.7897562867285147
valid_loss	 0.457645982503891 	train_loss	 0.4506888687610626
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.755282213991584 	train_auc	 0.7626863169509824
valid_accuracy	 0.7972148035101106 	train_accuracy	 0.8007785699370581
valid_loss	 0.4638276994228363 	train_loss	 0.45472124218940735
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.7564054373161113 	train_auc	 0.7641564224848754
valid_accuracy	 0.7927794734834033 	train_accuracy	 0.7954389523610655
valid_loss	 0.4533420205116272 	train_loss	 0.44601717591285706
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.7559609265474547 	train_auc	 0.7635512344454833
valid_accuracy	 0.7953071346814193 	train_accuracy	 0.7980640157503803
valid_loss	 0.45753321051597595 	train_loss	 0.4488099217414856
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 199
valid_auc	 0.7569772355996907 	train_auc	 0.7648916601354778
valid_accuracy	 0.7893933613124762 	train_accuracy	 0.793425409420398
valid_loss	 0.45470166206359863 	train_loss	 0.4474007487297058
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 200
valid_auc	 0.757387623365716 	train_auc	 0.7654273524260378
valid_accuracy	 0.7868657001144601 	train_accuracy	 0.7905617039047818
valid_loss	 0.45629170536994934 	train_loss	 0.4489825665950775
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 201
valid_auc	 0.75730960303082 	train_auc	 0.7651999872022144
valid_accuracy	 0.7939240747806181 	train_accuracy	 0.7967514840557229
valid_loss	 0.4531526267528534 	train_loss	 0.44507673382759094
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 202
valid_auc	 0.7580054508312337 	train_auc	 0.7662176331492535
valid_accuracy	 0.781619610835559 	train_accuracy	 0.7838797243683441
valid_loss	 0.4646226167678833 	train_loss	 0.4583874046802521
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 203
valid_auc	 0.7579147533651046 	train_auc	 0.7659444974792639
valid_accuracy	 0.7916348721861884 	train_accuracy	 0.7949765832413567
valid_loss	 0.4536438286304474 	train_loss	 0.44581112265586853
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 204
valid_auc	 0.7580258978170933 	train_auc	 0.7659166676932836
valid_accuracy	 0.7960225104921785 	train_accuracy	 0.7991229901858425
valid_loss	 0.4538763165473938 	train_loss	 0.44510984420776367
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 205
valid_auc	 0.7582867611330821 	train_auc	 0.7662690116227431
valid_accuracy	 0.7959748187714613 	train_accuracy	 0.7990036691226918
valid_loss	 0.4565606117248535 	train_loss	 0.4473745822906494
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 206
valid_auc	 0.758771998275213 	train_auc	 0.7669674412195125
valid_accuracy	 0.7914441053033193 	train_accuracy	 0.7950511589058259
valid_loss	 0.45330682396888733 	train_loss	 0.44519108533859253
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 207
valid_auc	 0.7588072877616276 	train_auc	 0.7670517746259156
valid_accuracy	 0.7941625333842045 	train_accuracy	 0.7977806282253975
valid_loss	 0.45194104313850403 	train_loss	 0.44350308179855347
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 208
valid_auc	 0.7592309962361456 	train_auc	 0.7676167413747456
valid_accuracy	 0.7910148798168638 	train_accuracy	 0.7946335351847985
valid_loss	 0.4538823366165161 	train_loss	 0.44615092873573303
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 209
valid_auc	 0.7586967935908286 	train_auc	 0.7667742401140176
valid_accuracy	 0.7965471194200687 	train_accuracy	 0.8011365331265101
valid_loss	 0.4538581073284149 	train_loss	 0.44459816813468933
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 210
valid_auc	 0.7601781006211594 	train_auc	 0.7688794458122792
valid_accuracy	 0.7841472720335749 	train_accuracy	 0.7883990096351758
valid_loss	 0.4639526903629303 	train_loss	 0.4572312831878662
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 211
valid_auc	 0.7584200486651671 	train_auc	 0.7663168339798268
valid_accuracy	 0.7978824876001526 	train_accuracy	 0.802762282611938
valid_loss	 0.4726322293281555 	train_loss	 0.46208715438842773
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 212
valid_auc	 0.7598491052667145 	train_auc	 0.7680044017206693
valid_accuracy	 0.7954502098435712 	train_accuracy	 0.8001073889568356
valid_loss	 0.4509253203868866 	train_loss	 0.4421197474002838
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 213
valid_auc	 0.7604733282812518 	train_auc	 0.768824157992071
valid_accuracy	 0.7884872186188477 	train_accuracy	 0.7937237120782746
valid_loss	 0.4543423354625702 	train_loss	 0.446923166513443
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 214
valid_auc	 0.7598729176253286 	train_auc	 0.7678480245445272
valid_accuracy	 0.7972624952308279 	train_accuracy	 0.8021955075619723
valid_loss	 0.4613000750541687 	train_loss	 0.45117637515068054
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 215
valid_auc	 0.7607327837719848 	train_auc	 0.7690114825093685
valid_accuracy	 0.7959748187714613 	train_accuracy	 0.7990931599200549
valid_loss	 0.4497130513191223 	train_loss	 0.44108474254608154
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 216
valid_auc	 0.7611328474861336 	train_auc	 0.7695421872408321
valid_accuracy	 0.7922548645555132 	train_accuracy	 0.7952898010321272
valid_loss	 0.45175451040267944 	train_loss	 0.4435790181159973
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 217
valid_auc	 0.7611771671659753 	train_auc	 0.7696359593051587
valid_accuracy	 0.794925600915681 	train_accuracy	 0.7984368940727262
valid_loss	 0.45086368918418884 	train_loss	 0.4419349431991577
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 218
valid_auc	 0.760903164147598 	train_auc	 0.7692468900068641
valid_accuracy	 0.7963086608164822 	train_accuracy	 0.800703994272589
valid_loss	 0.4540022313594818 	train_loss	 0.44433462619781494
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 219
valid_auc	 0.7615755481937468 	train_auc	 0.7702135338625258
valid_accuracy	 0.7938763830599008 	train_accuracy	 0.7979745249530174
valid_loss	 0.45028412342071533 	train_loss	 0.4415869116783142
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 220
valid_auc	 0.7615468553742456 	train_auc	 0.7701261378037865
valid_accuracy	 0.7938286913391835 	train_accuracy	 0.7977060525609283
valid_loss	 0.4508698284626007 	train_loss	 0.44204777479171753
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 221
valid_auc	 0.7616039527442671 	train_auc	 0.7702160395487136
valid_accuracy	 0.7951163677985502 	train_accuracy	 0.7990185842555857
valid_loss	 0.4507600665092468 	train_loss	 0.44156864285469055
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 222
valid_auc	 0.7612458623345335 	train_auc	 0.7695855055806897
valid_accuracy	 0.7970240366272415 	train_accuracy	 0.8026877069474689
valid_loss	 0.4643808901309967 	train_loss	 0.4535156786441803
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 223
valid_auc	 0.761773092892869 	train_auc	 0.7702604447001885
valid_accuracy	 0.7970240366272415 	train_accuracy	 0.8019270351698834
valid_loss	 0.45404869318008423 	train_loss	 0.44401270151138306
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 224
valid_auc	 0.7620336746438068 	train_auc	 0.7704989413092198
valid_accuracy	 0.7968332697443724 	train_accuracy	 0.8018822897712019
valid_loss	 0.45326313376426697 	train_loss	 0.4433102309703827
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 225
valid_auc	 0.7628551742002747 	train_auc	 0.7716264802493294
valid_accuracy	 0.7933994658527279 	train_accuracy	 0.7978999492885481
valid_loss	 0.4497038722038269 	train_loss	 0.4410122036933899
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 226
valid_auc	 0.7631107145960105 	train_auc	 0.7719065475680948
valid_accuracy	 0.7933517741320106 	train_accuracy	 0.7978552038898666
valid_loss	 0.44950634241104126 	train_loss	 0.44074228405952454
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 227
valid_auc	 0.7629155028644552 	train_auc	 0.771754284135987
valid_accuracy	 0.7949732926363984 	train_accuracy	 0.7998240014318527
valid_loss	 0.44885584712028503 	train_loss	 0.43958616256713867
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 228
valid_auc	 0.7626346350219728 	train_auc	 0.771402009661926
valid_accuracy	 0.7947348340328119 	train_accuracy	 0.7997941711660651
valid_loss	 0.44934403896331787 	train_loss	 0.44015440344810486
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 229
valid_auc	 0.7626044405221986 	train_auc	 0.7715150711441305
valid_accuracy	 0.7938286913391835 	train_accuracy	 0.7985562151358768
valid_loss	 0.44995835423469543 	train_loss	 0.44107547402381897
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 230
valid_auc	 0.762771462228987 	train_auc	 0.7716092526645684
valid_accuracy	 0.7956886684471576 	train_accuracy	 0.8012260239238732
valid_loss	 0.4505878984928131 	train_loss	 0.44086065888404846
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 231
valid_auc	 0.7626313702081651 	train_auc	 0.7711666392073094
valid_accuracy	 0.7973578786722625 	train_accuracy	 0.8037317662500373
valid_loss	 0.46819689869880676 	train_loss	 0.4567250609397888
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 232
valid_auc	 0.7629823209326722 	train_auc	 0.7716694943083934
valid_accuracy	 0.7978347958794353 	train_accuracy	 0.8032693971303284
valid_loss	 0.45499661564826965 	train_loss	 0.4444897472858429
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 233
valid_auc	 0.7634587960385674 	train_auc	 0.7722391853472848
valid_accuracy	 0.7954979015642885 	train_accuracy	 0.8011812785251916
valid_loss	 0.4504445195198059 	train_loss	 0.44064271450042725
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 234
valid_auc	 0.7638815525550554 	train_auc	 0.7727663829118616
valid_accuracy	 0.7945440671499427 	train_accuracy	 0.8002863705515616
valid_loss	 0.4483892619609833 	train_loss	 0.4390670955181122
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 235
valid_auc	 0.7643743115064106 	train_auc	 0.7733635022183816
valid_accuracy	 0.7946394505913773 	train_accuracy	 0.7994809533752946
valid_loss	 0.44891369342803955 	train_loss	 0.4394698143005371
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 236
valid_auc	 0.7639294923569837 	train_auc	 0.772679725064787
valid_accuracy	 0.7973578786722625 	train_accuracy	 0.8030307550040271
valid_loss	 0.45800650119781494 	train_loss	 0.4469984471797943
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 237
valid_auc	 0.764647771506475 	train_auc	 0.7737899835017367
valid_accuracy	 0.7928271652041206 	train_accuracy	 0.7979894400859112
valid_loss	 0.4492732882499695 	train_loss	 0.4403928220272064
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 238
valid_auc	 0.7647247125086749 	train_auc	 0.7738307617584472
valid_accuracy	 0.7936856161770317 	train_accuracy	 0.799078244787161
valid_loss	 0.4483606815338135 	train_loss	 0.4395233690738678
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 239
valid_auc	 0.7641702103639537 	train_auc	 0.7728137144507955
valid_accuracy	 0.7971671117893934 	train_accuracy	 0.8033588879276914
valid_loss	 0.45719030499458313 	train_loss	 0.44629961252212524
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 240
valid_auc	 0.7648836492761364 	train_auc	 0.7739249154967256
valid_accuracy	 0.7939240747806181 	train_accuracy	 0.7993019717805686
valid_loss	 0.4481333792209625 	train_loss	 0.43925410509109497
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 241
valid_auc	 0.7649324203653588 	train_auc	 0.7740175015274366
valid_accuracy	 0.7936856161770317 	train_accuracy	 0.7990484145213734
valid_loss	 0.4491775333881378 	train_loss	 0.4397364556789398
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 242
valid_auc	 0.7651004878851944 	train_auc	 0.7740328008980379
valid_accuracy	 0.7962132773750477 	train_accuracy	 0.8027324523461504
valid_loss	 0.4493919014930725 	train_loss	 0.4392199218273163
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 243
valid_auc	 0.7654296039103754 	train_auc	 0.7744841353074352
valid_accuracy	 0.7955455932850057 	train_accuracy	 0.8016734779106882
valid_loss	 0.44769877195358276 	train_loss	 0.437874972820282
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 244
valid_auc	 0.7660860258996942 	train_auc	 0.7753338248711733
valid_accuracy	 0.7929702403662724 	train_accuracy	 0.7989141783253288
valid_loss	 0.44783639907836914 	train_loss	 0.4392625391483307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 245
valid_auc	 0.7663741138745603 	train_auc	 0.7756894927375635
valid_accuracy	 0.7928748569248378 	train_accuracy	 0.7970647018464935
valid_loss	 0.45195841789245605 	train_loss	 0.4439915418624878
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 246
valid_auc	 0.7657169611568944 	train_auc	 0.7746811769657301
valid_accuracy	 0.7963086608164822 	train_accuracy	 0.8026727918145751
valid_loss	 0.4501146972179413 	train_loss	 0.43973949551582336
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 247
valid_auc	 0.7656547084648644 	train_auc	 0.77468165521576
valid_accuracy	 0.7969763449065242 	train_accuracy	 0.8027175372132566
valid_loss	 0.45116734504699707 	train_loss	 0.44053593277931213
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 248
valid_auc	 0.7662970790173433 	train_auc	 0.7753699767368603
valid_accuracy	 0.795927127050744 	train_accuracy	 0.8021656772961847
valid_loss	 0.4502941966056824 	train_loss	 0.43977177143096924
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 249
valid_auc	 0.7665480808526112 	train_auc	 0.7756084878984513
valid_accuracy	 0.7960702022128958 	train_accuracy	 0.8025236404856367
valid_loss	 0.4517008662223816 	train_loss	 0.44096824526786804
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 250
valid_auc	 0.7668324682582333 	train_auc	 0.7760503578522056
valid_accuracy	 0.7944486837085082 	train_accuracy	 0.8017033081764758
valid_loss	 0.4461500346660614 	train_loss	 0.4363420605659485
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 251
valid_auc	 0.7670897315639249 	train_auc	 0.7764073288341687
valid_accuracy	 0.7933040824112934 	train_accuracy	 0.798183336813531
valid_loss	 0.4479071795940399 	train_loss	 0.4385979175567627
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 252
valid_auc	 0.7670188106906763 	train_auc	 0.7761528330087106
valid_accuracy	 0.796928653185807 	train_accuracy	 0.803045670136921
valid_loss	 0.45160967111587524 	train_loss	 0.4406907856464386
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 253
valid_auc	 0.7674183112747227 	train_auc	 0.7767945182063423
valid_accuracy	 0.7941625333842045 	train_accuracy	 0.7999731527607911
valid_loss	 0.4462878108024597 	train_loss	 0.4368366003036499
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 254
valid_auc	 0.766816801174314 	train_auc	 0.775868946304505
valid_accuracy	 0.797787104158718 	train_accuracy	 0.8036721057184619
valid_loss	 0.45604750514030457 	train_loss	 0.44473785161972046
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 255
valid_auc	 0.7671900893928815 	train_auc	 0.7764312089231512
valid_accuracy	 0.7968332697443724 	train_accuracy	 0.803209736598753
valid_loss	 0.45147213339805603 	train_loss	 0.4404976963996887
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 256
valid_auc	 0.7675390624581004 	train_auc	 0.7768131229924347
valid_accuracy	 0.7954502098435712 	train_accuracy	 0.8016287325120067
valid_loss	 0.4513598084449768 	train_loss	 0.4405546188354492
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 257
valid_auc	 0.7679328177743168 	train_auc	 0.7773379233535413
valid_accuracy	 0.7943056085463563 	train_accuracy	 0.7997345106344897
valid_loss	 0.44658318161964417 	train_loss	 0.43681973218917847
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 258
valid_auc	 0.7680718639820914 	train_auc	 0.7774132784920915
valid_accuracy	 0.794925600915681 	train_accuracy	 0.8008978910002088
valid_loss	 0.4462807774543762 	train_loss	 0.4362882375717163
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 259
valid_auc	 0.7682953059619926 	train_auc	 0.7776481448989585
valid_accuracy	 0.7952117512399848 	train_accuracy	 0.8009426363988903
valid_loss	 0.4462082087993622 	train_loss	 0.4361976087093353
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 260
valid_auc	 0.7685114071387734 	train_auc	 0.7777537091669993
valid_accuracy	 0.7960225104921785 	train_accuracy	 0.8027324523461504
valid_loss	 0.44991055130958557 	train_loss	 0.4391125440597534
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 261
valid_auc	 0.7689409748479281 	train_auc	 0.7784559151530099
valid_accuracy	 0.7942579168256391 	train_accuracy	 0.8002416251528801
valid_loss	 0.44463253021240234 	train_loss	 0.4352281391620636
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 262
valid_auc	 0.7687276759137992 	train_auc	 0.7779605387446502
valid_accuracy	 0.796928653185807 	train_accuracy	 0.8029114339408764
valid_loss	 0.4532369077205658 	train_loss	 0.44199931621551514
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 263
valid_auc	 0.769352589433105 	train_auc	 0.7789692514044755
valid_accuracy	 0.7933040824112934 	train_accuracy	 0.7970647018464935
valid_loss	 0.44652318954467773 	train_loss	 0.43750712275505066
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 264
valid_auc	 0.7694267751201613 	train_auc	 0.778916810594128
valid_accuracy	 0.7950209843571157 	train_accuracy	 0.8016585627777943
valid_loss	 0.44530606269836426 	train_loss	 0.43501266837120056
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 265
valid_auc	 0.7696482595525636 	train_auc	 0.7792362928593521
valid_accuracy	 0.7942579168256391 	train_accuracy	 0.800256540285774
valid_loss	 0.4440268278121948 	train_loss	 0.43463587760925293
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 266
valid_auc	 0.7694467059034269 	train_auc	 0.7788946900419089
valid_accuracy	 0.7947348340328119 	train_accuracy	 0.8017033081764758
valid_loss	 0.4452439546585083 	train_loss	 0.43497681617736816
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 267
valid_auc	 0.7696847490424107 	train_auc	 0.7791432788510899
valid_accuracy	 0.796594811140786 	train_accuracy	 0.8032395668645408
valid_loss	 0.44771236181259155 	train_loss	 0.43679699301719666
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 268
valid_auc	 0.7697229011068456 	train_auc	 0.7791856340760874
valid_accuracy	 0.7968809614650897 	train_accuracy	 0.803209736598753
valid_loss	 0.44969823956489563 	train_loss	 0.43845587968826294
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 269
valid_auc	 0.7699795543549264 	train_auc	 0.779491126039603
valid_accuracy	 0.795927127050744 	train_accuracy	 0.8027175372132566
valid_loss	 0.4473891258239746 	train_loss	 0.4364566206932068
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 270
valid_auc	 0.7702751038036488 	train_auc	 0.7797869994226392
valid_accuracy	 0.7957840518885921 	train_accuracy	 0.8028368582764073
valid_loss	 0.4464855194091797 	train_loss	 0.43563976883888245
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 271
valid_auc	 0.7704341612418467 	train_auc	 0.7798969565792683
valid_accuracy	 0.797787104158718 	train_accuracy	 0.8036273603197804
valid_loss	 0.4485546946525574 	train_loss	 0.437351793050766
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 272
valid_auc	 0.770877210553809 	train_auc	 0.780450272019621
valid_accuracy	 0.7949732926363984 	train_accuracy	 0.8018226292396265
valid_loss	 0.4439043402671814 	train_loss	 0.43352439999580383
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 273
valid_auc	 0.7711542906759599 	train_auc	 0.7808189320144205
valid_accuracy	 0.7948302174742464 	train_accuracy	 0.8017033081764758
valid_loss	 0.4431726932525635 	train_loss	 0.432946115732193
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 274
valid_auc	 0.7710592088397482 	train_auc	 0.7807492477437924
valid_accuracy	 0.7946871423120946 	train_accuracy	 0.8016585627777943
valid_loss	 0.44521209597587585 	train_loss	 0.43448716402053833
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 275
valid_auc	 0.7707185754631879 	train_auc	 0.7801390046743457
valid_accuracy	 0.7985024799694773 	train_accuracy	 0.8044029472302598
valid_loss	 0.47031837701797485 	train_loss	 0.4572877287864685
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 276
valid_auc	 0.7707085933117306 	train_auc	 0.7800927262115498
valid_accuracy	 0.798788630293781 	train_accuracy	 0.8042836261671091
valid_loss	 0.4552575349807739 	train_loss	 0.4434082508087158
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 277
valid_auc	 0.7713176252213637 	train_auc	 0.7809845619726099
valid_accuracy	 0.7953071346814193 	train_accuracy	 0.8011216179936164
valid_loss	 0.4444887042045593 	train_loss	 0.4340589642524719
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 278
valid_auc	 0.7715140369563516 	train_auc	 0.7811575469267661
valid_accuracy	 0.7951163677985502 	train_accuracy	 0.8020165259672464
valid_loss	 0.44490256905555725 	train_loss	 0.4341508448123932
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 279
valid_auc	 0.7716841290629838 	train_auc	 0.7813080686820703
valid_accuracy	 0.7964040442579168 	train_accuracy	 0.8030009247382394
valid_loss	 0.4455256760120392 	train_loss	 0.43455269932746887
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 280
valid_auc	 0.771964963385817 	train_auc	 0.7816652162791897
valid_accuracy	 0.7954025181228539 	train_accuracy	 0.8022402529606539
valid_loss	 0.4429786801338196 	train_loss	 0.43249768018722534
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 281
valid_auc	 0.7721667114489177 	train_auc	 0.7819791050696503
valid_accuracy	 0.7939240747806181 	train_accuracy	 0.8013751752528115
valid_loss	 0.4433472156524658 	train_loss	 0.43293246626853943
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 282
valid_auc	 0.7720940609617832 	train_auc	 0.7817737949115277
valid_accuracy	 0.7962609690957649 	train_accuracy	 0.8029263490737703
valid_loss	 0.4484640657901764 	train_loss	 0.4370293617248535
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 283
valid_auc	 0.7720756385627203 	train_auc	 0.7818387052810953
valid_accuracy	 0.795927127050744 	train_accuracy	 0.8026578766816812
valid_loss	 0.4440443813800812 	train_loss	 0.43325626850128174
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 284
valid_auc	 0.7724332999209472 	train_auc	 0.7821301566704234
valid_accuracy	 0.7958317436093094 	train_accuracy	 0.8026280464158936
valid_loss	 0.44541943073272705 	train_loss	 0.43439728021621704
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 285
valid_auc	 0.772354099694408 	train_auc	 0.7819055584173826
valid_accuracy	 0.7983594048073255 	train_accuracy	 0.8044029472302598
valid_loss	 0.4506549537181854 	train_loss	 0.43902021646499634
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 286
valid_auc	 0.7729638221088095 	train_auc	 0.7827420031673568
valid_accuracy	 0.7955455932850057 	train_accuracy	 0.8015839871133251
valid_loss	 0.4419337511062622 	train_loss	 0.43170323967933655
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 287
valid_auc	 0.7732559793690582 	train_auc	 0.7829527500294862
valid_accuracy	 0.7961178939336131 	train_accuracy	 0.8027473674790443
valid_loss	 0.44314196705818176 	train_loss	 0.43240177631378174
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 288
valid_auc	 0.7731872976083597 	train_auc	 0.7828294574363347
valid_accuracy	 0.7976917207172834 	train_accuracy	 0.8046117590907735
valid_loss	 0.44813185930252075 	train_loss	 0.4366031885147095
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 289
valid_auc	 0.773260330219492 	train_auc	 0.7828549581512835
valid_accuracy	 0.7985024799694773 	train_accuracy	 0.8047012498881365
valid_loss	 0.4528881311416626 	train_loss	 0.4409389793872833
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 290
valid_auc	 0.7734367106122673 	train_auc	 0.7830960113804615
valid_accuracy	 0.7977394124380007 	train_accuracy	 0.8038063419145065
valid_loss	 0.44525307416915894 	train_loss	 0.43403834104537964
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 291
valid_auc	 0.7738212413210924 	train_auc	 0.7834687050802172
valid_accuracy	 0.797453262113697 	train_accuracy	 0.8032693971303284
valid_loss	 0.44313549995422363 	train_loss	 0.4322524666786194
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 292
valid_auc	 0.7738060971436969 	train_auc	 0.783416964115695
valid_accuracy	 0.7983117130866082 	train_accuracy	 0.8047161650210304
valid_loss	 0.44931864738464355 	train_loss	 0.4375927448272705
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 293
valid_auc	 0.7738762805846684 	train_auc	 0.7835386142540407
valid_accuracy	 0.7982163296451736 	train_accuracy	 0.8043731169644721
valid_loss	 0.4517976939678192 	train_loss	 0.4397907555103302
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 294
valid_auc	 0.7738171519239206 	train_auc	 0.7834362224440137
valid_accuracy	 0.798788630293781 	train_accuracy	 0.8047609104197119
valid_loss	 0.45384567975997925 	train_loss	 0.4416954517364502
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 295
valid_auc	 0.7739473690561617 	train_auc	 0.7835176459999575
valid_accuracy	 0.7988363220144983 	train_accuracy	 0.8047758255526056
valid_loss	 0.4503557085990906 	train_loss	 0.43853554129600525
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 296
valid_auc	 0.7743476875196424 	train_auc	 0.783983796238086
valid_accuracy	 0.7974055703929798 	train_accuracy	 0.8030605852698147
valid_loss	 0.44473105669021606 	train_loss	 0.43356987833976746
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 297
valid_auc	 0.7747437221719875 	train_auc	 0.7844549075761114
valid_accuracy	 0.797787104158718 	train_accuracy	 0.803940578110551
valid_loss	 0.44730767607688904 	train_loss	 0.43561768531799316
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 298
valid_auc	 0.7749983776489908 	train_auc	 0.784797064713783
valid_accuracy	 0.7979301793208698 	train_accuracy	 0.804030068907914
valid_loss	 0.4439477026462555 	train_loss	 0.43263378739356995
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 299
valid_auc	 0.7754185598564394 	train_auc	 0.7852251884519438
valid_accuracy	 0.7975009538344143 	train_accuracy	 0.8022999134922292
valid_loss	 0.4405486285686493 	train_loss	 0.43000808358192444
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 300
valid_auc	 0.7753554691731855 	train_auc	 0.7851474103122041
valid_accuracy	 0.7980255627623045 	train_accuracy	 0.8038958327118695
valid_loss	 0.44513753056526184 	train_loss	 0.4336346387863159


Start testing ......................
 Best epoch: 299
===== 设备: cuda =====
训练总段数: 152
实际用段数: 152
实际元素数: 23284
最后一次所用q.shpe: torch.Size([8, 200])
===== 数据来自Test=====

test_auc	 0.7873214011183775
test_accuracy	 0.7941075416595087
test_loss	 0.4378436803817749
@ 使用预设Q-matrix:  qm_fold5_trained_0.99.json


===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 1
valid_auc	 0.7251404674408901 	train_auc	 0.7335330550439405
valid_accuracy	 0.7913010301411675 	train_accuracy	 0.797914864421442
valid_loss	 0.47801440954208374 	train_loss	 0.4668408930301666
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 2
valid_auc	 0.7440725595818464 	train_auc	 0.7524386961251539
valid_accuracy	 0.7937809996184663 	train_accuracy	 0.7999284073621096
valid_loss	 0.47227612137794495 	train_loss	 0.46183595061302185
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 3
valid_auc	 0.7532173231691032 	train_auc	 0.7616806226243344
valid_accuracy	 0.794925600915681 	train_accuracy	 0.7995555290397638
valid_loss	 0.45307329297065735 	train_loss	 0.44500941038131714
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 4
valid_auc	 0.7578058480256659 	train_auc	 0.7668049089720985
valid_accuracy	 0.7974055703929798 	train_accuracy	 0.8013602601199177
valid_loss	 0.45277145504951477 	train_loss	 0.44361555576324463
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 5
valid_auc	 0.7621603319893295 	train_auc	 0.7717394874901751
valid_accuracy	 0.7986455551316292 	train_accuracy	 0.8033439727947976
valid_loss	 0.44801974296569824 	train_loss	 0.4384363889694214
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 6
valid_auc	 0.7651602467153424 	train_auc	 0.7753985268745454
valid_accuracy	 0.7998855398702786 	train_accuracy	 0.8042836261671091
valid_loss	 0.4500681757926941 	train_loss	 0.4392831027507782
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 7
valid_auc	 0.7680574103094642 	train_auc	 0.7787986001517107
valid_accuracy	 0.8005532239603205 	train_accuracy	 0.8059242907854309
valid_loss	 0.4475111663341522 	train_loss	 0.43620914220809937
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 8
valid_auc	 0.7706794647367929 	train_auc	 0.781705718037266
valid_accuracy	 0.8010301411674933 	train_accuracy	 0.807177161948513
valid_loss	 0.44437170028686523 	train_loss	 0.4328126013278961
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 9
valid_auc	 0.7724668732013357 	train_auc	 0.7841492872854784
valid_accuracy	 0.8011732163296452 	train_accuracy	 0.8078483429287355
valid_loss	 0.4449678957462311 	train_loss	 0.43242785334587097
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 10
valid_auc	 0.7742189385480254 	train_auc	 0.7862735985101819
valid_accuracy	 0.8013162914917971 	train_accuracy	 0.8080273245234615
valid_loss	 0.44473767280578613 	train_loss	 0.43165722489356995
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 11
valid_auc	 0.7760919628999161 	train_auc	 0.788428278281053
valid_accuracy	 0.8012685997710798 	train_accuracy	 0.8089669778957731
valid_loss	 0.44146233797073364 	train_loss	 0.42830201983451843
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 12
valid_auc	 0.7777617241005741 	train_auc	 0.7905431171123538
valid_accuracy	 0.8010301411674933 	train_accuracy	 0.8101900187930674
valid_loss	 0.437461256980896 	train_loss	 0.4241198003292084
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 13
valid_auc	 0.7791423649211779 	train_auc	 0.7922673784709919
valid_accuracy	 0.8021747424647081 	train_accuracy	 0.8106374727798825
valid_loss	 0.43505793809890747 	train_loss	 0.42173272371292114
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 14
valid_auc	 0.7801415923603089 	train_auc	 0.7936319243672039
valid_accuracy	 0.8025085845097291 	train_accuracy	 0.8106225576469887
valid_loss	 0.43521201610565186 	train_loss	 0.4212350845336914
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 15
valid_auc	 0.7815394354647539 	train_auc	 0.7953628071405039
valid_accuracy	 0.802985501716902 	train_accuracy	 0.8116218715508755
valid_loss	 0.43445107340812683 	train_loss	 0.4200825095176697
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 16
valid_auc	 0.7827745339696166 	train_auc	 0.7967869126946752
valid_accuracy	 0.8044162533384205 	train_accuracy	 0.8123377979297796
valid_loss	 0.4340207278728485 	train_loss	 0.41939055919647217
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 17
valid_auc	 0.783648639263147 	train_auc	 0.7979967582665101
valid_accuracy	 0.8039870278519649 	train_accuracy	 0.8124422038600364
valid_loss	 0.4332255423069 	train_loss	 0.4181448817253113
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 18
valid_auc	 0.7846429996492504 	train_auc	 0.7989911816356731
valid_accuracy	 0.8045593285005723 	train_accuracy	 0.8130984697073651
valid_loss	 0.43292444944381714 	train_loss	 0.4176708459854126
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 19
valid_auc	 0.7854439583648418 	train_auc	 0.8003171665560884
valid_accuracy	 0.8049408622663106 	train_accuracy	 0.8134116874981356
valid_loss	 0.4306568503379822 	train_loss	 0.4154055416584015
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 20
valid_auc	 0.7863274826797271 	train_auc	 0.8009774810145719
valid_accuracy	 0.8064193056085464 	train_accuracy	 0.8143215106046595
valid_loss	 0.43240657448768616 	train_loss	 0.4167364537715912
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 21
valid_auc	 0.7873024687087373 	train_auc	 0.8025069523927879
valid_accuracy	 0.8060377718428081 	train_accuracy	 0.8143811711362349
valid_loss	 0.4289425015449524 	train_loss	 0.41348451375961304
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 22
valid_auc	 0.7882131506432017 	train_auc	 0.8031498824957537
valid_accuracy	 0.8069916062571537 	train_accuracy	 0.8144408316678101
valid_loss	 0.4307176172733307 	train_loss	 0.4147603213787079
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 23
valid_auc	 0.7886100433985599 	train_auc	 0.8041863806223999
valid_accuracy	 0.8063239221671118 	train_accuracy	 0.8145154073322793
valid_loss	 0.42912936210632324 	train_loss	 0.41282039880752563
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 24
valid_auc	 0.7894852146169267 	train_auc	 0.8050681638721096
valid_accuracy	 0.8064193056085464 	train_accuracy	 0.8152462488440771
valid_loss	 0.42912888526916504 	train_loss	 0.4125814735889435
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 25
valid_auc	 0.7900942465265599 	train_auc	 0.8060147708375087
valid_accuracy	 0.8066100724914155 	train_accuracy	 0.8154401455716971
valid_loss	 0.4289771616458893 	train_loss	 0.41204479336738586
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 26
valid_auc	 0.7907207086536472 	train_auc	 0.8069440278443492
valid_accuracy	 0.8063239221671118 	train_accuracy	 0.8153208245085464
valid_loss	 0.4280725419521332 	train_loss	 0.41085752844810486
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 27
valid_auc	 0.7916134776877126 	train_auc	 0.8079124788633332
valid_accuracy	 0.8069439145364364 	train_accuracy	 0.8158130238940429
valid_loss	 0.42600271105766296 	train_loss	 0.4092176854610443
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 28
valid_auc	 0.7926877824365621 	train_auc	 0.8086142396733131
valid_accuracy	 0.8065623807706982 	train_accuracy	 0.8161709870834949
valid_loss	 0.4274614155292511 	train_loss	 0.41031086444854736
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 29
valid_auc	 0.7931072540274529 	train_auc	 0.8095235418134094
valid_accuracy	 0.8070869896985883 	train_accuracy	 0.8160814962861319
valid_loss	 0.4271779954433441 	train_loss	 0.409552663564682
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 30
valid_auc	 0.7936448756769627 	train_auc	 0.8103561830534627
valid_accuracy	 0.8072300648607402 	train_accuracy	 0.8163947140769025
valid_loss	 0.4253268837928772 	train_loss	 0.4077102243900299
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 31
valid_auc	 0.794371936974479 	train_auc	 0.810999412806862
valid_accuracy	 0.8069916062571537 	train_accuracy	 0.8165587805387347
valid_loss	 0.42727693915367126 	train_loss	 0.4090847671031952
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 32
valid_auc	 0.7951705090910651 	train_auc	 0.8120580453768074
valid_accuracy	 0.8064193056085464 	train_accuracy	 0.8164543746084778
valid_loss	 0.42619505524635315 	train_loss	 0.4079574942588806
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 33
valid_auc	 0.7957046111774353 	train_auc	 0.8125139003404305
valid_accuracy	 0.8072300648607402 	train_accuracy	 0.8169913193926558
valid_loss	 0.42338380217552185 	train_loss	 0.40563327074050903
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 34
valid_auc	 0.7963957662269961 	train_auc	 0.8133959958086935
valid_accuracy	 0.8078977489507821 	train_accuracy	 0.817692330638666
valid_loss	 0.42478662729263306 	train_loss	 0.4063102900981903
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 35
valid_auc	 0.796874681563335 	train_auc	 0.8140477527005952
valid_accuracy	 0.8074685234643266 	train_accuracy	 0.8180204635623304
valid_loss	 0.4244939386844635 	train_loss	 0.4057466387748718
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 36
valid_auc	 0.797080022932803 	train_auc	 0.814748660862873
valid_accuracy	 0.807706982067913 	train_accuracy	 0.8174387733794708
valid_loss	 0.4225470721721649 	train_loss	 0.4038940668106079
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 37
valid_auc	 0.7978202373405671 	train_auc	 0.8155714387748518
valid_accuracy	 0.8072777565814575 	train_accuracy	 0.8180652089610119
valid_loss	 0.4223693311214447 	train_loss	 0.40340548753738403
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 38
valid_auc	 0.7986237703651979 	train_auc	 0.8163519851585905
valid_accuracy	 0.8081838992750858 	train_accuracy	 0.81840825701757
valid_loss	 0.42251184582710266 	train_loss	 0.40329432487487793
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 39
valid_auc	 0.7989835434613087 	train_auc	 0.8166934345126771
valid_accuracy	 0.8077546737886303 	train_accuracy	 0.8182591056886317
valid_loss	 0.4239808917045593 	train_loss	 0.40432190895080566
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 40
valid_auc	 0.7994667090891344 	train_auc	 0.8178410394481687
valid_accuracy	 0.8081362075543685 	train_accuracy	 0.818855711004385
valid_loss	 0.4217381775379181 	train_loss	 0.40194690227508545
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 41
valid_auc	 0.7999609496089731 	train_auc	 0.8181933172296295
valid_accuracy	 0.8070869896985883 	train_accuracy	 0.8188706261372789
valid_loss	 0.42112743854522705 	train_loss	 0.401371031999588
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 42
valid_auc	 0.8001838954980698 	train_auc	 0.8184626083779393
valid_accuracy	 0.8076592903471957 	train_accuracy	 0.819139098529368
valid_loss	 0.4230573773384094 	train_loss	 0.4025944173336029
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 43
valid_auc	 0.8005406116021964 	train_auc	 0.8192982897800094
valid_accuracy	 0.8073731400228921 	train_accuracy	 0.8185424932136145
valid_loss	 0.42065224051475525 	train_loss	 0.40040674805641174
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 44
valid_auc	 0.8013189378508166 	train_auc	 0.8196936246167332
valid_accuracy	 0.8073254483021748 	train_accuracy	 0.8190346925991111
valid_loss	 0.42109566926956177 	train_loss	 0.4008042812347412
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 45
valid_auc	 0.801830528140952 	train_auc	 0.8204760608487925
valid_accuracy	 0.8077546737886303 	train_accuracy	 0.818766220207022
valid_loss	 0.4203202724456787 	train_loss	 0.39983290433883667
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 46
valid_auc	 0.8025411782183421 	train_auc	 0.8207750259892841
valid_accuracy	 0.8072777565814575 	train_accuracy	 0.8194374011872446
valid_loss	 0.4224276840686798 	train_loss	 0.4017626643180847
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 47
valid_auc	 0.8026014934746628 	train_auc	 0.8216223024740325
valid_accuracy	 0.807706982067913 	train_accuracy	 0.8196014676490767
valid_loss	 0.4190593361854553 	train_loss	 0.3983941674232483
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 48
valid_auc	 0.8028916328520448 	train_auc	 0.8215953167365148
valid_accuracy	 0.8079931323922167 	train_accuracy	 0.8199296005727411
valid_loss	 0.4215131103992462 	train_loss	 0.400328129529953
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 49
valid_auc	 0.8033828364916887 	train_auc	 0.822843450092912
valid_accuracy	 0.8081838992750858 	train_accuracy	 0.8200787519016794
valid_loss	 0.42017146944999695 	train_loss	 0.3985944390296936
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 50
valid_auc	 0.8034440299628121 	train_auc	 0.8232517128944865
valid_accuracy	 0.8080885158336513 	train_accuracy	 0.819586552516183
valid_loss	 0.41831934452056885 	train_loss	 0.3968484103679657
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 51
valid_auc	 0.8038976513720532 	train_auc	 0.8235038875866729
valid_accuracy	 0.807706982067913 	train_accuracy	 0.8205709512871759
valid_loss	 0.4195766746997833 	train_loss	 0.39775094389915466
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 52
valid_auc	 0.803996172324247 	train_auc	 0.8239385189649381
valid_accuracy	 0.8072300648607402 	train_accuracy	 0.8206007815529637
valid_loss	 0.4209001064300537 	train_loss	 0.3983376622200012
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 53
valid_auc	 0.8045771818073579 	train_auc	 0.824778376951641
valid_accuracy	 0.8078977489507821 	train_accuracy	 0.8208095934134774
valid_loss	 0.4174080789089203 	train_loss	 0.39548006653785706
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 54
valid_auc	 0.8049567180884898 	train_auc	 0.8247692802788706
valid_accuracy	 0.8076592903471957 	train_accuracy	 0.8213614533305492
valid_loss	 0.41913583874702454 	train_loss	 0.3968328833580017
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 55
valid_auc	 0.8049061637539433 	train_auc	 0.8256530638440586
valid_accuracy	 0.807706982067913 	train_accuracy	 0.8205560361542822
valid_loss	 0.4171745777130127 	train_loss	 0.3946835696697235
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 56
valid_auc	 0.8055186481874183 	train_auc	 0.8259242044904098
valid_accuracy	 0.8080885158336513 	train_accuracy	 0.8217641619186827
valid_loss	 0.4182139039039612 	train_loss	 0.3953867554664612
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 57
valid_auc	 0.805925898514302 	train_auc	 0.8267870389844342
valid_accuracy	 0.8076115986264785 	train_accuracy	 0.8213316230647615
valid_loss	 0.41677162051200867 	train_loss	 0.3939739167690277
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 58
valid_auc	 0.8063334907416049 	train_auc	 0.8265700662726744
valid_accuracy	 0.808374666157955 	train_accuracy	 0.8212719625331861
valid_loss	 0.4206407964229584 	train_loss	 0.39707332849502563
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 59
valid_auc	 0.8066895833802608 	train_auc	 0.8274132601029479
valid_accuracy	 0.808374666157955 	train_accuracy	 0.8216299257226382
valid_loss	 0.41813865303993225 	train_loss	 0.394657164812088
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 60
valid_auc	 0.8066012859209966 	train_auc	 0.8276742060197516
valid_accuracy	 0.8084223578786722 	train_accuracy	 0.821644840855532
valid_loss	 0.4172837734222412 	train_loss	 0.3936663568019867
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 61
valid_auc	 0.8074881957204257 	train_auc	 0.8286912586192431
valid_accuracy	 0.8085654330408241 	train_accuracy	 0.822002804044984
valid_loss	 0.41615739464759827 	train_loss	 0.3926158547401428
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 62
valid_auc	 0.8073217170319504 	train_auc	 0.8286200655127661
valid_accuracy	 0.8082315909958031 	train_accuracy	 0.8224353428989052
valid_loss	 0.41846904158592224 	train_loss	 0.3942243456840515
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 63
valid_auc	 0.807244534688278 	train_auc	 0.8290067071795112
valid_accuracy	 0.8084700495993895 	train_accuracy	 0.821734331652895
valid_loss	 0.41595667600631714 	train_loss	 0.39185601472854614
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 64
valid_auc	 0.808060764955931 	train_auc	 0.8299807529962187
valid_accuracy	 0.8084223578786722 	train_accuracy	 0.8223458521015422
valid_loss	 0.4157699942588806 	train_loss	 0.39140960574150085
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 65
valid_auc	 0.8079983379617264 	train_auc	 0.8299170418898659
valid_accuracy	 0.808708508202976 	train_accuracy	 0.8226441547594189
valid_loss	 0.41624370217323303 	train_loss	 0.391597718000412
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 66
valid_auc	 0.8084160531230123 	train_auc	 0.830398623794593
valid_accuracy	 0.8082315909958031 	train_accuracy	 0.8223458521015422
valid_loss	 0.41465580463409424 	train_loss	 0.390394389629364
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 67
valid_auc	 0.8087617211508449 	train_auc	 0.8304984364941536
valid_accuracy	 0.8085177413201068 	train_accuracy	 0.8228380514870387
valid_loss	 0.41861939430236816 	train_loss	 0.39337867498397827
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 68
valid_auc	 0.8081471316834158 	train_auc	 0.8310609054945555
valid_accuracy	 0.8082315909958031 	train_accuracy	 0.8224950034304805
valid_loss	 0.4148991107940674 	train_loss	 0.38977786898612976
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 69
valid_auc	 0.8089538691864862 	train_auc	 0.8315967525714321
valid_accuracy	 0.8089946585272797 	train_accuracy	 0.8230617784804463
valid_loss	 0.41519078612327576 	train_loss	 0.38980966806411743
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 70
valid_auc	 0.8094394683408257 	train_auc	 0.8319076104605958
valid_accuracy	 0.8085177413201068 	train_accuracy	 0.8228827968857203
valid_loss	 0.41638606786727905 	train_loss	 0.39056912064552307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 71
valid_auc	 0.8096499784401617 	train_auc	 0.8322117662345392
valid_accuracy	 0.8087561999236933 	train_accuracy	 0.8231960146764907
valid_loss	 0.41496044397354126 	train_loss	 0.38943493366241455
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 72
valid_auc	 0.8098180660717867 	train_auc	 0.8327345199765687
valid_accuracy	 0.8088038916444106 	train_accuracy	 0.8235987232646242
valid_loss	 0.4189864695072174 	train_loss	 0.39219292998313904
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 73
valid_auc	 0.8097497664350861 	train_auc	 0.8335298001655204
valid_accuracy	 0.8091377336894315 	train_accuracy	 0.8232556752080661
valid_loss	 0.4136736989021301 	train_loss	 0.38747653365135193
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 74
valid_auc	 0.8097581798669726 	train_auc	 0.8329150524173675
valid_accuracy	 0.8090900419687143 	train_accuracy	 0.8233600811383229
valid_loss	 0.41429945826530457 	train_loss	 0.3883015811443329
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 75
valid_auc	 0.8104503539138616 	train_auc	 0.8337096949396124
valid_accuracy	 0.8084700495993895 	train_accuracy	 0.8238970259225009
valid_loss	 0.41810521483421326 	train_loss	 0.3909716010093689
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 76
valid_auc	 0.8091098696326997 	train_auc	 0.8335874302863596
valid_accuracy	 0.8062762304463945 	train_accuracy	 0.8216000954568505
valid_loss	 0.4147910475730896 	train_loss	 0.38853922486305237
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 77
valid_auc	 0.810621042670245 	train_auc	 0.8340695942934746
valid_accuracy	 0.8093285005723007 	train_accuracy	 0.8233153357396414
valid_loss	 0.4192622900009155 	train_loss	 0.39158138632774353
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 78
valid_auc	 0.8102232985158035 	train_auc	 0.8345922574127458
valid_accuracy	 0.8076592903471957 	train_accuracy	 0.8242848193777407
valid_loss	 0.41431334614753723 	train_loss	 0.38692933320999146
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 79
valid_auc	 0.8108143370778803 	train_auc	 0.83487333481145
valid_accuracy	 0.8098531095001907 	train_accuracy	 0.8247621036303433
valid_loss	 0.4145785868167877 	train_loss	 0.3871171474456787
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 80
valid_auc	 0.8112298332384057 	train_auc	 0.8356875075302881
valid_accuracy	 0.8094238840137352 	train_accuracy	 0.824881424693494
valid_loss	 0.41346102952957153 	train_loss	 0.3858485221862793
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 81
valid_auc	 0.8101709006005648 	train_auc	 0.8354045667424629
valid_accuracy	 0.8073731400228921 	train_accuracy	 0.8244638009724666
valid_loss	 0.4139157831668854 	train_loss	 0.38585126399993896
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 82
valid_auc	 0.8114270561488981 	train_auc	 0.8362602804044355
valid_accuracy	 0.8091377336894315 	train_accuracy	 0.8250007457566447
valid_loss	 0.4144688546657562 	train_loss	 0.3861508071422577
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 83
valid_auc	 0.8116053002341549 	train_auc	 0.8363552676074966
valid_accuracy	 0.8089946585272797 	train_accuracy	 0.8247322733645557
valid_loss	 0.4143054783344269 	train_loss	 0.3858262598514557
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 84
valid_auc	 0.8108113806448429 	train_auc	 0.8363973608864196
valid_accuracy	 0.8085177413201068 	train_accuracy	 0.8246427825671927
valid_loss	 0.41365373134613037 	train_loss	 0.38500306010246277
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 85
valid_auc	 0.8116444176644797 	train_auc	 0.836900627428055
valid_accuracy	 0.8088515833651279 	train_accuracy	 0.8249112549592816
valid_loss	 0.4142926335334778 	train_loss	 0.38536563515663147
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 86
valid_auc	 0.8122164304738123 	train_auc	 0.8375124302673091
valid_accuracy	 0.8100438763830599 	train_accuracy	 0.8252841332816275
valid_loss	 0.41476282477378845 	train_loss	 0.38542547821998596
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 87
valid_auc	 0.8113312368804095 	train_auc	 0.8373408549270034
valid_accuracy	 0.808708508202976 	train_accuracy	 0.8252543030158399
valid_loss	 0.4134335219860077 	train_loss	 0.38407522439956665
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 88
valid_auc	 0.8125829142036429 	train_auc	 0.8379814030405388
valid_accuracy	 0.8101869515452117 	train_accuracy	 0.825239387882946
valid_loss	 0.41608911752700806 	train_loss	 0.38616475462913513
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 89
valid_auc	 0.8124522814277547 	train_auc	 0.838352096424816
valid_accuracy	 0.8095669591758871 	train_accuracy	 0.8254481997434597
valid_loss	 0.41347384452819824 	train_loss	 0.38371148705482483
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 90
valid_auc	 0.812326904532822 	train_auc	 0.8385697385543218
valid_accuracy	 0.8092808088515834 	train_accuracy	 0.8256420964710796
valid_loss	 0.41348060965538025 	train_loss	 0.3833734691143036
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 91
valid_auc	 0.8122604752925326 	train_auc	 0.838993284189498
valid_accuracy	 0.8088515833651279 	train_accuracy	 0.8260149747934254
valid_loss	 0.41222259402275085 	train_loss	 0.3822815418243408
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 92
valid_auc	 0.8122193667950603 	train_auc	 0.8389867395065144
valid_accuracy	 0.8102346432659291 	train_accuracy	 0.8260448050592131
valid_loss	 0.4135054647922516 	train_loss	 0.38285374641418457
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 93
valid_auc	 0.8121352190683361 	train_auc	 0.8392455481814824
valid_accuracy	 0.8098531095001907 	train_accuracy	 0.8260597201921069
valid_loss	 0.41287338733673096 	train_loss	 0.38224971294403076
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 94
valid_auc	 0.8128025684632125 	train_auc	 0.839169591096145
valid_accuracy	 0.8099961846623426 	train_accuracy	 0.8262685320526206
valid_loss	 0.41464099287986755 	train_loss	 0.3838370442390442
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 95
valid_auc	 0.8131287213514264 	train_auc	 0.840075445602553
valid_accuracy	 0.8097100343380389 	train_accuracy	 0.8256271813381857
valid_loss	 0.41457927227020264 	train_loss	 0.3834037482738495
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 96
valid_auc	 0.8127409459405828 	train_auc	 0.8404868940917412
valid_accuracy	 0.8099961846623426 	train_accuracy	 0.8265519195776034
valid_loss	 0.4129745364189148 	train_loss	 0.3813559114933014
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 97
valid_auc	 0.8125086681812185 	train_auc	 0.8404209637200347
valid_accuracy	 0.8096623426173216 	train_accuracy	 0.8266264952420727
valid_loss	 0.4119570851325989 	train_loss	 0.3808596134185791
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 98
valid_auc	 0.8135225906344492 	train_auc	 0.8408634885389755
valid_accuracy	 0.8101869515452117 	train_accuracy	 0.8270441189630999
valid_loss	 0.41323232650756836 	train_loss	 0.3815757930278778
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 99
valid_auc	 0.8128772368332137 	train_auc	 0.8415140044944232
valid_accuracy	 0.8094715757344525 	train_accuracy	 0.8265966649762849
valid_loss	 0.41171741485595703 	train_loss	 0.3797621428966522
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 100
valid_auc	 0.8129241040063757 	train_auc	 0.8411206660042976
valid_accuracy	 0.8098531095001907 	train_accuracy	 0.8271783551591445
valid_loss	 0.41332900524139404 	train_loss	 0.3807452917098999
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 101
valid_auc	 0.8132255797290326 	train_auc	 0.8416957917627559
valid_accuracy	 0.8108546356352537 	train_accuracy	 0.8274915729499149
valid_loss	 0.41323763132095337 	train_loss	 0.38047733902931213
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 102
valid_auc	 0.8134276294689736 	train_auc	 0.8421866727531292
valid_accuracy	 0.8101392598244944 	train_accuracy	 0.8277302150762164
valid_loss	 0.4116628170013428 	train_loss	 0.379228800535202
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 103
valid_auc	 0.8132021092708377 	train_auc	 0.8422699960795934
valid_accuracy	 0.8098531095001907 	train_accuracy	 0.8275512334814903
valid_loss	 0.4117862582206726 	train_loss	 0.37913838028907776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 104
valid_auc	 0.8128317841892375 	train_auc	 0.8421689675798182
valid_accuracy	 0.808374666157955 	train_accuracy	 0.825970229394744
valid_loss	 0.41269761323928833 	train_loss	 0.37976545095443726
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 105
valid_auc	 0.814100536421646 	train_auc	 0.8429644104928465
valid_accuracy	 0.8104254101487982 	train_accuracy	 0.8281627539301375
valid_loss	 0.4133557081222534 	train_loss	 0.38002195954322815
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 106
valid_auc	 0.8139525940990401 	train_auc	 0.8428269642124299
valid_accuracy	 0.8107592521938192 	train_accuracy	 0.828386480923545
valid_loss	 0.4135463535785675 	train_loss	 0.3797112703323364
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 107
valid_auc	 0.8140187082546292 	train_auc	 0.8431172037704232
valid_accuracy	 0.8108069439145364 	train_accuracy	 0.8283566506577573
valid_loss	 0.4128612279891968 	train_loss	 0.37901660799980164
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 108
valid_auc	 0.8147615640107305 	train_auc	 0.843685153132511
valid_accuracy	 0.8115700114460129 	train_accuracy	 0.8280434328669869
valid_loss	 0.4151870608329773 	train_loss	 0.3806634247303009
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 109
valid_auc	 0.8139754612035539 	train_auc	 0.8437065242279057
valid_accuracy	 0.8101392598244944 	train_accuracy	 0.8282671598603943
valid_loss	 0.41216591000556946 	train_loss	 0.3780481517314911
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 110
valid_auc	 0.8144881710499641 	train_auc	 0.8443029324434407
valid_accuracy	 0.8114269362838611 	train_accuracy	 0.8284163111893327
valid_loss	 0.413606733083725 	train_loss	 0.3785328269004822
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 111
valid_auc	 0.8141626818507994 	train_auc	 0.843860067623787
valid_accuracy	 0.8110930942388401 	train_accuracy	 0.8285356322524834
valid_loss	 0.41286611557006836 	train_loss	 0.3781350553035736
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 112
valid_auc	 0.8146963012542249 	train_auc	 0.8452367483703462
valid_accuracy	 0.8107115604731019 	train_accuracy	 0.8292515586313874
valid_loss	 0.411415696144104 	train_loss	 0.37667447328567505
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 113
valid_auc	 0.8142264898545407 	train_auc	 0.8445398520841847
valid_accuracy	 0.8110930942388401 	train_accuracy	 0.8293112191629627
valid_loss	 0.41288426518440247 	train_loss	 0.37745940685272217
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 114
valid_auc	 0.8151292142243445 	train_auc	 0.8456018555561398
valid_accuracy	 0.8111407859595574 	train_accuracy	 0.8298630790800346
valid_loss	 0.41185685992240906 	train_loss	 0.37650439143180847
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 115
valid_auc	 0.8144804950503546 	train_auc	 0.8452280002975285
valid_accuracy	 0.8105207935902328 	train_accuracy	 0.829206813232706
valid_loss	 0.41254180669784546 	train_loss	 0.37664252519607544
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 116
valid_auc	 0.8150380810027792 	train_auc	 0.8460136156024015
valid_accuracy	 0.8110454025181228 	train_accuracy	 0.8292963040300689
valid_loss	 0.4144147038459778 	train_loss	 0.37799012660980225
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 117
valid_auc	 0.8143575449780058 	train_auc	 0.846059720757441
valid_accuracy	 0.8094238840137352 	train_accuracy	 0.8286400381827402
valid_loss	 0.41158202290534973 	train_loss	 0.37546905875205994
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 118
valid_auc	 0.8147874948111584 	train_auc	 0.8465956558111556
valid_accuracy	 0.8115223197252956 	train_accuracy	 0.8302359574023804
valid_loss	 0.41167786717414856 	train_loss	 0.37510496377944946
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 119
valid_auc	 0.8153800618692272 	train_auc	 0.8468332184104466
valid_accuracy	 0.8110930942388401 	train_accuracy	 0.8302956179339558
valid_loss	 0.4117792546749115 	train_loss	 0.3751432001590729
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 120
valid_auc	 0.8149449231944172 	train_auc	 0.8469002428700501
valid_accuracy	 0.8106161770316673 	train_accuracy	 0.8298630790800346
valid_loss	 0.41210755705833435 	train_loss	 0.3748941421508789
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 121
valid_auc	 0.814647704467177 	train_auc	 0.8471185987364609
valid_accuracy	 0.8114269362838611 	train_accuracy	 0.8304000238642126
valid_loss	 0.4128955900669098 	train_loss	 0.37512198090553284
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 122
valid_auc	 0.8145261957397331 	train_auc	 0.8470957115289379
valid_accuracy	 0.8089946585272797 	train_accuracy	 0.8294156250932195
valid_loss	 0.4126059412956238 	train_loss	 0.37479516863822937
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 123
valid_auc	 0.8150903917669308 	train_auc	 0.8480221460006772
valid_accuracy	 0.8107592521938192 	train_accuracy	 0.8307579870536647
valid_loss	 0.41062384843826294 	train_loss	 0.37324512004852295
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 124
valid_auc	 0.8156373922142168 	train_auc	 0.8477205534616803
valid_accuracy	 0.8129053796260969 	train_accuracy	 0.8306088357247263
valid_loss	 0.4147382974624634 	train_loss	 0.37657392024993896
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 125
valid_auc	 0.8155063102750328 	train_auc	 0.8483564123435934
valid_accuracy	 0.8121423120946204 	train_accuracy	 0.8309369686483906
valid_loss	 0.4124376177787781 	train_loss	 0.3741546869277954
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 126
valid_auc	 0.81474370474177 	train_auc	 0.848551980885959
valid_accuracy	 0.8095669591758871 	train_accuracy	 0.8307430719207708
valid_loss	 0.41151919960975647 	train_loss	 0.37278231978416443
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 127
valid_auc	 0.8144001819714702 	train_auc	 0.8487594183637174
valid_accuracy	 0.8086131247615413 	train_accuracy	 0.8295796915550517
valid_loss	 0.4118134379386902 	train_loss	 0.3733719289302826
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 128
valid_auc	 0.8150872744395783 	train_auc	 0.8488554421059169
valid_accuracy	 0.8097100343380389 	train_accuracy	 0.8309518837812845
valid_loss	 0.41154396533966064 	train_loss	 0.3726435899734497
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 129
valid_auc	 0.8156026725618344 	train_auc	 0.8492704599411107
valid_accuracy	 0.8113315528424265 	train_accuracy	 0.8311606956417982
valid_loss	 0.4128139019012451 	train_loss	 0.3731198012828827
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 130
valid_auc	 0.8155516824718516 	train_auc	 0.849404272711963
valid_accuracy	 0.8120469286531858 	train_accuracy	 0.8315186588312502
valid_loss	 0.4130508303642273 	train_loss	 0.37297818064689636
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 131
valid_auc	 0.8150076652733218 	train_auc	 0.8495685638346603
valid_accuracy	 0.8105207935902328 	train_accuracy	 0.831891537153596
valid_loss	 0.41199415922164917 	train_loss	 0.3719042241573334
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 132
valid_auc	 0.81570528961513 	train_auc	 0.8498786596988799
valid_accuracy	 0.8125238458603586 	train_accuracy	 0.8315932344957193
valid_loss	 0.41351377964019775 	train_loss	 0.37300774455070496
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 133
valid_auc	 0.8157126237143203 	train_auc	 0.8504495275106669
valid_accuracy	 0.8113315528424265 	train_accuracy	 0.8316379798944009
valid_loss	 0.41198843717575073 	train_loss	 0.3714216947555542
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 134
valid_auc	 0.815458316841666 	train_auc	 0.8505313254642828
valid_accuracy	 0.8099961846623426 	train_accuracy	 0.8316678101601885
valid_loss	 0.411508709192276 	train_loss	 0.3708249628543854
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 135
valid_auc	 0.8154976219820249 	train_auc	 0.8506108552030259
valid_accuracy	 0.8113792445631438 	train_accuracy	 0.8318169614891269
valid_loss	 0.4122062623500824 	train_loss	 0.37101811170578003
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 136
valid_auc	 0.8157189052965336 	train_auc	 0.850539521201312
valid_accuracy	 0.8120469286531858 	train_accuracy	 0.8316976404259762
valid_loss	 0.41329145431518555 	train_loss	 0.3719041049480438
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 137
valid_auc	 0.816015446926865 	train_auc	 0.8518123502515148
valid_accuracy	 0.8108546356352537 	train_accuracy	 0.8322942457417296
valid_loss	 0.4106887876987457 	train_loss	 0.3694346845149994
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 138
valid_auc	 0.8149903356148147 	train_auc	 0.8507395692861444
valid_accuracy	 0.8098531095001907 	train_accuracy	 0.8313993377680995
valid_loss	 0.4122907221317291 	train_loss	 0.37067440152168274
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 139
valid_auc	 0.8156401274175711 	train_auc	 0.8514872758344872
valid_accuracy	 0.8116177031667302 	train_accuracy	 0.8323091608746234
valid_loss	 0.41298893094062805 	train_loss	 0.3703860938549042
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 140
valid_auc	 0.8154836040648339 	train_auc	 0.8520498718390463
valid_accuracy	 0.8107592521938192 	train_accuracy	 0.8322345852101543
valid_loss	 0.4116763174533844 	train_loss	 0.369209885597229
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 141
valid_auc	 0.8161951256530968 	train_auc	 0.8518744731444204
valid_accuracy	 0.8124761541396414 	train_accuracy	 0.8322942457417296
valid_loss	 0.4141019880771637 	train_loss	 0.3711583912372589
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 142
valid_auc	 0.8156851376021814 	train_auc	 0.8531507637193914
valid_accuracy	 0.8113315528424265 	train_accuracy	 0.8327118694627569
valid_loss	 0.4100293815135956 	train_loss	 0.3678008019924164
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 143
valid_auc	 0.8159896367971734 	train_auc	 0.8528159033674474
valid_accuracy	 0.8110454025181228 	train_accuracy	 0.8332935596456165
valid_loss	 0.4113193452358246 	train_loss	 0.3684074580669403
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 144
valid_auc	 0.816307114800239 	train_auc	 0.8522149752591668
valid_accuracy	 0.8121900038153377 	train_accuracy	 0.8329206813232706
valid_loss	 0.4140131175518036 	train_loss	 0.3703988492488861
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 145
valid_auc	 0.8158705884119624 	train_auc	 0.8533581873060699
valid_accuracy	 0.8105207935902328 	train_accuracy	 0.8331145780508904
valid_loss	 0.41216862201690674 	train_loss	 0.368071585893631
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 146
valid_auc	 0.8162046921609072 	train_auc	 0.853600341899425
valid_accuracy	 0.8108546356352537 	train_accuracy	 0.8331294931837843
valid_loss	 0.41169625520706177 	train_loss	 0.36773455142974854
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 147
valid_auc	 0.8160712571423668 	train_auc	 0.8541650883754197
valid_accuracy	 0.8109500190766883 	train_accuracy	 0.8343525340810787
valid_loss	 0.41127634048461914 	train_loss	 0.36695894598960876
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 148
valid_auc	 0.8156269206758848 	train_auc	 0.8535281486352091
valid_accuracy	 0.8102823349866464 	train_accuracy	 0.8327267845956507
valid_loss	 0.4132060110569 	train_loss	 0.368050217628479
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 149
valid_auc	 0.8159679764000218 	train_auc	 0.8545316819067421
valid_accuracy	 0.8107592521938192 	train_accuracy	 0.8339349103600513
valid_loss	 0.4108910858631134 	train_loss	 0.36642739176750183
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 150
valid_auc	 0.8163715663812402 	train_auc	 0.8549395570810449
valid_accuracy	 0.8117130866081648 	train_accuracy	 0.8338155892969006
valid_loss	 0.41179654002189636 	train_loss	 0.36653387546539307
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 151
valid_auc	 0.8155612690914513 	train_auc	 0.8542113271494162
valid_accuracy	 0.8104731018695155 	train_accuracy	 0.8338305044297945
valid_loss	 0.4124983549118042 	train_loss	 0.3670077621936798
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 152
valid_auc	 0.8157410617844896 	train_auc	 0.8551629560708707
valid_accuracy	 0.8090900419687143 	train_accuracy	 0.8341884676192465
valid_loss	 0.41158995032310486 	train_loss	 0.36599305272102356
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 153
valid_auc	 0.816338589750603 	train_auc	 0.8553924757350091
valid_accuracy	 0.8116653948874475 	train_accuracy	 0.8346060913402739
valid_loss	 0.41190534830093384 	train_loss	 0.3658841550350189
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 154
valid_auc	 0.8158700722093685 	train_auc	 0.855531006842603
valid_accuracy	 0.8105207935902328 	train_accuracy	 0.8346508367389553
valid_loss	 0.41294291615486145 	train_loss	 0.3657710552215576
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 155
valid_auc	 0.8160260391359331 	train_auc	 0.8558259653988181
valid_accuracy	 0.8117130866081648 	train_accuracy	 0.8346657518718492
valid_loss	 0.4115666151046753 	train_loss	 0.3651121258735657
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 156
valid_auc	 0.8161616596355851 	train_auc	 0.8562786366592674
valid_accuracy	 0.8112838611217092 	train_accuracy	 0.8345464308086985
valid_loss	 0.4124445617198944 	train_loss	 0.365060031414032
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 157
valid_auc	 0.8154357178943439 	train_auc	 0.8553581436007643
valid_accuracy	 0.8106161770316673 	train_accuracy	 0.834054231423202
valid_loss	 0.4134972393512726 	train_loss	 0.36592739820480347
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 158
valid_auc	 0.8163155617517743 	train_auc	 0.8566313093442801
valid_accuracy	 0.8126192293017932 	train_accuracy	 0.8348745637323629
valid_loss	 0.4123659133911133 	train_loss	 0.3647308945655823
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 159
valid_auc	 0.8160232503011405 	train_auc	 0.8567901637629707
valid_accuracy	 0.8120946203739031 	train_accuracy	 0.8349789696626196
valid_loss	 0.41247475147247314 	train_loss	 0.3644222617149353
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 160
valid_auc	 0.8161390137607545 	train_auc	 0.8574014162508762
valid_accuracy	 0.8117130866081648 	train_accuracy	 0.8348447334665752
valid_loss	 0.41154494881629944 	train_loss	 0.3635421395301819
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 161
valid_auc	 0.8159734669185199 	train_auc	 0.857262176036737
valid_accuracy	 0.8104731018695155 	train_accuracy	 0.8352026966560272
valid_loss	 0.4120519459247589 	train_loss	 0.3635823130607605
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 162
valid_auc	 0.8162191592413941 	train_auc	 0.8578023174416842
valid_accuracy	 0.8115700114460129 	train_accuracy	 0.835307102586284
valid_loss	 0.4116394519805908 	train_loss	 0.36299076676368713
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 163
valid_auc	 0.8163959418699567 	train_auc	 0.8579894666667851
valid_accuracy	 0.8126669210225105 	train_accuracy	 0.83548608418101
valid_loss	 0.4122285544872284 	train_loss	 0.36305519938468933
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 164
valid_auc	 0.8156188022169091 	train_auc	 0.8580742445877391
valid_accuracy	 0.8101869515452117 	train_accuracy	 0.8357694717059929
valid_loss	 0.41220253705978394 	train_loss	 0.3628542721271515
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 165
valid_auc	 0.8173083735300963 	train_auc	 0.8583603889231376
valid_accuracy	 0.8130007630675314 	train_accuracy	 0.8355904901112668
valid_loss	 0.4132642149925232 	train_loss	 0.3636558949947357
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 166
valid_auc	 0.8163123438654751 	train_auc	 0.8586781248811981
valid_accuracy	 0.8113315528424265 	train_accuracy	 0.8364555678191092
valid_loss	 0.4116802513599396 	train_loss	 0.3620518147945404
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 167
valid_auc	 0.8160484704850105 	train_auc	 0.8588583874381628
valid_accuracy	 0.8115223197252956 	train_accuracy	 0.8358589625033559
valid_loss	 0.4122588634490967 	train_loss	 0.3618674874305725
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 168
valid_auc	 0.816994622911994 	train_auc	 0.8594592976864839
valid_accuracy	 0.8129053796260969 	train_accuracy	 0.8359484533007189
valid_loss	 0.41274967789649963 	train_loss	 0.3621666133403778
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 169
valid_auc	 0.8161469847332747 	train_auc	 0.858937858966667
valid_accuracy	 0.8102346432659291 	train_accuracy	 0.8359931986994004
valid_loss	 0.4120577573776245 	train_loss	 0.36183464527130127
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 170
valid_auc	 0.817004491096645 	train_auc	 0.8600687139059475
valid_accuracy	 0.8126192293017932 	train_accuracy	 0.8369030218059242
valid_loss	 0.412200003862381 	train_loss	 0.36125507950782776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 171
valid_auc	 0.8164600649583982 	train_auc	 0.8600532504883098
valid_accuracy	 0.8111884776802747 	train_accuracy	 0.8365898040151538
valid_loss	 0.41162458062171936 	train_loss	 0.3605121076107025
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 172
valid_auc	 0.8164727689053501 	train_auc	 0.860254223322163
valid_accuracy	 0.8118561617703167 	train_accuracy	 0.8365003132177907
valid_loss	 0.41315510869026184 	train_loss	 0.36090710759162903
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 173
valid_auc	 0.8168076301983611 	train_auc	 0.8605468878657857
valid_accuracy	 0.8115223197252956 	train_accuracy	 0.8372162395966948
valid_loss	 0.41228142380714417 	train_loss	 0.3601938784122467
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 174
valid_auc	 0.8162580420341761 	train_auc	 0.861072089083764
valid_accuracy	 0.8115223197252956 	train_accuracy	 0.8368284461414551
valid_loss	 0.4113559424877167 	train_loss	 0.3594011664390564
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 175
valid_auc	 0.8170636331652523 	train_auc	 0.8610160141023723
valid_accuracy	 0.8134776802747044 	train_accuracy	 0.8372311547295886
valid_loss	 0.4140908122062683 	train_loss	 0.36111563444137573
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 176
valid_auc	 0.8166862287337939 	train_auc	 0.8618988239690204
valid_accuracy	 0.8108069439145364 	train_accuracy	 0.8370372580019688
valid_loss	 0.40988320112228394 	train_loss	 0.3585717976093292
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 177
valid_auc	 0.8162414967354544 	train_auc	 0.8600832479442049
valid_accuracy	 0.8114269362838611 	train_accuracy	 0.836843361274349
valid_loss	 0.4143161475658417 	train_loss	 0.36110252141952515
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 178
valid_auc	 0.8166659694579684 	train_auc	 0.8615222559809856
valid_accuracy	 0.8091377336894315 	train_accuracy	 0.8372311547295886
valid_loss	 0.4123828709125519 	train_loss	 0.35956940054893494
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 179
valid_auc	 0.815978347379407 	train_auc	 0.8617724998130922
valid_accuracy	 0.8117607783288822 	train_accuracy	 0.837648778450616
valid_loss	 0.41220563650131226 	train_loss	 0.358694463968277
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 180
valid_auc	 0.8173819089359631 	train_auc	 0.86245805237897
valid_accuracy	 0.8140022892025944 	train_accuracy	 0.8382304686334755
valid_loss	 0.4138404428958893 	train_loss	 0.3594067096710205
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 181
valid_auc	 0.8170239391969657 	train_auc	 0.8617730792695601
valid_accuracy	 0.8124761541396414 	train_accuracy	 0.837738269247979
valid_loss	 0.4151515066623688 	train_loss	 0.3599029779434204
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 182
valid_auc	 0.8165435154764242 	train_auc	 0.8628450115561083
valid_accuracy	 0.8115700114460129 	train_accuracy	 0.8382901291650509
valid_loss	 0.4126911759376526 	train_loss	 0.3575604259967804
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 183
valid_auc	 0.8164062659218333 	train_auc	 0.8627651947350511
valid_accuracy	 0.8124761541396414 	train_accuracy	 0.8381260627032187
valid_loss	 0.4129583239555359 	train_loss	 0.35785043239593506
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 184
valid_auc	 0.817248909672859 	train_auc	 0.862496833627602
valid_accuracy	 0.8114746280045784 	train_accuracy	 0.8385735166900337
valid_loss	 0.41420426964759827 	train_loss	 0.3585340976715088
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 185
valid_auc	 0.8167617820225272 	train_auc	 0.8632528589482514
valid_accuracy	 0.8118561617703167 	train_accuracy	 0.8391253766071056
valid_loss	 0.41193872690200806 	train_loss	 0.3569755554199219
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 186
valid_auc	 0.817461337096115 	train_auc	 0.8637182577451157
valid_accuracy	 0.8130484547882487 	train_accuracy	 0.8389314798794857
valid_loss	 0.4135149419307709 	train_loss	 0.3572789132595062
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 187
valid_auc	 0.8163061695461385 	train_auc	 0.8634005059115355
valid_accuracy	 0.810902327355971 	train_accuracy	 0.8385884318229275
valid_loss	 0.4130467176437378 	train_loss	 0.3568572700023651
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 188
valid_auc	 0.8181026417237574 	train_auc	 0.8640701505452246
valid_accuracy	 0.8142884395268981 	train_accuracy	 0.8380664021716433
valid_loss	 0.4146425426006317 	train_loss	 0.3584763705730438
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 189
valid_auc	 0.8166923494216922 	train_auc	 0.8640615837179232
valid_accuracy	 0.8110454025181228 	train_accuracy	 0.8390358858097425
valid_loss	 0.41342079639434814 	train_loss	 0.35625284910202026
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 190
valid_auc	 0.8164402950694474 	train_auc	 0.8642193982900752
valid_accuracy	 0.8117130866081648 	train_accuracy	 0.8385586015571399
valid_loss	 0.41227471828460693 	train_loss	 0.3557838797569275
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 191
valid_auc	 0.8167827183952615 	train_auc	 0.8646270650981822
valid_accuracy	 0.8107115604731019 	train_accuracy	 0.8391253766071056
valid_loss	 0.4127078950405121 	train_loss	 0.355479896068573
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 192
valid_auc	 0.8174641594505565 	train_auc	 0.8654219464147023
valid_accuracy	 0.8134776802747044 	train_accuracy	 0.838991140411061
valid_loss	 0.4135882258415222 	train_loss	 0.355478435754776
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 193
valid_auc	 0.8165180874707307 	train_auc	 0.8655853220490985
valid_accuracy	 0.8115223197252956 	train_accuracy	 0.8399158786504788
valid_loss	 0.41249585151672363 	train_loss	 0.354437917470932
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 194
valid_auc	 0.8159723808818939 	train_auc	 0.8649656363528486
valid_accuracy	 0.8100915681037771 	train_accuracy	 0.8391253766071056
valid_loss	 0.4151931405067444 	train_loss	 0.3553422689437866
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 195
valid_auc	 0.8176158693817046 	train_auc	 0.8660642216524816
valid_accuracy	 0.8126669210225105 	train_accuracy	 0.840169435909674
valid_loss	 0.4132138788700104 	train_loss	 0.35443997383117676
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 196
valid_auc	 0.8168439587938934 	train_auc	 0.8659871956154863
valid_accuracy	 0.8122853872567722 	train_accuracy	 0.8403036721057184
valid_loss	 0.41341277956962585 	train_loss	 0.35411536693573
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 197
valid_auc	 0.817190960903754 	train_auc	 0.8664451494551055
valid_accuracy	 0.8113792445631438 	train_accuracy	 0.8407511260925334
valid_loss	 0.4129728674888611 	train_loss	 0.3534867465496063
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 198
valid_auc	 0.817282335466792 	train_auc	 0.8671392225446859
valid_accuracy	 0.8124761541396414 	train_accuracy	 0.8402440115741431
valid_loss	 0.4132251441478729 	train_loss	 0.3536193072795868
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 199
valid_auc	 0.8171023148401408 	train_auc	 0.8671581474870915
valid_accuracy	 0.8126192293017932 	train_accuracy	 0.8406318050293828
valid_loss	 0.4132397174835205 	train_loss	 0.3528830111026764
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 200
valid_auc	 0.8168022000152314 	train_auc	 0.8672387131034931
valid_accuracy	 0.8112838611217092 	train_accuracy	 0.8411090892819855
valid_loss	 0.4131641685962677 	train_loss	 0.35255688428878784
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 201
valid_auc	 0.8173169009287893 	train_auc	 0.8676603411081891
valid_accuracy	 0.8121423120946204 	train_accuracy	 0.8411240044148793
valid_loss	 0.41306522488594055 	train_loss	 0.35220664739608765
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 202
valid_auc	 0.8160198581126668 	train_auc	 0.8673389379050851
valid_accuracy	 0.8096623426173216 	train_accuracy	 0.8408704471556842
valid_loss	 0.4134202003479004 	train_loss	 0.35241231322288513
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 203
valid_auc	 0.8170187436513785 	train_auc	 0.8679453748186909
valid_accuracy	 0.8124284624189241 	train_accuracy	 0.8410345136175164
valid_loss	 0.41427385807037354 	train_loss	 0.3525543808937073
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 204
valid_auc	 0.8163454679825677 	train_auc	 0.868782634512008
valid_accuracy	 0.8118084700495994 	train_accuracy	 0.8423917907108552
valid_loss	 0.4128078520298004 	train_loss	 0.3507002294063568
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 205
valid_auc	 0.8163933608569873 	train_auc	 0.8684834206550417
valid_accuracy	 0.8105207935902328 	train_accuracy	 0.8415714584016943
valid_loss	 0.41352713108062744 	train_loss	 0.3511025905609131
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 206
valid_auc	 0.8165307109705253 	train_auc	 0.8687856806273446
valid_accuracy	 0.81056848531095 	train_accuracy	 0.8418101005279957
valid_loss	 0.41326963901519775 	train_loss	 0.35074707865715027
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 207
valid_auc	 0.8164307084498477 	train_auc	 0.8692490294977316
valid_accuracy	 0.8110930942388401 	train_accuracy	 0.8418250156608895
valid_loss	 0.41336482763290405 	train_loss	 0.35016536712646484
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 208
valid_auc	 0.8170137894472637 	train_auc	 0.8687954328267815
valid_accuracy	 0.8118561617703167 	train_accuracy	 0.8417951853951019
valid_loss	 0.414493590593338 	train_loss	 0.35128602385520935
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 209
valid_auc	 0.8171905787797561 	train_auc	 0.8697461879331743
valid_accuracy	 0.8135730637161389 	train_accuracy	 0.8428392446976702
valid_loss	 0.4132940173149109 	train_loss	 0.3499983847141266
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 210
valid_auc	 0.8168861265122724 	train_auc	 0.8696100282313308
valid_accuracy	 0.812237695536055 	train_accuracy	 0.8424514512424306
valid_loss	 0.4142487943172455 	train_loss	 0.34987562894821167
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 211
valid_auc	 0.8162988555587377 	train_auc	 0.8698823019928984
valid_accuracy	 0.8093761922930179 	train_accuracy	 0.8417206097306327
valid_loss	 0.4147408902645111 	train_loss	 0.35011911392211914
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 212
valid_auc	 0.8172939064496096 	train_auc	 0.8703226842781637
valid_accuracy	 0.8123330789774895 	train_accuracy	 0.8427348387674134
valid_loss	 0.41348928213119507 	train_loss	 0.3493642508983612
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 213
valid_auc	 0.8176762047498147 	train_auc	 0.8702867387942326
valid_accuracy	 0.8126192293017932 	train_accuracy	 0.8420785729200847
valid_loss	 0.41483497619628906 	train_loss	 0.34970125555992126
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 214
valid_auc	 0.8167501171846926 	train_auc	 0.8702611944216048
valid_accuracy	 0.8107592521938192 	train_accuracy	 0.8425707723055812
valid_loss	 0.4150080978870392 	train_loss	 0.34913623332977295
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 215
valid_auc	 0.8162414431040159 	train_auc	 0.8706365889441442
valid_accuracy	 0.8118561617703167 	train_accuracy	 0.8429883960266086
valid_loss	 0.41521188616752625 	train_loss	 0.3488840162754059
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 216
valid_auc	 0.8168452057248343 	train_auc	 0.8712134517490462
valid_accuracy	 0.8119992369324686 	train_accuracy	 0.8430480565581839
valid_loss	 0.41452711820602417 	train_loss	 0.34804296493530273
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 217
valid_auc	 0.8174032274326952 	train_auc	 0.8718618205404586
valid_accuracy	 0.8137161388782908 	train_accuracy	 0.8436148316081497
valid_loss	 0.41390684247016907 	train_loss	 0.34765422344207764
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 218
valid_auc	 0.8167436076688666 	train_auc	 0.870298050763477
valid_accuracy	 0.8111884776802747 	train_accuracy	 0.8421829788503415
valid_loss	 0.41802409291267395 	train_loss	 0.35039761662483215
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 219
valid_auc	 0.8169135992165519 	train_auc	 0.8725923385313594
valid_accuracy	 0.8118084700495994 	train_accuracy	 0.8443755033857352
valid_loss	 0.41324111819267273 	train_loss	 0.346289724111557
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 220
valid_auc	 0.8160248056128518 	train_auc	 0.8725096541945622
valid_accuracy	 0.810902327355971 	train_accuracy	 0.8435253408107867
valid_loss	 0.4146692752838135 	train_loss	 0.34677237272262573
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 221
valid_auc	 0.8169694429517027 	train_auc	 0.8725808962505579
valid_accuracy	 0.8110930942388401 	train_accuracy	 0.8442263520567969
valid_loss	 0.4145423173904419 	train_loss	 0.34636837244033813
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 222
valid_auc	 0.8169112059136169 	train_auc	 0.8728856493409289
valid_accuracy	 0.8123330789774895 	train_accuracy	 0.8435402559436804
valid_loss	 0.4154207706451416 	train_loss	 0.3470848500728607
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 223
valid_auc	 0.8162432196454104 	train_auc	 0.8727150113177639
valid_accuracy	 0.8098054177794735 	train_accuracy	 0.8443307579870537
valid_loss	 0.41449326276779175 	train_loss	 0.3465532660484314
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 224
valid_auc	 0.8173839737463384 	train_auc	 0.8731501103623793
valid_accuracy	 0.8113792445631438 	train_accuracy	 0.8443158428541598
valid_loss	 0.4149531424045563 	train_loss	 0.34578773379325867
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 225
valid_auc	 0.8172414012714941 	train_auc	 0.8738417802951695
valid_accuracy	 0.8111884776802747 	train_accuracy	 0.8444948244488858
valid_loss	 0.4134521484375 	train_loss	 0.3448631465435028
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 226
valid_auc	 0.8166301704728899 	train_auc	 0.8742277816492878
valid_accuracy	 0.8113315528424265 	train_accuracy	 0.8455090534856665
valid_loss	 0.4139823019504547 	train_loss	 0.34448131918907166
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/mnt/zstack/anaconda3/envs/torch/lib/python3.7/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")

===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 227
valid_auc	 0.8162586789075061 	train_auc	 0.8744643189546
valid_accuracy	 0.8120469286531858 	train_accuracy	 0.8447782119738687
valid_loss	 0.4135720729827881 	train_loss	 0.3442132771015167
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 228
valid_auc	 0.8175866067281712 	train_auc	 0.8730788041428248
valid_accuracy	 0.8127146127432278 	train_accuracy	 0.8443755033857352
valid_loss	 0.4182264804840088 	train_loss	 0.3471042215824127
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 229
valid_auc	 0.8160649353365748 	train_auc	 0.8748452970297029
valid_accuracy	 0.8109977107974056 	train_accuracy	 0.8448080422396563
valid_loss	 0.4143441915512085 	train_loss	 0.34356191754341125
===== 设备: cuda =====
训练总段数: 19
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Training=====
===== 设备: cuda =====
训练总段数: 442
实际用段数: 442
实际元素数: 67046
最后一次所用q.shpe: torch.Size([10, 200])
===== 数据来自Train_eval=====
===== 设备: cuda =====
训练总段数: 142
实际用段数: 142
实际元素数: 20968
最后一次所用q.shpe: torch.Size([22, 200])
===== 数据来自Valid_eval=====
epoch 230
valid_auc	 0.8169271411547279 	train_auc	 0.8752143969086935
valid_accuracy	 0.8111884776802747 	train_accuracy	 0.8455836291501357
valid_loss	 0.4141983091831207 	train_loss	 0.3432786464691162


Start testing ......................
 Best epoch: 188
@ 使用预设Q-matrix:  qm_fold5_trained_0.99.json
===== 设备: cuda =====
训练总段数: 152
实际用段数: 152
实际元素数: 23284
最后一次所用q.shpe: torch.Size([8, 200])
===== 数据来自Test=====

test_auc	 0.8290150244357497
test_accuracy	 0.8105136574471741
test_loss	 0.41035839915275574
本次执行平均值auc：  0.8208898515075564
